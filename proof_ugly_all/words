
ZERO_LT_dimword
proof length: 1
proof time: 0.001077
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.122304
  inferstep time: 0.109385
  node_find time: 0.000054
  node_crea time: 0.00939
    pred time: 0.002953
    thmpred time: 0.0
    mc time: 0.008066
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "UINT_MAX_def" , DB.fetch "words" "dimword_def" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "word_2comp_def" , fcpTheory.tactictoe_thm_88 , fcpTheory.CART_EQ , fcpTheory.tactictoe_thm_26 , fcpTheory.EL_V2L , fcpTheory.FCP , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_BETA , fcpTheory.tactictoe_thm_29 , fcpTheory.FCP_CONCAT_def , fcpTheory.FCP_EXISTS_def , fcpTheory.FCP_TL , fcpTheory.FCP_UNIQUE ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007948

dimword_IS_TWICE_INT_MIN
Statistics
  infstep : 736
  nodes   : 137
  maxdepth: 6
Time: 10.0722
  inferstep time: 7.651671
  node_find time: 0.046598
  node_crea time: 2.259996
    pred time: 0.410077
    thmpred time: 0.00002
    mc time: 1.338838
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012753

dimword_sub_int_min
proof length: 3
proof time: 0.0068
Statistics
  infstep : 128
  nodes   : 18
  maxdepth: 3
Time: 1.400621
  inferstep time: 1.08136
  node_find time: 0.004299
  node_crea time: 0.274308
    pred time: 0.088935
    thmpred time: 0.000005
    mc time: 0.143297
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "word_2comp_def", DB.fetch "words" "INT_MIN_def", DB.fetch "words" "INT_MAX_def", DB.fetch "words" "word_L_def", DB.fetch "words" "dimword_def", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "ZERO_LT_dimword", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_TL, DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_msb_def", DB.fetch "words" "word_reduce_def"] THEN bossLib.RW_TAC bossLib.std_ss [(DB.fetch "fcp" "dimindex_def"), (DB.fetch "fcp" "tactictoe_thm_36"), (DB.fetch "fcp" "tactictoe_thm_37"), (DB.fetch "fcp" "tactictoe_thm_38"), pred_setTheory.FINITE_UNION] THEN
  BasicProvers.SRW_TAC [] [HolKernel.SYM arithmeticTheory.ONE, arithmeticTheory.ADD_SUB, arithmeticTheory.TIMES2]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00619

ONE_LT_dimword
proof length: 2
proof time: 0.009191
Statistics
  infstep : 158
  nodes   : 23
  maxdepth: 4
Time: 1.766177
  inferstep time: 1.460837
  node_find time: 0.005574
  node_crea time: 0.254882
    pred time: 0.061784
    thmpred time: 0.000007
    mc time: 0.16837
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "dimword_def", DB.fetch "words" "ZERO_LT_dimword", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_2comp_def", fcpTheory.FCP_TL, DB.fetch "words" "INT_MIN_def", fcpTheory.DIMINDEX_GE_1, fcpTheory.NOT_FINITE_IMP_dimindex_1, fcpTheory.dimindex_def, fcpTheory.index_bit0, fcpTheory.index_bit1, fcpTheory.index_one, fcpTheory.index_sum] THEN BasicProvers.SRW_TAC [] [arithmeticTheory.EXP, (DB.fetch "bit" "ZERO_LT_TWOEXP"), numLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 36020*)0 < n ==> 1n < 2 * n"])]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.034006

MOD_DIMINDEX
proof length: 4
proof time: 0.008113
Statistics
  infstep : 395
  nodes   : 79
  maxdepth: 6
Time: 4.723533
  inferstep time: 3.368535
  node_find time: 0.023252
  node_crea time: 1.239644
    pred time: 0.18257
    thmpred time: 0.000016
    mc time: 0.790691
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "dimword_def", DB.fetch "words" "ZERO_LT_dimword", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_2comp_def", fcpTheory.FCP_TL, DB.fetch "words" "INT_MIN_def", fcpTheory.DIMINDEX_GE_1, fcpTheory.NOT_FINITE_IMP_dimindex_1, fcpTheory.dimindex_def, fcpTheory.index_bit0, fcpTheory.index_bit1, fcpTheory.index_one, fcpTheory.index_sum] THENL [boolLib.ASM_REWRITE_TAC [fcpTheory.dimindex_def, fcpTheory.tactictoe_thm_87, fcpTheory.tactictoe_thm_38, fcpTheory.card_dimindex, bitTheory.BITS_ZERO3, bitTheory.BITS_THM2, bitTheory.DIV_MULT_THM2, numposrepTheory.tactictoe_thm_12, numposrepTheory.tactictoe_thm_13, fcpTheory.index_bit0, fcpTheory.index_bit1, bitTheory.BITS_THM, bitTheory.BITWISE_ONE_COMP_LEM, numeral_bitTheory.tactictoe_thm_37, bitTheory.BITS_ZERO4, bitTheory.BIT_COMP_THM3] THEN
  BasicProvers.SRW_TAC [] [arithmeticTheory.EXP, (DB.fetch "bit" "ZERO_LT_TWOEXP"), numLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 36020*)0 < n ==> 1n < 2 * n"])], BasicProvers.RW_TAC numLib.arith_ss [(DB.fetch "bit" "SBIT_def"), (DB.fetch "bit" "BITS_THM")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.02885

BITS_ZEROL_DIMINDEX
proof length: 4
proof time: 0.016629
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 3
Time: 0.611527
  inferstep time: 0.457055
  node_find time: 0.00042
  node_crea time: 0.111766
    pred time: 0.022394
    thmpred time: 0.000001
    mc time: 0.111048
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "dimword_def", DB.fetch "words" "ZERO_LT_dimword", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_2comp_def", fcpTheory.FCP_TL, DB.fetch "words" "INT_MIN_def", fcpTheory.DIMINDEX_GE_1, fcpTheory.NOT_FINITE_IMP_dimindex_1, fcpTheory.dimindex_def, fcpTheory.index_bit0, fcpTheory.index_bit1, fcpTheory.index_one, fcpTheory.index_sum] THENL [boolLib.ASM_REWRITE_TAC [fcpTheory.dimindex_def, fcpTheory.tactictoe_thm_87, fcpTheory.tactictoe_thm_38, fcpTheory.card_dimindex, bitTheory.BITS_ZERO3, bitTheory.BITS_THM2, bitTheory.DIV_MULT_THM2, numposrepTheory.tactictoe_thm_12, numposrepTheory.tactictoe_thm_13, fcpTheory.index_bit0, fcpTheory.index_bit1, bitTheory.BITS_THM, bitTheory.BITWISE_ONE_COMP_LEM, numeral_bitTheory.tactictoe_thm_37, bitTheory.BITS_ZERO4, bitTheory.BIT_COMP_THM3] THEN
  BasicProvers.SRW_TAC [] [arithmeticTheory.EXP, (DB.fetch "bit" "ZERO_LT_TWOEXP"), numLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 36020*)0 < n ==> 1n < 2 * n"])], BasicProvers.RW_TAC numLib.arith_ss [(DB.fetch "bit" "SBIT_def"), (DB.fetch "bit" "BITS_THM")]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00537

INT_MIN_SUM
Statistics
  infstep : 644
  nodes   : 163
  maxdepth: 6
Time: 10.038294
  inferstep time: 6.396815
  node_find time: 0.088869
  node_crea time: 3.432285
    pred time: 0.440845
    thmpred time: 0.000028
    mc time: 1.248399
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.032748

ZERO_LT_INT_MIN
proof length: 1
proof time: 0.000955
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.12592
  inferstep time: 0.111907
  node_find time: 0.000084
  node_crea time: 0.010109
    pred time: 0.002636
    thmpred time: 0.0
    mc time: 0.009034
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "INT_MAX_def" , DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "INT_MIN_def" , DB.fetch "words" "dimword_IS_TWICE_INT_MIN" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "word_L_def" , DB.fetch "words" "DIMINDEX_GT_0" , fcpTheory.tactictoe_thm_88 , DB.fetch "words" "ZERO_LT_dimword" , DB.fetch "words" "BITS_ZEROL_DIMINDEX" , fcpTheory.CART_EQ , fcpTheory.tactictoe_thm_26 , fcpTheory.EL_V2L , fcpTheory.FCP , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_BETA ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008556

ZERO_LT_INT_MAX
Statistics
  infstep : 517
  nodes   : 110
  maxdepth: 6
Time: 10.015439
  inferstep time: 6.986267
  node_find time: 0.048156
  node_crea time: 2.790385
    pred time: 0.60308
    thmpred time: 0.000026
    mc time: 1.276864
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.176356

ZERO_LE_INT_MAX
proof length: 1
proof time: 0.097236
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.09602
  inferstep time: 0.08391
  node_find time: 0.000051
  node_crea time: 0.008338
    pred time: 0.003382
    thmpred time: 0.0
    mc time: 0.005755
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "ZERO_LT_INT_MAX" , DB.fetch "words" "INT_MAX_def" , DB.fetch "words" "word_H_def" , arithmeticTheory.ZERO_LESS_EQ , numeralTheory.numeral_distrib , fcpTheory.DIMINDEX_GE_1 , fcpTheory.FCP_EVERY_def , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "word_asr_def" , DB.fetch "words" "word_bit_def" , DB.fetch "words" "word_bits_def" , DB.fetch "words" "word_lsl_def" , DB.fetch "words" "word_signed_bits_def" , DB.fetch "words" "word_slice_def" , fcpTheory.tactictoe_thm_16 , fcpTheory.tactictoe_thm_88])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005187

ZERO_LT_UINT_MAX
Statistics
  infstep : 963
  nodes   : 156
  maxdepth: 5
Time: 10.101159
  inferstep time: 7.765799
  node_find time: 0.090558
  node_crea time: 2.019289
    pred time: 0.442297
    thmpred time: 0.000037
    mc time: 1.044487
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005014

INT_MIN_LT_DIMWORD
proof length: 1
proof time: 0.00151
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.059141
  inferstep time: 0.045355
  node_find time: 0.000141
  node_crea time: 0.009711
    pred time: 0.002688
    thmpred time: 0.000001
    mc time: 0.008351
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "dimword_IS_TWICE_INT_MIN" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "ZERO_LT_INT_MIN" , DB.fetch "words" "INT_MIN_def" , DB.fetch "words" "INT_MAX_def" , DB.fetch "words" "word_L_def" , DB.fetch "words" "BITS_ZEROL_DIMINDEX" , DB.fetch "words" "ONE_LT_dimword" , DB.fetch "words" "ZERO_LT_dimword" , DB.fetch "words" "dimword_def" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "UINT_MAX_def" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "word_2comp_def" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006417

INT_MAX_LT_DIMWORD
proof length: 4
proof time: 0.012427
Statistics
  infstep : 84
  nodes   : 27
  maxdepth: 4
Time: 1.184158
  inferstep time: 0.841513
  node_find time: 0.005416
  node_crea time: 0.301255
    pred time: 0.077778
    thmpred time: 0.000057
    mc time: 0.162875
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "INT_MAX_def"), (DB.fetch "words" "INT_MIN_def")] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "dimword_def", DB.fetch "words" "ZERO_LT_dimword", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_2comp_def", fcpTheory.FCP_TL, DB.fetch "words" "INT_MIN_def", fcpTheory.DIMINDEX_GE_1, fcpTheory.NOT_FINITE_IMP_dimindex_1, fcpTheory.dimindex_def, fcpTheory.index_bit0, fcpTheory.index_bit1, fcpTheory.index_one, fcpTheory.index_sum] THEN
  BasicProvers.SRW_TAC [] [HolKernel.SYM arithmeticTheory.ONE, arithmeticTheory.ADD_SUB, arithmeticTheory.TIMES2] THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [arithmeticTheory.EXP, boolLib.GSYM arithmeticTheory.MULT_ASSOC, arithmeticTheory.EQ_MULT_LCANCEL, numTheory.NOT_SUC, boolLib.GSYM numTheory.NOT_SUC, prim_recTheory.INV_SUC_EQ]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010535

dimindex_lt_dimword
Statistics
  infstep : 1014
  nodes   : 151
  maxdepth: 6
Time: 10.061957
  inferstep time: 7.387533
  node_find time: 0.104508
  node_crea time: 2.316835
    pred time: 0.529374
    thmpred time: 0.000036
    mc time: 0.954886
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003537

BOUND_ORDER
proof length: 3
proof time: 0.006068
Statistics
  infstep : 14
  nodes   : 9
  maxdepth: 3
Time: 0.325189
  inferstep time: 0.201158
  node_find time: 0.000793
  node_crea time: 0.101546
    pred time: 0.03604
    thmpred time: 0.000001
    mc time: 0.064848
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "UINT_MAX_def"), (DB.fetch "words" "ONE_LT_dimword"), bossLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 17157*)1n < n ==> (0 < n - 1)"])] THENL [bossLib.SRW_TAC [] [(DB.fetch "words" "INT_MAX_def"), (DB.fetch "words" "INT_MIN_def")], bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010068

dimindex_dimword_iso
proof length: 1
proof time: 0.001208
Statistics
  infstep : 18
  nodes   : 4
  maxdepth: 2
Time: 0.327199
  inferstep time: 0.266897
  node_find time: 0.000966
  node_crea time: 0.051061
    pred time: 0.015161
    thmpred time: 0.0
    mc time: 0.020441
    inst time: 0.0
Proof found: (bossLib.ASM_SIMP_TAC bossLib.arith_ss [ ( DB.fetch "words" "dimword_def" ) , bitTheory.BITS_ZERO3 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008233

dimindex_dimword_le_iso
proof length: 1
proof time: 0.00166
Statistics
  infstep : 26
  nodes   : 7
  maxdepth: 2
Time: 0.488158
  inferstep time: 0.355245
  node_find time: 0.001835
  node_crea time: 0.111714
    pred time: 0.040531
    thmpred time: 0.000002
    mc time: 0.031976
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "saturate_n2w_def" , fcpTheory.FCP_EVERY_def , DB.fetch "words" "word_asr_def" , DB.fetch "words" "BITS_ZEROL_DIMINDEX" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "dimword_def" , DB.fetch "words" "dimindex_dimword_iso" , DB.fetch "words" "dimindex_lt_dimword" , DB.fetch "words" "BOUND_ORDER" , DB.fetch "words" "UINT_MAX_def" , DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "dimword_IS_TWICE_INT_MIN" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "INT_MIN_LT_DIMWORD" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007681

dimindex_dimword_lt_iso
proof length: 1
proof time: 0.001388
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.077737
  inferstep time: 0.057394
  node_find time: 0.000204
  node_crea time: 0.012335
    pred time: 0.003452
    thmpred time: 0.000001
    mc time: 0.013013
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ ] [ ( DB.fetch "words" "dimword_def" ) , arithmeticTheory.X_LT_EXP_X ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.0136

dimindex_int_min_iso
proof length: 4
proof time: 0.052273
Statistics
  infstep : 128
  nodes   : 22
  maxdepth: 3
Time: 2.14038
  inferstep time: 1.53539
  node_find time: 0.009839
  node_crea time: 0.512675
    pred time: 0.132312
    thmpred time: 0.000001
    mc time: 0.231414
    inst time: 0.0
Proof found: bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 26792*)dimindex(:'b)"] THENL [metisTools.METIS_TAC [DB.fetch "words" "INT_MIN_def", DB.fetch "words" "ZERO_LT_INT_MIN", DB.fetch "words" "INT_MAX_def", DB.fetch "words" "INT_MIN_SUM", DB.fetch "words" "dimword_IS_TWICE_INT_MIN", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "word_L_def", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "INT_MIN_LT_DIMWORD", arithmeticTheory.tactictoe_thm_11, fcpTheory.tactictoe_thm_16, fcpTheory.tactictoe_thm_89, DB.fetch "words" "BITS_ZEROL_DIMINDEX", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "nzcv_def"], boolLib.pop_assum boolLib.mp_tac THEN
  bossLib.SRW_TAC [bossLib.ARITH_ss] [arithmeticTheory.LESS_EQ_ADD_SUB, fcpTheory.DIMINDEX_GE_1, arithmeticTheory.EXP_ADD, (DB.fetch "words" "INT_MIN_def"), (DB.fetch "words" "dimword_def"), fcpTheory.index_sum]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.048413

dimindex_int_min_le_iso
proof length: 1
proof time: 0.00403
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.148804
  inferstep time: 0.130654
  node_find time: 0.000184
  node_crea time: 0.011278
    pred time: 0.003491
    thmpred time: 0.0
    mc time: 0.010593
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "dimindex_dimword_le_iso" , DB.fetch "words" "BOUND_ORDER" , fcpTheory.FCP_EVERY_def , DB.fetch "words" "word_asr_def" , DB.fetch "words" "INT_MIN_def" , DB.fetch "words" "dimindex_int_min_iso" , DB.fetch "words" "INT_MAX_def" , DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "dimword_IS_TWICE_INT_MIN" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "word_L_def" , DB.fetch "words" "ZERO_LT_INT_MIN" , DB.fetch "words" "INT_MIN_LT_DIMWORD" , DB.fetch "words" "word_bit_def" , DB.fetch "words" "word_bits_def" , DB.fetch "words" "word_lsl_def" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037121

dimindex_int_min_lt_iso
proof length: 1
proof time: 0.004983
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.087891
  inferstep time: 0.069817
  node_find time: 0.000148
  node_crea time: 0.01218
    pred time: 0.003474
    thmpred time: 0.0
    mc time: 0.011492
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "dimindex_dimword_lt_iso" , DB.fetch "words" "INT_MIN_LT_DIMWORD" , DB.fetch "words" "dimindex_lt_dimword" , DB.fetch "words" "INT_MIN_def" , DB.fetch "words" "dimindex_int_min_iso" , DB.fetch "words" "dimindex_int_min_le_iso" , DB.fetch "words" "BOUND_ORDER" , DB.fetch "words" "ZERO_LT_INT_MIN" , DB.fetch "words" "INT_MAX_def" , DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "dimword_IS_TWICE_INT_MIN" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "word_L_def" , fcpTheory.CART_EQ , fcpTheory.tactictoe_thm_26 , fcpTheory.EL_V2L ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033259

dimindex_int_max_iso
Statistics
  infstep : 642
  nodes   : 96
  maxdepth: 5
Time: 10.00897
  inferstep time: 8.18555
  node_find time: 0.064657
  node_crea time: 1.58559
    pred time: 0.350755
    thmpred time: 0.000026
    mc time: 0.636816
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.024997

dimindex_int_max_le_iso
proof length: 3
proof time: 0.011808
Statistics
  infstep : 70
  nodes   : 23
  maxdepth: 4
Time: 1.889116
  inferstep time: 1.389151
  node_find time: 0.007694
  node_crea time: 0.452041
    pred time: 0.131557
    thmpred time: 0.000005
    mc time: 0.190974
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "dimindex_dimword_le_iso", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "dimindex_int_max_iso", DB.fetch "words" "ZERO_LT_INT_MAX", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "ZERO_LE_INT_MAX", DB.fetch "words" "INT_MAX_def", DB.fetch "words" "word_H_def", DB.fetch "words" "INT_MAX_LT_DIMWORD", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_asr_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def"] THEN bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")] THEN
  bossLib.SIMP_TAC (bossLib.srw_ss ()) [(DB.fetch "words" "tactictoe_thm_3")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01038

dimindex_int_max_lt_iso
proof length: 3
proof time: 0.015678
Statistics
  infstep : 46
  nodes   : 17
  maxdepth: 3
Time: 1.077319
  inferstep time: 0.824489
  node_find time: 0.003205
  node_crea time: 0.216299
    pred time: 0.062773
    thmpred time: 0.000002
    mc time: 0.118699
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "dimindex_dimword_lt_iso", DB.fetch "words" "dimindex_int_min_lt_iso", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "INT_MAX_LT_DIMWORD", DB.fetch "words" "dimindex_lt_dimword", DB.fetch "words" "ZERO_LT_INT_MAX", DB.fetch "words" "dimindex_int_max_iso", DB.fetch "words" "dimindex_int_max_le_iso", DB.fetch "words" "INT_MAX_def", DB.fetch "words" "word_H_def", DB.fetch "words" "ZERO_LE_INT_MAX", fcpTheory.CART_EQ, fcpTheory.tactictoe_thm_26, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_APPLY_UPDATE_THM] THEN bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")] THEN
  bossLib.SIMP_TAC (bossLib.srw_ss ()) [(DB.fetch "words" "tactictoe_thm_0")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012939

dimindex_uint_max_iso
Statistics
  infstep : 517
  nodes   : 104
  maxdepth: 5
Time: 10.019488
  inferstep time: 8.066731
  node_find time: 0.06003
  node_crea time: 1.740264
    pred time: 0.371816
    thmpred time: 0.000027
    mc time: 0.724759
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035486

dimindex_uint_max_le_iso
proof length: 2
proof time: 0.00704
Statistics
  infstep : 11
  nodes   : 6
  maxdepth: 2
Time: 0.431323
  inferstep time: 0.351563
  node_find time: 0.00084
  node_crea time: 0.067403
    pred time: 0.021389
    thmpred time: 0.000003
    mc time: 0.04096
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "dimindex_dimword_le_iso", DB.fetch "words" "dimindex_int_max_le_iso", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "dimindex_uint_max_iso", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "word_T_def", DB.fetch "words" "ZERO_LT_UINT_MAX", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_asr_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def", fcpTheory.DIMINDEX_GE_1] THEN bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018581

dimindex_uint_max_lt_iso
proof length: 2
proof time: 0.010871
Statistics
  infstep : 12
  nodes   : 6
  maxdepth: 2
Time: 0.642726
  inferstep time: 0.533996
  node_find time: 0.000977
  node_crea time: 0.086376
    pred time: 0.019372
    thmpred time: 0.0
    mc time: 0.064912
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "dimindex_dimword_lt_iso", DB.fetch "words" "dimindex_int_max_lt_iso", DB.fetch "words" "dimindex_int_min_lt_iso", DB.fetch "words" "dimindex_uint_max_iso", DB.fetch "words" "dimindex_uint_max_le_iso", DB.fetch "words" "ZERO_LT_UINT_MAX", DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "word_T_def", DB.fetch "words" "dimindex_lt_dimword", fcpTheory.CART_EQ, fcpTheory.tactictoe_thm_26, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_BETA] THEN bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014801
Replaying proof: 0.00701
Replaying proof: 0.023965
Replaying proof: 0.002529

w2n_n2w
Statistics
  infstep : 511
  nodes   : 97
  maxdepth: 5
Time: 10.055268
  inferstep time: 7.044819
  node_find time: 0.079723
  node_crea time: 2.753321
    pred time: 0.614496
    thmpred time: 0.000026
    mc time: 1.362554
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009584
Replaying proof: 0.037588

n2w_w2n
Statistics
  infstep : 738
  nodes   : 173
  maxdepth: 6
Time: 10.021812
  inferstep time: 7.566814
  node_find time: 0.099386
  node_crea time: 2.139899
    pred time: 0.401097
    thmpred time: 0.000022
    mc time: 0.979801
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008444

word_nchotomy
proof length: 1
proof time: 0.039362
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.056899
  inferstep time: 0.043978
  node_find time: 0.000119
  node_crea time: 0.009313
    pred time: 0.002997
    thmpred time: 0.0
    mc time: 0.006927
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "n2w_def" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "add_with_carry_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_sign_extend_def" , DB.fetch "words" "n2w_w2n" , DB.fetch "words" "sw2sw_def" , DB.fetch "words" "w2w_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "word_add_def" , DB.fetch "words" "word_div_def" , DB.fetch "words" "word_log2_def" , DB.fetch "words" "word_mod_def" , DB.fetch "words" "word_mul_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005583

n2w_mod
proof length: 4
proof time: 0.00648
Statistics
  infstep : 349
  nodes   : 92
  maxdepth: 5
Time: 8.0081
  inferstep time: 6.298403
  node_find time: 0.038937
  node_crea time: 1.483128
    pred time: 0.305576
    thmpred time: 0.00002
    mc time: 0.790896
    inst time: 0.0
Proof found: boolLib.STRIP_ASSUME_TAC (DB.fetch "words" "EXISTS_HB") THEN bossLib.ASM_SIMP_TAC bossLib.arith_ss [(DB.fetch "words" "dimword_def"), bitTheory.BITS_ZERO3] THEN
  bossLib.SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [(DB.fetch "words" "tactictoe_thm_9"), (DB.fetch "words" "tactictoe_thm_10"), (DB.fetch "words" "dimword_def")] THEN
  simpLib.FULL_SIMP_TAC numLib.arith_ss [arithmeticTheory.MIN_DEF, boolLib.GSYM (DB.fetch "bit" "BITS_ZERO3"), (DB.fetch "bit" "BITS_ZERO"), (DB.fetch "bit" "BIT_def"), (DB.fetch "bit" "BITS_COMP_THM2")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067559

n2w_11
proof length: 1
proof time: 0.059413
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.103548
  inferstep time: 0.083894
  node_find time: 0.000156
  node_crea time: 0.013369
    pred time: 0.003174
    thmpred time: 0.000001
    mc time: 0.012725
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "n2w_mod" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "n2w_def" , DB.fetch "words" "word_nchotomy" , DB.fetch "words" "add_with_carry_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "BITS_ZEROL_DIMINDEX" , DB.fetch "words" "dimword_def" , DB.fetch "words" "INT_MIN_SUM" , DB.fetch "words" "UINT_MAX_def" , DB.fetch "words" "dimindex_dimword_iso" , DB.fetch "words" "dimindex_dimword_le_iso"])
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.202258

ranged_word_nchotomy
Statistics
  infstep : 538
  nodes   : 163
  maxdepth: 6
Time: 10.024022
  inferstep time: 7.822998
  node_find time: 0.072722
  node_crea time: 1.893975
    pred time: 0.354259
    thmpred time: 0.000033
    mc time: 0.916152
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.120144

dimindex_1_cases
proof length: 4
proof time: 0.010266
Statistics
  infstep : 50
  nodes   : 27
  maxdepth: 4
Time: 2.082252
  inferstep time: 1.574293
  node_find time: 0.004953
  node_crea time: 0.445187
    pred time: 0.093258
    thmpred time: 0.000003
    mc time: 0.277156
    inst time: 0.0
Proof found: bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "n2w_def"), arithmeticTheory.MIN_DEF, bitTheory.BIT_def, boolLib.GSYM bitTheory.BITS_ZERO3, bitTheory.BITS_COMP_THM2] THEN simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "ONE"), prim_recTheory.LESS_THM, prim_recTheory.NOT_LESS_0] THEN
  boolLib.REPEAT boolLib.STRIP_TAC THEN
  BasicProvers.RW_TAC numLib.arith_ss [(DB.fetch "bit" "SBIT_def"), (DB.fetch "bit" "BITS_THM")]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.162835

mod_dimindex
Statistics
  infstep : 838
  nodes   : 130
  maxdepth: 5
Time: 10.007826
  inferstep time: 7.41951
  node_find time: 0.11428
  node_crea time: 2.204155
    pred time: 0.378178
    thmpred time: 0.000015
    mc time: 1.133452
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.026978

WORD_INDUCT
Statistics
  infstep : 604
  nodes   : 142
  maxdepth: 6
Time: 10.000445
  inferstep time: 7.489709
  node_find time: 0.091703
  node_crea time: 2.220737
    pred time: 0.394268
    thmpred time: 0.000024
    mc time: 1.018461
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.138823

w2n_11
proof length: 1
proof time: 0.104296
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.10781
  inferstep time: 0.093435
  node_find time: 0.000134
  node_crea time: 0.010157
    pred time: 0.002719
    thmpred time: 0.000001
    mc time: 0.007988
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_add_def" , DB.fetch "words" "word_div_def" , DB.fetch "words" "word_mod_def" , DB.fetch "words" "word_mul_def" , DB.fetch "words" "n2w_w2n" , DB.fetch "words" "w2n_def" , DB.fetch "words" "saturate_w2w_def" , DB.fetch "words" "sw2sw_def" , DB.fetch "words" "w2l_def" , DB.fetch "words" "w2s_def" , DB.fetch "words" "w2w_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "word_asr_bv_def" , DB.fetch "words" "word_log2_def" , DB.fetch "words" "word_lsl_bv_def" , DB.fetch "words" "word_lsr_bv_def"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030414

w2n_lt
proof length: 3
proof time: 0.001565
Statistics
  infstep : 794
  nodes   : 195
  maxdepth: 6
Time: 10.048168
  inferstep time: 7.172425
  node_find time: 0.143858
  node_crea time: 2.386653
    pred time: 0.375678
    thmpred time: 0.000022
    mc time: 1.187976
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Q.ISPEC_THEN [HolKernel.QUOTE " (*#loc 1 23869*)w"] boolLib.STRUCT_CASES_TAC (DB.fetch "words" "word_nchotomy") THEN
  bossLib.SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [(DB.fetch "words" "tactictoe_thm_9"), (DB.fetch "words" "tactictoe_thm_10"), (DB.fetch "words" "dimword_def")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005591

word_0_n2w
proof length: 1
proof time: 0.000803
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.138604
  inferstep time: 0.118692
  node_find time: 0.000242
  node_crea time: 0.014111
    pred time: 0.004034
    thmpred time: 0.0
    mc time: 0.01138
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "nzcv_def" , DB.fetch "words" "concat_word_list_def" , DB.fetch "words" "dimindex_1_cases" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "word_compare_def" , DB.fetch "words" "WORD_INDUCT" , DB.fetch "words" "add_with_carry_def" , DB.fetch "words" "n2w_w2n" , DB.fetch "words" "saturate_sub_def" , DB.fetch "words" "sw2sw_def" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "w2w_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "word_add_def" , DB.fetch "words" "word_div_def" , DB.fetch "words" "word_log2_def" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00451

word_1_n2w
proof length: 1
proof time: 0.000646
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.143463
  inferstep time: 0.114772
  node_find time: 0.000372
  node_crea time: 0.017456
    pred time: 0.003981
    thmpred time: 0.0
    mc time: 0.020097
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01471

w2n_eq_0
proof length: 1
proof time: 0.04778
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.084562
  inferstep time: 0.06675
  node_find time: 0.000191
  node_crea time: 0.012259
    pred time: 0.003345
    thmpred time: 0.000001
    mc time: 0.01036
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_0_n2w" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "concat_word_list_def" , DB.fetch "words" "dimindex_1_cases" , DB.fetch "words" "word_compare_def" , DB.fetch "words" "WORD_INDUCT" , DB.fetch "words" "n2w_w2n" , DB.fetch "words" "sw2sw_def" , DB.fetch "words" "w2w_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "word_add_def" , DB.fetch "words" "word_div_def" , DB.fetch "words" "word_log2_def" , DB.fetch "words" "word_mod_def" , DB.fetch "words" "word_mul_def"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057742

n2w_dimword
proof length: 1
proof time: 0.000816
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.133345
  inferstep time: 0.118018
  node_find time: 0.00024
  node_crea time: 0.010566
    pred time: 0.003161
    thmpred time: 0.0
    mc time: 0.008215
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "WORD_INDUCT" , DB.fetch "words" "concat_word_list_def" , DB.fetch "words" "dimindex_1_cases" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "w2n_eq_0" , DB.fetch "words" "word_0_n2w" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "word_compare_def" , DB.fetch "words" "ranged_word_nchotomy" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "n2w_11" , DB.fetch "words" "n2w_mod" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "w2n_lt" , DB.fetch "words" "BITS_ZEROL_DIMINDEX" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002928

word_2comp_dimindex_1
Statistics
  infstep : 507
  nodes   : 181
  maxdepth: 6
Time: 10.001979
  inferstep time: 7.127581
  node_find time: 0.085224
  node_crea time: 2.596326
    pred time: 0.40094
    thmpred time: 0.000018
    mc time: 1.356159
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.183638

word_add_n2w
Statistics
  infstep : 439
  nodes   : 159
  maxdepth: 6
Time: 10.067891
  inferstep time: 7.862952
  node_find time: 0.094691
  node_crea time: 1.928596
    pred time: 0.422697
    thmpred time: 0.000026
    mc time: 0.838326
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077191

word_mul_n2w
Statistics
  infstep : 266
  nodes   : 117
  maxdepth: 6
Time: 10.058288
  inferstep time: 6.441897
  node_find time: 0.071318
  node_crea time: 3.403292
    pred time: 0.625197
    thmpred time: 0.000024
    mc time: 1.883702
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.074909

word_log2_n2w
proof length: 1
proof time: 0.043743
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.167766
  inferstep time: 0.11155
  node_find time: 0.000288
  node_crea time: 0.037669
    pred time: 0.008069
    thmpred time: 0.0
    mc time: 0.04005
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_log2_def" , DB.fetch "words" "n2w_11" , DB.fetch "words" "n2w_mod" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "ranged_word_nchotomy" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "WORD_INDUCT" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "n2w_def" , DB.fetch "words" "word_nchotomy" , DB.fetch "words" "word_add_n2w" , DB.fetch "words" "word_mul_n2w" , DB.fetch "words" "add_with_carry_def" , DB.fetch "words" "word_2comp_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008896
Replaying proof: 0.008403
Replaying proof: 0.000339

word_1comp_n2w
Statistics
  infstep : 324
  nodes   : 155
  maxdepth: 6
Time: 10.049329
  inferstep time: 7.168473
  node_find time: 0.053239
  node_crea time: 2.663253
    pred time: 0.477348
    thmpred time: 0.000027
    mc time: 1.510326
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008906

word_2comp_n2w
proof length: 1
proof time: 0.029195
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.053379
  inferstep time: 0.032074
  node_find time: 0.000245
  node_crea time: 0.014601
    pred time: 0.003405
    thmpred time: 0.0
    mc time: 0.01358
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_1comp_n2w" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "n2w_11" , DB.fetch "words" "n2w_mod" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "word_log2_n2w" , DB.fetch "words" "UINT_MAX_def" , DB.fetch "words" "dimword_sub_int_min" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "ranged_word_nchotomy" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "WORD_INDUCT" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "word_2comp_dimindex_1"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005675

word_lsb
Statistics
  infstep : 724
  nodes   : 89
  maxdepth: 5
Time: 10.050344
  inferstep time: 8.274338
  node_find time: 0.105016
  node_crea time: 1.345171
    pred time: 0.393472
    thmpred time: 0.000028
    mc time: 0.498171
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004732

word_msb
proof length: 3
proof time: 0.09012
Statistics
  infstep : 73
  nodes   : 18
  maxdepth: 3
Time: 1.950738
  inferstep time: 1.5378
  node_find time: 0.010221
  node_crea time: 0.340799
    pred time: 0.084858
    thmpred time: 0.000005
    mc time: 0.187158
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [boolLib.FUN_EQ_THM, (DB.fetch "words" "word_lsb_def"), (DB.fetch "words" "word_bit_def")] THEN bossLib.ASM_SIMP_TAC bossLib.arith_ss [(DB.fetch "words" "dimword_def"), bitTheory.BITS_ZERO3] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_msb_def", DB.fetch "words" "word_asr_def", DB.fetch "words" "nzcv_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "word_quot_def", DB.fetch "words" "word_rem_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_rrx_def", fcpTheory.FCP_TL, DB.fetch "words" "BITS_ZEROL_DIMINDEX", DB.fetch "words" "MOD_DIMINDEX"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009016

word_lsb_n2w
proof length: 4
proof time: 0.002021
Statistics
  infstep : 73
  nodes   : 27
  maxdepth: 4
Time: 1.82822
  inferstep time: 1.47713
  node_find time: 0.00939
  node_crea time: 0.281807
    pred time: 0.071946
    thmpred time: 0.000004
    mc time: 0.156526
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [boolLib.FUN_EQ_THM, (DB.fetch "words" "word_lsb_def"), (DB.fetch "words" "word_bit_def")] THEN boolLib.STRIP_ASSUME_TAC (DB.fetch "words" "EXISTS_HB") THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "n2w_def"), arithmeticTheory.MIN_DEF, bitTheory.BIT_def, boolLib.GSYM bitTheory.BITS_ZERO3, bitTheory.BITS_COMP_THM2] THEN
  simpLib.SIMP_TAC numLib.std_ss [HolKernel.SYM bitTheory.BIT0_ODD, bitTheory.BIT_def]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005712

word_msb_n2w
proof length: 3
proof time: 0.003687
Statistics
  infstep : 28
  nodes   : 14
  maxdepth: 4
Time: 0.944354
  inferstep time: 0.715837
  node_find time: 0.003626
  node_crea time: 0.186458
    pred time: 0.044838
    thmpred time: 0.000002
    mc time: 0.119634
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_msb_def", DB.fetch "words" "word_msb", DB.fetch "words" "nzcv_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "word_bit_def", fcpTheory.FCP_TL, DB.fetch "words" "word_bits_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "BITS_ZEROL_DIMINDEX", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "INT_MIN_def", DB.fetch "words" "word_asr_def"] THEN boolLib.STRIP_ASSUME_TAC (DB.fetch "words" "EXISTS_HB") THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "n2w_def"), arithmeticTheory.MIN_DEF, bitTheory.BIT_def, boolLib.GSYM bitTheory.BITS_ZERO3, bitTheory.BITS_COMP_THM2]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009361

word_msb_n2w_numeric
Statistics
  infstep : 382
  nodes   : 144
  maxdepth: 6
Time: 10.005939
  inferstep time: 7.590872
  node_find time: 0.068356
  node_crea time: 2.159375
    pred time: 0.433829
    thmpred time: 0.000027
    mc time: 1.157833
    inst time: 0.0
Proof status: Time Out
Org tac number: 19
Original proof time: 0.0
Replaying proof: 1.179785

word_and_n2w
proof length: 3
proof time: 0.039798
Statistics
  infstep : 287
  nodes   : 100
  maxdepth: 6
Time: 7.607028
  inferstep time: 5.68147
  node_find time: 0.048229
  node_crea time: 1.684193
    pred time: 0.363545
    thmpred time: 0.000025
    mc time: 0.852703
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_and_def", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "n2w_11", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "n2w_mod", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "word_add_n2w", DB.fetch "words" "word_mul_n2w", DB.fetch "words" "n2w_def"] THEN bossLib.SIMP_TAC bossLib.std_ss [(DB.fetch "fcp" "CART_EQ"), (DB.fetch "fcp" "FCP_BETA")] THEN
  bossLib.srw_tac [(bossLib.rewrites [bitTheory.tactictoe_thm_38, bitTheory.BITWISE_COR, bitTheory.BITWISE_THM, bitTheory.BITWISE_NOT_COR, bitTheory.tactictoe_thm_45, bitTheory.BITWISE_def, bitTheory.tactictoe_thm_32, fcpTheory.tactictoe_thm_20, fcpTheory.tactictoe_thm_23, DB.fetch "words" "word_lsl_def", fcpTheory.tactictoe_thm_29, fcpTheory.FCP_EXISTS_def, fcpTheory.FCP_BETA, fcpTheory.CART_EQ, fcpTheory.tactictoe_thm_26, fcpTheory.EL_V2L])] [bitTheory.tactictoe_thm_38, bitTheory.BITWISE_COR, bitTheory.BITWISE_THM, bitTheory.BITWISE_NOT_COR, bitTheory.tactictoe_thm_45, bitTheory.BITWISE_def, bitTheory.tactictoe_thm_32, fcpTheory.tactictoe_thm_20, fcpTheory.tactictoe_thm_23, DB.fetch "words" "word_lsl_def", fcpTheory.tactictoe_thm_29, fcpTheory.FCP_EXISTS_def, fcpTheory.FCP_BETA, fcpTheory.CART_EQ, fcpTheory.tactictoe_thm_26, fcpTheory.EL_V2L]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008032

word_or_n2w
proof length: 2
proof time: 0.007382
Statistics
  infstep : 76
  nodes   : 36
  maxdepth: 4
Time: 2.741828
  inferstep time: 2.133293
  node_find time: 0.011688
  node_crea time: 0.535638
    pred time: 0.136299
    thmpred time: 0.000005
    mc time: 0.264345
    inst time: 0.0
Proof found: bossLib.SIMP_TAC bossLib.std_ss [DB.fetch "words" "word_and_n2w", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_def", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "WORD_INDUCT"] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008152

word_xor_n2w
proof length: 2
proof time: 0.021803
Statistics
  infstep : 46
  nodes   : 19
  maxdepth: 3
Time: 1.540918
  inferstep time: 1.264845
  node_find time: 0.006401
  node_crea time: 0.227451
    pred time: 0.061169
    thmpred time: 0.000002
    mc time: 0.127884
    inst time: 0.0
Proof found: bossLib.SIMP_TAC bossLib.std_ss [DB.fetch "words" "reduce_xor_def", DB.fetch "words" "word_lt_def", rich_listTheory.MAP_SND_FILTER_NEQ, DB.fetch "words" "word_xor_def", DB.fetch "words" "word_and_n2w", DB.fetch "words" "word_or_n2w", DB.fetch "words" "word_le_def", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "n2w_mod", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_1comp_n2w"] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010333

word_nand_n2w
proof length: 2
proof time: 0.004202
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.277858
  inferstep time: 0.237614
  node_find time: 0.000661
  node_crea time: 0.024746
    pred time: 0.006536
    thmpred time: 0.000001
    mc time: 0.024275
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "reduce_nand_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_xor_n2w", DB.fetch "words" "word_and_n2w", DB.fetch "words" "word_or_n2w", patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def, patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_REWRITE, patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_THM, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_1, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_2, DB.fetch "words" "word_hi_def", rich_listTheory.EVERY_FOLDL, quantHeuristicsTheory.GUESS_RULES_CONJ, patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def, DB.fetch "words" "nzcv_def", DB.fetch "words" "word_msb_n2w"] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012837

word_nor_n2w
proof length: 2
proof time: 0.004526
Statistics
  infstep : 8
  nodes   : 6
  maxdepth: 2
Time: 0.508169
  inferstep time: 0.356824
  node_find time: 0.001739
  node_crea time: 0.119633
    pred time: 0.026462
    thmpred time: 0.000001
    mc time: 0.091637
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "reduce_nor_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_or_n2w", DB.fetch "words" "word_nand_n2w", DB.fetch "words" "word_xor_n2w", DB.fetch "words" "word_and_n2w", patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_THM, patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_def, quantHeuristicsTheory.SIMPLE_GUESS_FORALL_OR_1, quantHeuristicsTheory.SIMPLE_GUESS_FORALL_OR_2, DB.fetch "words" "word_le_def", rich_listTheory.MEM_FOLDL, rich_listTheory.EXISTS_FOLDL, quantHeuristicsTheory.GUESS_RULES_DISJ, DB.fetch "words" "nzcv_def", DB.fetch "words" "word_msb_n2w"] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013835

word_xnor_n2w
proof length: 2
proof time: 0.002532
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.360849
  inferstep time: 0.264203
  node_find time: 0.001362
  node_crea time: 0.062989
    pred time: 0.013427
    thmpred time: 0.000002
    mc time: 0.064401
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_and_n2w", DB.fetch "words" "word_nand_n2w", DB.fetch "words" "word_nor_n2w", DB.fetch "words" "word_or_n2w", DB.fetch "words" "word_xor_n2w", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w"] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012106

l2w_w2l
proof length: 5
proof time: 0.103512
Statistics
  infstep : 19
  nodes   : 12
  maxdepth: 3
Time: 0.830192
  inferstep time: 0.614967
  node_find time: 0.002706
  node_crea time: 0.159721
    pred time: 0.035445
    thmpred time: 0.000003
    mc time: 0.123711
    inst time: 0.0
Proof found: bossLib.Cases THENL [boolLib.REWRITE_TAC [DB.fetch "words" "w2l_def", DB.fetch "words" "word_from_dec_list_def", DB.fetch "words" "word_from_hex_list_def", DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_dec_list_def", DB.fetch "words" "word_to_hex_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_bin_list_def", DB.fetch "words" "word_to_bin_list_def", DB.fetch "words" "l2w_def", fcpTheory.FCP_TL, DB.fetch "words" "bit_count_upto_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_2comp_dimindex_1", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "w2l_def", numposrepTheory.n2l_l2n, numposrepTheory.l2n_n2l, DB.fetch "words" "w2n_eq_0", DB.fetch "words" "word_2comp_def", DB.fetch "words" "n2w_w2n", DB.fetch "words" "sw2sw_def", DB.fetch "words" "w2w_def", DB.fetch "words" "word_add_def", DB.fetch "words" "word_div_def", DB.fetch "words" "word_log2_def", DB.fetch "words" "word_mod_def", DB.fetch "words" "word_mul_def", DB.fetch "words" "word_sign_extend_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "nzcv_def"], BasicProvers.SRW_TAC [] [DB.fetch "words" "w2l_def", DB.fetch "words" "word_from_dec_list_def", DB.fetch "words" "word_from_hex_list_def", DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_dec_list_def", DB.fetch "words" "word_to_hex_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_bin_list_def", DB.fetch "words" "word_to_bin_list_def", DB.fetch "words" "l2w_def", fcpTheory.FCP_TL, DB.fetch "words" "word_reduce_def", DB.fetch "words" "bit_count_upto_def", DB.fetch "words" "word_2comp_dimindex_1", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bits_def"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "w2l_def", DB.fetch "words" "word_sign_extend_def", DB.fetch "words" "word_2comp_def", DB.fetch "words" "n2w_w2n", DB.fetch "words" "sw2sw_def", DB.fetch "words" "w2n_eq_0", DB.fetch "words" "w2w_def", DB.fetch "words" "word_add_def", DB.fetch "words" "word_div_def", DB.fetch "words" "word_log2_def", DB.fetch "words" "word_mod_def", DB.fetch "words" "word_mul_def", numposrepTheory.n2l_l2n, numposrepTheory.l2n_n2l, relationTheory.tactictoe_thm_24, DB.fetch "words" "add_with_carry_def"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017919

w2l_l2w
proof length: 3
proof time: 0.044412
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.236346
  inferstep time: 0.16195
  node_find time: 0.000769
  node_crea time: 0.050759
    pred time: 0.011577
    thmpred time: 0.000001
    mc time: 0.047481
    inst time: 0.0
Proof found: bossLib.Cases THEN (metisTools.METIS_TAC [DB.fetch "words" "l2w_w2l", DB.fetch "words" "w2l_def", DB.fetch "words" "l2w_def", DB.fetch "words" "word_from_bin_list_def", DB.fetch "words" "word_from_dec_list_def", DB.fetch "words" "word_from_hex_list_def", DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_bin_list_def", DB.fetch "words" "word_to_dec_list_def", DB.fetch "words" "word_to_hex_list_def", DB.fetch "words" "word_to_oct_list_def", numposrepTheory.n2l_l2n, numposrepTheory.l2n_n2l, DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "w2n_n2w"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006077

s2w_w2s
proof length: 2
proof time: 0.003443
Statistics
  infstep : 7
  nodes   : 3
  maxdepth: 2
Time: 0.288255
  inferstep time: 0.234178
  node_find time: 0.001062
  node_crea time: 0.035601
    pred time: 0.007269
    thmpred time: 0.000002
    mc time: 0.026745
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "ASCIInumbers" "s2n_def"), (DB.fetch "ASCIInumbers" "n2s_def"), rich_listTheory.MAP_MAP_o] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "w2s_def", DB.fetch "words" "s2w_def", ASCIInumbersTheory.s2n_n2s, ASCIInumbersTheory.n2s_s2n, DB.fetch "words" "word_from_dec_string_def", DB.fetch "words" "word_from_hex_string_def", DB.fetch "words" "word_from_oct_string_def", DB.fetch "words" "word_from_bin_string_def", DB.fetch "words" "word_to_dec_string_def", DB.fetch "words" "word_to_hex_string_def", DB.fetch "words" "word_to_oct_string_def", DB.fetch "words" "word_to_bin_string_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "l2w_w2l", DB.fetch "words" "w2l_def", DB.fetch "words" "word_bit_def"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005911

w2s_s2w
proof length: 1
proof time: 0.003497
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.135292
  inferstep time: 0.10228
  node_find time: 0.000469
  node_crea time: 0.017005
    pred time: 0.003415
    thmpred time: 0.0
    mc time: 0.023504
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "s2w_w2s" , DB.fetch "words" "s2w_def" , ASCIInumbersTheory.n2s_s2n , ASCIInumbersTheory.s2n_n2s , DB.fetch "words" "w2s_def" , ASCIInumbersTheory.s2n_def , ASCIInumbersTheory.s2n_compute , ASCIInumbersTheory.n2s_def , ASCIInumbersTheory.n2s_compute , DB.fetch "words" "word_from_bin_string_def" , DB.fetch "words" "word_from_dec_string_def" , DB.fetch "words" "word_from_hex_string_def" , DB.fetch "words" "word_from_oct_string_def" , DB.fetch "words" "word_to_bin_string_def" , DB.fetch "words" "word_to_dec_string_def" , DB.fetch "words" "word_to_hex_string_def" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006472

word_bin_list
proof length: 3
proof time: 0.002411
Statistics
  infstep : 87
  nodes   : 14
  maxdepth: 3
Time: 0.927694
  inferstep time: 0.733206
  node_find time: 0.011907
  node_crea time: 0.118315
    pred time: 0.032865
    thmpred time: 0.000004
    mc time: 0.073761
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_from_bin_list_def", DB.fetch "words" "word_to_bin_list_def", ASCIInumbersTheory.num_bin_string, ASCIInumbersTheory.num_dec_string, ASCIInumbersTheory.num_hex_string, ASCIInumbersTheory.num_oct_string, listTheory.DROP_splitAtPki, listTheory.dropWhile_splitAtPki, numposrepTheory.num_bin_list, numposrepTheory.num_dec_list, numposrepTheory.num_hex_list, numposrepTheory.num_oct_list, combinTheory.I_o_ID, relationTheory.INVOL_DEF, rich_listTheory.COUNT_LIST_GENLIST, stringTheory.EXTRACT_primitive_def] THEN let
  fun simp l = simpLib.ASM_SIMP_TAC ( BasicProvers.srw_ss ( ) hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss ) l
in
  simp [boolLib.FUN_EQ_THM] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_from_bin_list_def", DB.fetch "words" "word_to_bin_list_def", DB.fetch "words" "l2w_w2l", DB.fetch "words" "w2l_l2w", DB.fetch "words" "word_from_dec_list_def", DB.fetch "words" "word_from_hex_list_def", DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_dec_list_def", DB.fetch "words" "word_to_hex_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "l2w_def", DB.fetch "words" "w2l_def", DB.fetch "words" "word_from_bin_string_def", DB.fetch "words" "word_to_bin_string_def", ASCIInumbersTheory.BIT_num_from_bin_string, numposrepTheory.n2l_def]
end
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007969

word_oct_list
proof length: 3
proof time: 0.00392
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.375147
  inferstep time: 0.300093
  node_find time: 0.00144
  node_crea time: 0.050265
    pred time: 0.015328
    thmpred time: 0.000001
    mc time: 0.039307
    inst time: 0.0
Proof found: let
  fun simp l = simpLib.ASM_SIMP_TAC ( BasicProvers.srw_ss ( ) hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss ) l
in
  simp [boolLib.FUN_EQ_THM]
end THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_oct_list_def", fcpTheory.V2L_L2V, DB.fetch "words" "s2w_w2s", DB.fetch "words" "l2w_w2l", fcpTheory.EL_V2L, fcpTheory.V2L_def, fcpTheory.FCP_TL, fcpTheory.L2V_def, fcpTheory.LENGTH_V2L, fcpTheory.READ_L2V, DB.fetch "words" "concat_word_list_def", DB.fetch "words" "l2w_def", DB.fetch "words" "w2l_def", DB.fetch "words" "s2w_def", DB.fetch "words" "w2s_def"] THEN
  BasicProvers.SRW_TAC [] [numposrepTheory.num_to_oct_list_def, numposrepTheory.num_from_oct_list_def, DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_oct_string_def", DB.fetch "words" "word_to_oct_string_def", ASCIInumbersTheory.num_from_oct_string_def, ASCIInumbersTheory.num_to_oct_string_def, ASCIInumbersTheory.HEX_primitive_def, ASCIInumbersTheory.UNHEX_primitive_def, DB.fetch "words" "w2l_def", DB.fetch "words" "w2l_l2w", numposrepTheory.l2n_n2l, numposrepTheory.n2l_l2n, DB.fetch "words" "add_with_carry_def", DB.fetch "words" "n2w_w2n"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007251

word_dec_list
proof length: 3
proof time: 0.002765
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.364461
  inferstep time: 0.300051
  node_find time: 0.001205
  node_crea time: 0.045525
    pred time: 0.014223
    thmpred time: 0.000002
    mc time: 0.03144
    inst time: 0.0
Proof found: let
  fun simp l = simpLib.ASM_SIMP_TAC ( BasicProvers.srw_ss ( ) hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss ) l
in
  simp [boolLib.FUN_EQ_THM]
end THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_to_dec_list_def", DB.fetch "words" "word_from_dec_list_def", fcpTheory.V2L_L2V, DB.fetch "words" "s2w_w2s", DB.fetch "words" "l2w_w2l", fcpTheory.EL_V2L, fcpTheory.V2L_def, fcpTheory.FCP_TL, fcpTheory.L2V_def, fcpTheory.LENGTH_V2L, fcpTheory.READ_L2V, DB.fetch "words" "concat_word_list_def", DB.fetch "words" "l2w_def", DB.fetch "words" "w2l_def", DB.fetch "words" "s2w_def", DB.fetch "words" "w2s_def"] THEN
  BasicProvers.SRW_TAC [] [numposrepTheory.num_to_oct_list_def, numposrepTheory.num_from_oct_list_def, DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_oct_string_def", DB.fetch "words" "word_to_oct_string_def", ASCIInumbersTheory.num_from_oct_string_def, ASCIInumbersTheory.num_to_oct_string_def, ASCIInumbersTheory.HEX_primitive_def, ASCIInumbersTheory.UNHEX_primitive_def, DB.fetch "words" "w2l_def", DB.fetch "words" "w2l_l2w", numposrepTheory.l2n_n2l, numposrepTheory.n2l_l2n, DB.fetch "words" "add_with_carry_def", DB.fetch "words" "n2w_w2n"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007552

word_hex_list
proof length: 3
proof time: 0.003478
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.27215
  inferstep time: 0.207455
  node_find time: 0.001239
  node_crea time: 0.046298
    pred time: 0.014894
    thmpred time: 0.000003
    mc time: 0.030824
    inst time: 0.0
Proof found: let
  fun simp l = simpLib.ASM_SIMP_TAC ( BasicProvers.srw_ss ( ) hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss ) l
in
  simp [boolLib.FUN_EQ_THM]
end THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_from_hex_list_def", DB.fetch "words" "word_to_hex_list_def", fcpTheory.V2L_L2V, DB.fetch "words" "s2w_w2s", DB.fetch "words" "l2w_w2l", fcpTheory.EL_V2L, fcpTheory.V2L_def, fcpTheory.FCP_TL, fcpTheory.L2V_def, fcpTheory.LENGTH_V2L, fcpTheory.READ_L2V, DB.fetch "words" "concat_word_list_def", DB.fetch "words" "l2w_def", DB.fetch "words" "w2l_def", DB.fetch "words" "s2w_def", DB.fetch "words" "w2s_def"] THEN
  BasicProvers.SRW_TAC [] [numposrepTheory.num_to_oct_list_def, numposrepTheory.num_from_oct_list_def, DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_oct_string_def", DB.fetch "words" "word_to_oct_string_def", ASCIInumbersTheory.num_from_oct_string_def, ASCIInumbersTheory.num_to_oct_string_def, ASCIInumbersTheory.HEX_primitive_def, ASCIInumbersTheory.UNHEX_primitive_def, DB.fetch "words" "w2l_def", DB.fetch "words" "w2l_l2w", numposrepTheory.l2n_n2l, numposrepTheory.n2l_l2n, DB.fetch "words" "add_with_carry_def", DB.fetch "words" "n2w_w2n"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006946

word_bin_string
proof length: 1
proof time: 0.005193
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 3
Time: 0.403507
  inferstep time: 0.336943
  node_find time: 0.001518
  node_crea time: 0.053862
    pred time: 0.01682
    thmpred time: 0.000002
    mc time: 0.026671
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ bossLib.ARITH_ss ] rwts)
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007884

word_oct_string
proof length: 1
proof time: 0.005644
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.054778
  inferstep time: 0.035328
  node_find time: 0.000403
  node_crea time: 0.012652
    pred time: 0.00262
    thmpred time: 0.000001
    mc time: 0.011563
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ bossLib.ARITH_ss ] rwts)
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008342

word_dec_string
proof length: 1
proof time: 0.00543
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.073629
  inferstep time: 0.051427
  node_find time: 0.000276
  node_crea time: 0.013604
    pred time: 0.003774
    thmpred time: 0.0
    mc time: 0.013015
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ bossLib.ARITH_ss ] rwts)
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008749

word_hex_string
proof length: 1
proof time: 0.006311
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.039245
  inferstep time: 0.019903
  node_find time: 0.000316
  node_crea time: 0.013628
    pred time: 0.005687
    thmpred time: 0.0
    mc time: 0.008437
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ bossLib.ARITH_ss ] rwts)
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009113

word_0
proof length: 6
proof time: 0.016009
Statistics
  infstep : 356
  nodes   : 128
  maxdepth: 5
Time: 7.045593
  inferstep time: 5.198644
  node_find time: 0.062392
  node_crea time: 1.506252
    pred time: 0.262682
    thmpred time: 0.000014
    mc time: 0.850878
    inst time: 0.0
Proof found: bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "n2w_def"), arithmeticTheory.MIN_DEF, bitTheory.BIT_def, boolLib.GSYM bitTheory.BITS_ZERO3, bitTheory.BITS_COMP_THM2] THEN bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 27645*)i"] THENL
  [BasicProvers.RW_TAC numLib.arith_ss [(DB.fetch "bit" "SBIT_def"), (DB.fetch "bit" "BITS_THM")],
  bossLib.lrw [(DB.fetch "fcp" "index_sum"), (DB.fetch "fcp" "index_one"), listTheory.EL_GENLIST] THEN
  BasicProvers.RW_TAC numLib.arith_ss [(DB.fetch "bit" "SBIT_def"), (DB.fetch "bit" "BITS_THM")] THEN
  bossLib.SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [arithmeticTheory.ZERO_DIV, arithmeticTheory.tactictoe_thm_53, arithmeticTheory.tactictoe_thm_11, bitTheory.BITS_THM, bitTheory.BITSLT_THM, arithmeticTheory.SUC_SUB, arithmeticTheory.SUB, bitTheory.BITS_def, bitTheory.BITS_ZERO3, bitTheory.BITWISE_ONE_COMP_LEM, bitTheory.BITS_ZEROL, bitTheory.BITS_SUM2, arithmeticTheory.SUC_SUB1, bitTheory.BIT_SHIFT_THM5, bitTheory.DIV_SUB1, bitTheory.DIV_MULT_THM]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006559

word_eq_0
proof length: 3
proof time: 0.003201
Statistics
  infstep : 13
  nodes   : 9
  maxdepth: 3
Time: 0.512295
  inferstep time: 0.352705
  node_find time: 0.002251
  node_crea time: 0.104027
    pred time: 0.018557
    thmpred time: 0.0
    mc time: 0.081637
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def"), combinTheory.FAIL_THM] THEN
  bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "n2w_def"), bitTheory.BIT_ZERO]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005295

word_T
proof length: 4
proof time: 0.075552
Statistics
  infstep : 465
  nodes   : 92
  maxdepth: 5
Time: 8.199035
  inferstep time: 6.501199
  node_find time: 0.083807
  node_crea time: 1.321407
    pred time: 0.302953
    thmpred time: 0.000022
    mc time: 0.639315
    inst time: 0.0
Proof found: bossLib.srw_tac [(bossLib.rewrites [DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_T_def", fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_BETA, fcpTheory.FCP_UNIQUE, fcpTheory.READ_L2V, fcpTheory.READ_TL, DB.fetch "words" "word_0", DB.fetch "words" "word_eq_0", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_lsl_def", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.index_comp])] [DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_T_def", fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_BETA, fcpTheory.FCP_UNIQUE, fcpTheory.READ_L2V, fcpTheory.READ_TL, DB.fetch "words" "word_0", DB.fetch "words" "word_eq_0", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_lsl_def", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.index_comp] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_T_def", arithmeticTheory.tactictoe_thm_11, arithmeticTheory.tactictoe_thm_53, DB.fetch "words" "dimindex_uint_max_lt_iso", DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "dimindex_uint_max_iso", DB.fetch "words" "dimindex_uint_max_le_iso", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "ZERO_LT_UINT_MAX", DB.fetch "words" "word_0", DB.fetch "words" "word_eq_0", fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_BETA, fcpTheory.FCP_UNIQUE] THEN
  bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_1comp_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "tactictoe_thm_15"), (DB.fetch "words" "DIMINDEX_GT_0"), (DB.fetch "words" "dimword_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "dimword_def", arithmeticTheory.tactictoe_thm_11, arithmeticTheory.tactictoe_thm_53, DB.fetch "words" "tactictoe_thm_9", bitTheory.BIT_SHIFT_THM5, bitTheory.BIT_COMPLEMENT, bitTheory.BIT_SIGN_EXTEND, bitTheory.tactictoe_thm_39, DB.fetch "words" "word_msb_n2w", DB.fetch "words" "tactictoe_thm_15", bitTheory.BIT_EXP_SUB1, bitTheory.BIT_SHIFT_THM4, bitTheory.EXISTS_BIT_IN_RANGE, bitTheory.EXISTS_BIT_LT, bitTheory.NOT_BIT_GT_TWOEXP, DB.fetch "words" "nzcv_def"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008404

FCP_T_F
proof length: 2
proof time: 0.025399
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.253268
  inferstep time: 0.201888
  node_find time: 0.000687
  node_crea time: 0.039393
    pred time: 0.012001
    thmpred time: 0.000001
    mc time: 0.02341
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_T_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "tactictoe_thm_16"), (DB.fetch "words" "DIMINDEX_GT_0"), (DB.fetch "words" "UINT_MAX_def"), (DB.fetch "words" "dimword_def")] THEN metisTools.METIS_TAC [bitTheory.BIT_ZERO, DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "word_T", fcpTheory.FCP_BETA, fcpTheory.CART_EQ, fcpTheory.FCP, fcpTheory.tactictoe_thm_29, fcpTheory.FCP_UNIQUE, DB.fetch "words" "word_lsl_def", fcpTheory.FCP_CONCAT_def, fcpTheory.index_comp, DB.fetch "words" "tactictoe_thm_9", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "tactictoe_thm_12"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007625

word_L
Statistics
  infstep : 524
  nodes   : 159
  maxdepth: 7
Time: 10.00263
  inferstep time: 6.93184
  node_find time: 0.09999
  node_crea time: 2.662997
    pred time: 0.538861
    thmpred time: 0.000041
    mc time: 1.256782
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06877

word_H
Statistics
  infstep : 654
  nodes   : 173
  maxdepth: 6
Time: 10.024851
  inferstep time: 6.89032
  node_find time: 0.134345
  node_crea time: 2.616392
    pred time: 0.419374
    thmpred time: 0.00003
    mc time: 1.353043
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057261

word_L2
Statistics
  infstep : 331
  nodes   : 136
  maxdepth: 6
Time: 10.0297
  inferstep time: 7.030529
  node_find time: 0.068277
  node_crea time: 2.719853
    pred time: 0.532723
    thmpred time: 0.000036
    mc time: 1.122395
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.258691

WORD_NEG_1
proof length: 2
proof time: 0.002716
Statistics
  infstep : 45
  nodes   : 21
  maxdepth: 4
Time: 1.617976
  inferstep time: 1.271821
  node_find time: 0.007236
  node_crea time: 0.292071
    pred time: 0.071453
    thmpred time: 0.000002
    mc time: 0.171906
    inst time: 0.0
Proof found: bossLib.ASM_SIMP_TAC bossLib.std_ss [(DB.fetch "words" "n2w_11"), (DB.fetch "words" "word_2comp_def"), (DB.fetch "words" "dimword_def"), (DB.fetch "words" "word_0_n2w"), (DB.fetch "words" "word_1_n2w")] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_T_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "tactictoe_thm_16"), (DB.fetch "words" "DIMINDEX_GT_0"), (DB.fetch "words" "UINT_MAX_def"), (DB.fetch "words" "dimword_def")]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.125723

WORD_MSB_1COMP
proof length: 2
proof time: 0.002803
Statistics
  infstep : 14
  nodes   : 5
  maxdepth: 2
Time: 0.480261
  inferstep time: 0.369327
  node_find time: 0.003531
  node_crea time: 0.075305
    pred time: 0.026654
    thmpred time: 0.000001
    mc time: 0.048753
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_asr_def", DB.fetch "words" "word_msb_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_quot_def", DB.fetch "words" "word_rem_def", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "word_msb", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_bit_def"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005537

w2n_minus1
proof length: 2
proof time: 0.001788
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.305885
  inferstep time: 0.254444
  node_find time: 0.000851
  node_crea time: 0.033559
    pred time: 0.008583
    thmpred time: 0.0
    mc time: 0.031139
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "word_T_def"), (DB.fetch "words" "word_2comp_def"), (DB.fetch "words" "w2n_n2w"), (DB.fetch "words" "UINT_MAX_def")] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "UINT_MAX_def", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_2comp_def", DB.fetch "words" "dimword_sub_int_min", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "w2n_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "w2l_l2w", DB.fetch "words" "w2s_s2w", DB.fetch "words" "MOD_2EXP_DIMINDEX", DB.fetch "words" "mod_dimindex", DB.fetch "words" "BITS_ZEROL_DIMINDEX"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012139

w2n_plus1
Statistics
  infstep : 355
  nodes   : 129
  maxdepth: 6
Time: 10.020167
  inferstep time: 7.109307
  node_find time: 0.079295
  node_crea time: 2.519628
    pred time: 0.555148
    thmpred time: 0.000024
    mc time: 1.211722
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.163162

WORD_NOT_NOT
proof length: 2
proof time: 0.003226
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.268226
  inferstep time: 0.226443
  node_find time: 0.000727
  node_crea time: 0.024441
    pred time: 0.00634
    thmpred time: 0.000001
    mc time: 0.025125
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_1comp_n2w", fcpTheory.APPLY_FCP_UPDATE_ID, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_CONS, fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_EQ, fcpTheory.FCP_UPDATE_IMP_ID, fcpTheory.FCP_ZIP_def, fcpTheory.READ_L2V, fcpTheory.READ_TL, fcpTheory.cart_tybij, fcpTheory.tactictoe_thm_24] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004606

WORD_DE_MORGAN_THM
proof length: 3
proof time: 0.006857
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.404805
  inferstep time: 0.351794
  node_find time: 0.001039
  node_crea time: 0.031645
    pred time: 0.010385
    thmpred time: 0.000001
    mc time: 0.027009
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_and_n2w", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_gt_def", DB.fetch "words" "word_hi_def", DB.fetch "words" "reduce_nand_def", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_UPDATE_def] THEN (bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.007908

WORD_NOT_XOR
proof length: 5
proof time: 0.141032
Statistics
  infstep : 63
  nodes   : 21
  maxdepth: 4
Time: 1.662827
  inferstep time: 1.277153
  node_find time: 0.011942
  node_crea time: 0.292649
    pred time: 0.074555
    thmpred time: 0.000003
    mc time: 0.154639
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_xor_n2w", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_gt_def", DB.fetch "words" "word_hi_def", DB.fetch "words" "reduce_nand_def", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_EQ] THENL [boolLib.pop_assum boolLib.mp_tac THEN
  bossLib.SIMP_TAC bossLib.std_ss [(DB.fetch "fcp" "fcp_index"), boolLib.GSYM (DB.fetch "fcp" "tactictoe_thm_26")] THEN
  metisTools.METIS_TAC [fcpTheory.fcp_index, fcpTheory.tactictoe_thm_26, fcpTheory.tactictoe_thm_29, fcpTheory.cart_tybij, fcpTheory.tactictoe_thm_24, fcpTheory.tactictoe_thm_25, fcpTheory.tactictoe_thm_27, fcpTheory.tactictoe_thm_28, fcpTheory.tactictoe_thm_30, fcpTheory.FCP_CONCAT_def, fcpTheory.READ_L2V, fcpTheory.READ_TL, DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", fcpTheory.CART_EQ, fcpTheory.FCP_BETA], metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_53, arithmeticTheory.tactictoe_thm_11, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_xor_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_nor_def", fcpTheory.CART_EQ, DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "w2n_def", fcpTheory.FCP_ETA, fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_slice_def"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.067162

WORD_AND_CLAUSES
proof length: 3
proof time: 0.086954
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 3
Time: 0.471468
  inferstep time: 0.379896
  node_find time: 0.001617
  node_crea time: 0.062897
    pred time: 0.016498
    thmpred time: 0.0
    mc time: 0.048972
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_T_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "tactictoe_thm_16"), (DB.fetch "words" "DIMINDEX_GT_0"), (DB.fetch "words" "UINT_MAX_def"), (DB.fetch "words" "dimword_def")] THEN
  metisTools.METIS_TAC [bitTheory.BIT_ZERO, fcpTheory.FCP_CONCAT_def, DB.fetch "words" "word_eq_0", fcpTheory.FCP_EXISTS_def, fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_UNIQUE, fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.READ_TL, DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "w2n_def", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_bit_def", fcpTheory.READ_L2V]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.007464

WORD_OR_CLAUSES
proof length: 2
proof time: 0.007951
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.362777
  inferstep time: 0.296875
  node_find time: 0.001508
  node_crea time: 0.044159
    pred time: 0.010893
    thmpred time: 0.000001
    mc time: 0.03464
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_T", bitTheory.BIT_ZERO, DB.fetch "words" "w2n_plus1", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_T_def", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "FCP_T_F", DB.fetch "words" "WORD_NEG_1", fcpTheory.FCP_CONCAT_def, DB.fetch "words" "word_eq_0", fcpTheory.FCP_EXISTS_def, fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_UNIQUE, fcpTheory.FCP_APPLY_UPDATE_THM]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.006778

WORD_XOR_CLAUSES
proof length: 4
proof time: 0.011011
Statistics
  infstep : 111
  nodes   : 47
  maxdepth: 4
Time: 3.639325
  inferstep time: 2.630904
  node_find time: 0.021713
  node_crea time: 0.859937
    pred time: 0.160187
    thmpred time: 0.000004
    mc time: 0.495681
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_xor_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_T", bitTheory.BIT_ZERO, DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "w2n_plus1", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "word_T_def", fcpTheory.FCP_CONCAT_def, DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "word_eq_0", fcpTheory.FCP_EXISTS_def] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.008119

WORD_AND_ASSOC
proof length: 3
proof time: 0.002472
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.57002
  inferstep time: 0.50211
  node_find time: 0.00121
  node_crea time: 0.046252
    pred time: 0.012579
    thmpred time: 0.000001
    mc time: 0.035398
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "word_and_def", DB.fetch "words" "word_and_n2w", fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_UPDATE_EQ, DB.fetch "words" "word_hi_def", DB.fetch "words" "word_hs_def", DB.fetch "words" "word_lo_def", DB.fetch "words" "word_ls_def", fcpTheory.fcp_subst_comp, DB.fetch "words" "word_rrx_def", arithmeticTheory.LESS_EQ_ADD_SUB, arithmeticTheory.LESS_EQ_SUB_LESS, arithmeticTheory.SUB_PLUS] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_and_def", fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_or_def", fcpTheory.FCP_ETA, DB.fetch "words" "word_xor_def", DB.fetch "words" "w2n_def", fcpTheory.FCP_APPLY_UPDATE_THM, DB.fetch "words" "word_rrx_def", fcpTheory.FCP_BETA, DB.fetch "words" "word_0", DB.fetch "words" "word_T", DB.fetch "words" "word_hi_def"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.01635

WORD_OR_ASSOC
proof length: 3
proof time: 0.018782
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 3
Time: 0.592176
  inferstep time: 0.498609
  node_find time: 0.001795
  node_crea time: 0.065854
    pred time: 0.015966
    thmpred time: 0.000003
    mc time: 0.047486
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "word_or_def", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_n2w", fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_UPDATE_EQ, DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "word_hi_def", DB.fetch "words" "word_hs_def", DB.fetch "words" "word_lo_def", DB.fetch "words" "word_ls_def", fcpTheory.fcp_subst_comp, DB.fetch "words" "word_rrx_def"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020431

WORD_XOR_ASSOC
proof length: 2
proof time: 0.143949
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.282101
  inferstep time: 0.229056
  node_find time: 0.000702
  node_crea time: 0.027868
    pred time: 0.006289
    thmpred time: 0.000001
    mc time: 0.033233
    inst time: 0.0
Proof found: bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_xor_n2w", fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_UPDATE_EQ, DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "word_hi_def", DB.fetch "words" "word_hs_def", DB.fetch "words" "word_lo_def", DB.fetch "words" "word_ls_def", fcpTheory.fcp_subst_comp, DB.fetch "words" "word_rrx_def", arithmeticTheory.LESS_EQ_ADD_SUB] THEN metisTools.METIS_TAC [fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_xor_def", fcpTheory.CART_EQ, DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "w2n_def", fcpTheory.FCP_APPLY_UPDATE_THM, DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_0", fcpTheory.FCP_BETA, DB.fetch "words" "word_T", fcpTheory.FCP_UPDATE_COMMUTES, DB.fetch "words" "word_hi_def"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.019929

WORD_AND_COMM
proof length: 3
proof time: 0.003641
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.310322
  inferstep time: 0.240785
  node_find time: 0.001292
  node_crea time: 0.046906
    pred time: 0.012473
    thmpred time: 0.000002
    mc time: 0.035967
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "word_and_def", DB.fetch "words" "word_and_n2w", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_EQ, fcpTheory.FCP_ZIP_def, DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_XOR_ASSOC", DB.fetch "words" "nzcv_def", DB.fetch "words" "saturate_add_def"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_and_def", fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_slice_def", fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_or_def", fcpTheory.FCP_ETA, DB.fetch "words" "word_xor_def", DB.fetch "words" "w2n_def", fcpTheory.fcp_index, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_EVERY_def]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.017069

WORD_OR_COMM
proof length: 3
proof time: 0.176036
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.419167
  inferstep time: 0.333681
  node_find time: 0.001222
  node_crea time: 0.058093
    pred time: 0.0124
    thmpred time: 0.000001
    mc time: 0.052019
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "word_or_def", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_n2w", fcpTheory.FCP_APPLY_UPDATE_THM, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_EQ, fcpTheory.FCP_ZIP_def, DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_NOT_XOR"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_or_def", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_nor_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_and_def", fcpTheory.FCP_ETA, DB.fetch "words" "word_xor_def", DB.fetch "words" "w2n_def", fcpTheory.fcp_index, fcpTheory.EL_V2L, fcpTheory.FCP, fcpTheory.FCP_EXISTS_def, fcpTheory.FCP_MAP_def]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.01612

WORD_XOR_COMM
proof length: 1
proof time: 0.063577
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.097017
  inferstep time: 0.078296
  node_find time: 0.000298
  node_crea time: 0.0119
    pred time: 0.0028
    thmpred time: 0.0
    mc time: 0.010376
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_XOR" , DB.fetch "words" "WORD_XOR_ASSOC" , DB.fetch "words" "WORD_XOR_CLAUSES" , DB.fetch "words" "word_xor_def" , DB.fetch "words" "word_xor_n2w" , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_UPDATE_def , fcpTheory.FCP_CONCAT_def , fcpTheory.FCP_UPDATE_COMMUTES , fcpTheory.FCP_UPDATE_EQ , fcpTheory.FCP_ZIP_def , DB.fetch "words" "WORD_AND_ASSOC" , DB.fetch "words" "WORD_AND_COMM" , DB.fetch "words" "WORD_DE_MORGAN_THM" , DB.fetch "words" "WORD_OR_ASSOC" , DB.fetch "words" "WORD_OR_COMM"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.017753

WORD_AND_IDEM
proof length: 1
proof time: 0.034306
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.064115
  inferstep time: 0.04663
  node_find time: 0.000321
  node_crea time: 0.011564
    pred time: 0.002897
    thmpred time: 0.0
    mc time: 0.009153
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_AND_ASSOC" , DB.fetch "words" "WORD_AND_CLAUSES" , DB.fetch "words" "WORD_AND_COMM" , DB.fetch "words" "WORD_DE_MORGAN_THM" , DB.fetch "words" "word_and_def" , DB.fetch "words" "word_and_n2w" , fcpTheory.APPLY_FCP_UPDATE_ID , fcpTheory.FCP_UPDATE_def , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_CONCAT_def , fcpTheory.FCP_CONS , fcpTheory.FCP_UPDATE_COMMUTES , fcpTheory.FCP_UPDATE_EQ , fcpTheory.FCP_UPDATE_IMP_ID , fcpTheory.FCP_ZIP_def , fcpTheory.READ_L2V])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.003244

WORD_OR_IDEM
proof length: 1
proof time: 0.033917
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.081784
  inferstep time: 0.062036
  node_find time: 0.000252
  node_crea time: 0.012061
    pred time: 0.00292
    thmpred time: 0.000001
    mc time: 0.011808
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_DE_MORGAN_THM" , DB.fetch "words" "WORD_OR_ASSOC" , DB.fetch "words" "WORD_OR_CLAUSES" , DB.fetch "words" "WORD_OR_COMM" , DB.fetch "words" "word_or_def" , DB.fetch "words" "concat_word_list_def" , DB.fetch "words" "word_join_def" , DB.fetch "words" "word_or_n2w" , fcpTheory.APPLY_FCP_UPDATE_ID , fcpTheory.FCP_UPDATE_def , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_CONCAT_def , fcpTheory.FCP_CONS , fcpTheory.FCP_UPDATE_COMMUTES , fcpTheory.FCP_UPDATE_EQ , fcpTheory.FCP_UPDATE_IMP_ID])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.003636

WORD_AND_ABSORD
proof length: 3
proof time: 0.040322
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.364612
  inferstep time: 0.295345
  node_find time: 0.001106
  node_crea time: 0.046849
    pred time: 0.012785
    thmpred time: 0.000001
    mc time: 0.03617
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_COMM", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "WORD_OR_IDEM", DB.fetch "words" "word_or_def", DB.fetch "words" "word_and_n2w", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_n2w", fcpTheory.FCP_APPLY_UPDATE_THM] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_or_def", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_nor_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_and_def", fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_slice_def", fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def", fcpTheory.FCP_ETA, DB.fetch "words" "word_xor_def", DB.fetch "words" "w2n_def", fcpTheory.fcp_index, fcpTheory.EL_V2L]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.016933

WORD_OR_ABSORB
proof length: 3
proof time: 0.036966
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.361005
  inferstep time: 0.294273
  node_find time: 0.001119
  node_crea time: 0.044993
    pred time: 0.012452
    thmpred time: 0.000002
    mc time: 0.03484
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_COMM", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "WORD_OR_IDEM", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "word_and_def", DB.fetch "words" "word_and_n2w", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_or_n2w"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_or_def", fcpTheory.FCP_EVERY_def, DB.fetch "words" "word_nor_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_and_def", fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_slice_def", fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def", fcpTheory.FCP_ETA, DB.fetch "words" "word_xor_def", DB.fetch "words" "w2n_def", fcpTheory.fcp_index, fcpTheory.EL_V2L]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.017424

WORD_AND_COMP
proof length: 3
proof time: 0.045664
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.400365
  inferstep time: 0.315601
  node_find time: 0.001122
  node_crea time: 0.053188
    pred time: 0.013718
    thmpred time: 0.000001
    mc time: 0.051296
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "word_and_def", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_and_n2w", DB.fetch "words" "WORD_OR_CLAUSES"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_0", DB.fetch "words" "word_eq_0", DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "dimindex_1_cases", DB.fetch "words" "word_compare_def", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "w2n_eq_0", DB.fetch "words" "word_abs_def", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "FCP_T_F", DB.fetch "words" "n2w_dimword", DB.fetch "words" "word_0_n2w", DB.fetch "words" "word_L2"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004062

WORD_OR_COMP
proof length: 1
proof time: 0.068185
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.099678
  inferstep time: 0.076815
  node_find time: 0.000239
  node_crea time: 0.013156
    pred time: 0.003337
    thmpred time: 0.000001
    mc time: 0.0135
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_DE_MORGAN_THM" , DB.fetch "words" "WORD_XOR_CLAUSES" , DB.fetch "words" "WORD_OR_CLAUSES" , DB.fetch "words" "WORD_AND_COMP" , DB.fetch "words" "WORD_NOT_NOT" , DB.fetch "words" "WORD_NOT_XOR" , DB.fetch "words" "word_1comp_def" , DB.fetch "words" "WORD_MSB_1COMP" , DB.fetch "words" "WORD_AND_ABSORD" , DB.fetch "words" "WORD_OR_ABSORB" , DB.fetch "words" "WORD_OR_ASSOC" , DB.fetch "words" "WORD_OR_COMM" , DB.fetch "words" "WORD_OR_IDEM" , DB.fetch "words" "word_or_def" , DB.fetch "words" "word_1comp_n2w" , DB.fetch "words" "WORD_AND_CLAUSES"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.003386

WORD_XOR_COMP
proof length: 1
proof time: 0.018054
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.070567
  inferstep time: 0.050181
  node_find time: 0.000365
  node_crea time: 0.013609
    pred time: 0.003376
    thmpred time: 0.000001
    mc time: 0.011232
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_XOR" , DB.fetch "words" "WORD_XOR_CLAUSES" , DB.fetch "words" "WORD_XOR_ASSOC" , DB.fetch "words" "WORD_XOR_COMM" , DB.fetch "words" "word_xor_def" , DB.fetch "words" "WORD_OR_COMP" , DB.fetch "words" "WORD_AND_COMP" , DB.fetch "words" "WORD_DE_MORGAN_THM" , DB.fetch "words" "WORD_NOT_NOT" , DB.fetch "words" "word_1comp_def" , DB.fetch "words" "WORD_MSB_1COMP" , DB.fetch "words" "word_xor_n2w" , DB.fetch "words" "word_1comp_n2w" , DB.fetch "words" "WORD_AND_CLAUSES" , DB.fetch "words" "WORD_OR_CLAUSES" , DB.fetch "words" "w2n_plus1"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.016588

WORD_RIGHT_AND_OVER_OR
proof length: 3
proof time: 0.01923
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.582073
  inferstep time: 0.497033
  node_find time: 0.001774
  node_crea time: 0.059787
    pred time: 0.016338
    thmpred time: 0.000001
    mc time: 0.040453
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_COMM", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "WORD_OR_IDEM", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "word_and_n2w"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020281

WORD_RIGHT_OR_OVER_AND
proof length: 3
proof time: 0.0198
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.572041
  inferstep time: 0.490288
  node_find time: 0.001604
  node_crea time: 0.058076
    pred time: 0.016099
    thmpred time: 0.000003
    mc time: 0.039109
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_COMM", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "WORD_OR_IDEM", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_OR_COMP"] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020732

WORD_RIGHT_AND_OVER_XOR
proof length: 2
proof time: 0.019632
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.308695
  inferstep time: 0.263419
  node_find time: 0.000752
  node_crea time: 0.029004
    pred time: 0.007003
    thmpred time: 0.0
    mc time: 0.024315
    inst time: 0.0
Proof found: bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [DB.fetch "words" "WORD_XOR_ASSOC", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_COMM", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_OR_ABSORB"] THEN bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020315

WORD_LEFT_AND_OVER_OR
proof length: 5
proof time: 0.021515
Statistics
  infstep : 37
  nodes   : 17
  maxdepth: 5
Time: 1.76618
  inferstep time: 1.451788
  node_find time: 0.006896
  node_crea time: 0.242079
    pred time: 0.046415
    thmpred time: 0.000004
    mc time: 0.1572
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_or_def", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_AND_COMP", fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020764

WORD_LEFT_OR_OVER_AND
proof length: 5
proof time: 0.021799
Statistics
  infstep : 42
  nodes   : 18
  maxdepth: 5
Time: 1.877012
  inferstep time: 1.573139
  node_find time: 0.007826
  node_crea time: 0.232474
    pred time: 0.046749
    thmpred time: 0.000004
    mc time: 0.141834
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_or_def", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_AND_COMP", fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  bossLib.DECIDE_TAC
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020315

WORD_LEFT_AND_OVER_XOR
proof length: 4
proof time: 0.10476
Statistics
  infstep : 16
  nodes   : 9
  maxdepth: 4
Time: 0.814481
  inferstep time: 0.66707
  node_find time: 0.002733
  node_crea time: 0.108641
    pred time: 0.0225
    thmpred time: 0.0
    mc time: 0.076148
    inst time: 0.0
Proof found: bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_XOR_ASSOC", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_COMM", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_OR_OVER_AND", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_CLAUSES"] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_xor_def", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_OR_OVER_AND", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_AND_COMP", fcpTheory.FCP_UPDATE_def] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_xor_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_and_def", fcpTheory.CART_EQ, DB.fetch "words" "word_or_def", fcpTheory.FCP_ETA, fcpTheory.FCP_APPLY_UPDATE_THM, DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_0", fcpTheory.FCP_BETA, DB.fetch "words" "word_T", DB.fetch "words" "word_hi_def", fcpTheory.FCP_UPDATE_COMMUTES]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.020718

WORD_XOR
proof length: 4
proof time: 0.114654
Statistics
  infstep : 112
  nodes   : 36
  maxdepth: 4
Time: 3.552075
  inferstep time: 2.961828
  node_find time: 0.020769
  node_crea time: 0.452071
    pred time: 0.102605
    thmpred time: 0.000005
    mc time: 0.255277
    inst time: 0.0
Proof found: bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_XOR_ASSOC", DB.fetch "words" "WORD_XOR_COMM", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_and_def", DB.fetch "words" "word_xor_n2w"] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_nor_def", DB.fetch "words" "word_or_def", fcpTheory.FCP_EVERY_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_and_def", fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_slice_def", fcpTheory.CART_EQ, fcpTheory.FCP_ETA, DB.fetch "words" "w2n_def", fcpTheory.fcp_index]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.02077

WORD_NAND_NOT_AND
proof length: 3
proof time: 0.004189
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 3
Time: 0.474987
  inferstep time: 0.379386
  node_find time: 0.001774
  node_crea time: 0.062137
    pred time: 0.018474
    thmpred time: 0.0
    mc time: 0.049689
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_nand_def", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "word_nand_n2w", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_AND_COMM", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_LEFT_OR_OVER_AND", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_IDEM"] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_or_def", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_nor_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_nand_def"] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004473

WORD_NOR_NOT_OR
proof length: 3
proof time: 0.004575
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 3
Time: 0.479312
  inferstep time: 0.409111
  node_find time: 0.001332
  node_crea time: 0.047536
    pred time: 0.013783
    thmpred time: 0.0
    mc time: 0.03545
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_nor_def", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "word_nor_n2w", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_OR_OVER_AND", DB.fetch "words" "WORD_OR_ABSORB", DB.fetch "words" "WORD_OR_ASSOC", DB.fetch "words" "WORD_OR_COMM", DB.fetch "words" "WORD_RIGHT_AND_OVER_OR", DB.fetch "words" "WORD_RIGHT_OR_OVER_AND", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "WORD_OR_IDEM", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_AND_ABSORD"] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_NAND_NOT_AND", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_nor_def"] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004407

WORD_XNOR_NOT_XOR
proof length: 4
proof time: 0.027485
Statistics
  infstep : 12
  nodes   : 9
  maxdepth: 4
Time: 0.821585
  inferstep time: 0.65256
  node_find time: 0.002199
  node_crea time: 0.122545
    pred time: 0.034766
    thmpred time: 0.000002
    mc time: 0.086353
    inst time: 0.0
Proof found: bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [DB.fetch "words" "word_xnor_def", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "word_xnor_n2w", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_XOR_ASSOC", DB.fetch "words" "WORD_XOR_COMM", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "word_xor_n2w", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_NAND_NOT_AND", DB.fetch "words" "WORD_NOR_NOT_OR", DB.fetch "words" "WORD_AND_COMP"] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_NOT_NOT", DB.fetch "words" "WORD_XOR", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_OR_COMP", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_XOR_COMP", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "WORD_NAND_NOT_AND", DB.fetch "words" "WORD_NOR_NOT_OR", DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_AND_ABSORD", DB.fetch "words" "WORD_LEFT_AND_OVER_OR"] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_nor_def", DB.fetch "words" "word_or_def", fcpTheory.FCP_EVERY_def, fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_and_def", fcpTheory.FCP_EXISTS_def, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_xnor_def", fcpTheory.CART_EQ, DB.fetch "words" "w2n_def", fcpTheory.FCP_ETA]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004531
Replaying proof: 0.005786
Replaying proof: 0.022134
Replaying proof: 0.006364

WORD_ADD_XOR
Statistics
  infstep : 290
  nodes   : 102
  maxdepth: 5
Time: 10.088107
  inferstep time: 8.161076
  node_find time: 0.061164
  node_crea time: 1.645283
    pred time: 0.357528
    thmpred time: 0.000023
    mc time: 0.736896
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.121722

WORD_AND_EXP_SUB1
Statistics
  infstep : 447
  nodes   : 141
  maxdepth: 6
Time: 10.017177
  inferstep time: 7.080592
  node_find time: 0.093402
  node_crea time: 2.45478
    pred time: 0.454637
    thmpred time: 0.000019
    mc time: 1.540629
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.131685

word_msb_add_word_L
Statistics
  infstep : 402
  nodes   : 151
  maxdepth: 7
Time: 10.000472
  inferstep time: 7.368914
  node_find time: 0.095378
  node_crea time: 2.243864
    pred time: 0.398252
    thmpred time: 0.00003
    mc time: 1.122711
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.313771

w2w
Statistics
  infstep : 554
  nodes   : 117
  maxdepth: 5
Time: 10.002286
  inferstep time: 7.760947
  node_find time: 0.120871
  node_crea time: 1.702846
    pred time: 0.324902
    thmpred time: 0.000026
    mc time: 0.851041
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.226159

sw2sw
Statistics
  infstep : 330
  nodes   : 132
  maxdepth: 6
Time: 10.094128
  inferstep time: 7.141683
  node_find time: 0.076362
  node_crea time: 2.633143
    pred time: 0.555259
    thmpred time: 0.000012
    mc time: 1.051109
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.1654

w2w_id
proof length: 2
proof time: 0.029432
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.248327
  inferstep time: 0.194257
  node_find time: 0.000922
  node_crea time: 0.035409
    pred time: 0.009673
    thmpred time: 0.0
    mc time: 0.029309
    inst time: 0.0
Proof found: bossLib.Cases THEN metisTools.METIS_TAC [DB.fetch "words" "w2w_def", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "w2w", DB.fetch "words" "word_join_def", DB.fetch "words" "word_extract_def", DB.fetch "words" "word_concat_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "n2w_def", DB.fetch "words" "w2n_n2w", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "word_nchotomy", DB.fetch "words" "n2w_11", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "WORD_AND_EXP_SUB1", DB.fetch "words" "n2w_mod", DB.fetch "words" "saturate_n2w_def"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005512

sw2sw_id
proof length: 3
proof time: 0.017613
Statistics
  infstep : 29
  nodes   : 15
  maxdepth: 3
Time: 1.162591
  inferstep time: 0.825099
  node_find time: 0.007495
  node_crea time: 0.27322
    pred time: 0.07088
    thmpred time: 0.000003
    mc time: 0.157172
    inst time: 0.0
Proof found: bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [(DB.fetch "words" "sw2sw_def"), (DB.fetch "words" "w2n_n2w"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "word_msb_n2w"), bitTheory.BIT_SIGN_EXTEND, (DB.fetch "words" "DIMINDEX_GT_0")] THEN bossLib.FULL_SIMP_TAC bossLib.std_ss [DB.fetch "words" "word_mod_def", DB.fetch "words" "dimword_def", DB.fetch "words" "w2n_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "sw2sw", DB.fetch "words" "w2w", DB.fetch "words" "word_eq_0", DB.fetch "words" "nzcv_def", DB.fetch "words" "sw2sw_def", DB.fetch "words" "word_sign_extend_def", DB.fetch "words" "word_bit_def", fcpTheory.FCP_APPLY_UPDATE_THM, relationTheory.tactictoe_thm_24, fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP] THEN
  bossLib.FULL_SIMP_TAC bossLib.std_ss [DB.fetch "words" "w2n_def", DB.fetch "words" "dimword_def", DB.fetch "words" "tactictoe_thm_9", DB.fetch "words" "bit_count_upto_def", DB.fetch "words" "tactictoe_thm_12", DB.fetch "words" "tactictoe_thm_13", DB.fetch "words" "word_slice_def", DB.fetch "words" "sw2sw", DB.fetch "words" "w2w", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_bit_def", fcpTheory.FCP_APPLY_UPDATE_THM, relationTheory.tactictoe_thm_24, fcpTheory.CART_EQ, fcpTheory.EL_V2L, fcpTheory.FCP]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005287

w2w_w2w
Statistics
  infstep : 252
  nodes   : 115
  maxdepth: 6
Time: 10.017712
  inferstep time: 6.752491
  node_find time: 0.073839
  node_crea time: 2.967643
    pred time: 0.712977
    thmpred time: 0.000037
    mc time: 1.330336
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.217733
Replaying proof: 0.099698
Replaying proof: 0.012386

sw2sw_sw2sw
Statistics
  infstep : 282
  nodes   : 124
  maxdepth: 6
Time: 10.000991
  inferstep time: 6.686219
  node_find time: 0.07062
  node_crea time: 3.032847
    pred time: 0.522111
    thmpred time: 0.000028
    mc time: 1.056791
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.121921

sw2sw_w2w
Statistics
  infstep : 208
  nodes   : 103
  maxdepth: 6
Time: 10.048713
  inferstep time: 7.014288
  node_find time: 0.062569
  node_crea time: 2.788038
    pred time: 0.654368
    thmpred time: 0.000025
    mc time: 1.265421
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.10833

word_bit
proof length: 1
proof time: 0.003213
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.149658
  inferstep time: 0.120525
  node_find time: 0.000656
  node_crea time: 0.016506
    pred time: 0.003983
    thmpred time: 0.000001
    mc time: 0.017028
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ fcpLib.FCP_ss , bossLib.ARITH_ss ] [ boolLib.FUN_EQ_THM , ( DB.fetch "words" "word_msb_def" ) , ( DB.fetch "words" "word_bit_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006043

word_slice_n2w
Statistics
  infstep : 295
  nodes   : 161
  maxdepth: 7
Time: 10.045878
  inferstep time: 5.304005
  node_find time: 0.07977
  node_crea time: 4.42001
    pred time: 1.03284
    thmpred time: 0.000035
    mc time: 1.771999
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.014598

word_bits_n2w
Statistics
  infstep : 283
  nodes   : 136
  maxdepth: 6
Time: 10.071426
  inferstep time: 6.162104
  node_find time: 0.074958
  node_crea time: 3.580633
    pred time: 0.83152
    thmpred time: 0.000038
    mc time: 1.568662
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.127238

word_bit_n2w
Statistics
  infstep : 345
  nodes   : 196
  maxdepth: 7
Time: 10.012404
  inferstep time: 4.505131
  node_find time: 0.092446
  node_crea time: 5.124357
    pred time: 0.919927
    thmpred time: 0.000024
    mc time: 2.287271
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.063623

word_signed_bits_n2w
Statistics
  infstep : 192
  nodes   : 88
  maxdepth: 5
Time: 10.049413
  inferstep time: 6.0654
  node_find time: 0.059819
  node_crea time: 3.685605
    pred time: 0.848973
    thmpred time: 0.000022
    mc time: 1.521615
    inst time: 0.0
Proof status: Time Out
Org tac number: 20
Original proof time: 0.0
Replaying proof: 1.409334
Replaying proof: 0.006308

word_sign_extend_bits
Statistics
  infstep : 292
  nodes   : 113
  maxdepth: 6
Time: 10.009528
  inferstep time: 7.009033
  node_find time: 0.077005
  node_crea time: 2.668543
    pred time: 0.594478
    thmpred time: 0.000016
    mc time: 0.984894
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.086605

word_index_n2w
proof length: 2
proof time: 0.003248
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.314208
  inferstep time: 0.236262
  node_find time: 0.001316
  node_crea time: 0.053452
    pred time: 0.011034
    thmpred time: 0.0
    mc time: 0.044622
    inst time: 0.0
Proof found: bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def"), combinTheory.FAIL_THM] THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "n2w_def"), arithmeticTheory.MIN_DEF, bitTheory.BIT_def, boolLib.GSYM bitTheory.BITS_ZERO3, bitTheory.BITS_COMP_THM2]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008032
Replaying proof: 0.002432
Replaying proof: 0.013061
Replaying proof: 0.002027

word_bits_w2w
Statistics
  infstep : 306
  nodes   : 127
  maxdepth: 6
Time: 10.013083
  inferstep time: 6.636327
  node_find time: 0.091517
  node_crea time: 2.993475
    pred time: 0.635814
    thmpred time: 0.00002
    mc time: 1.316473
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.201261

word_reverse_n2w
Statistics
  infstep : 299
  nodes   : 134
  maxdepth: 7
Time: 10.084003
  inferstep time: 7.295193
  node_find time: 0.085839
  node_crea time: 2.442329
    pred time: 0.377411
    thmpred time: 0.000023
    mc time: 1.404729
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.055425

word_modify_n2w
proof length: 4
proof time: 0.117244
Statistics
  infstep : 36
  nodes   : 20
  maxdepth: 4
Time: 2.253376
  inferstep time: 1.584516
  node_find time: 0.01233
  node_crea time: 0.542121
    pred time: 0.128901
    thmpred time: 0.000003
    mc time: 0.347691
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_modify_def", DB.fetch "words" "bit_field_insert_def", bitTheory.BIT_MODIFY_THM, bitTheory.BIT_MODIFY_def, bitTheory.tactictoe_thm_54, numeral_bitTheory.BIT_MODIFY_EVAL, numeral_bitTheory.NUMERAL_BIT_MODIFY, bitTheory.tactictoe_thm_52, bitTheory.tactictoe_thm_53, DB.fetch "words" "word_and_n2w", DB.fetch "words" "word_bit_n2w", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "word_nand_n2w"] THEN
  bossLib.SIMP_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) [(DB.fetch "words" "word_and_def"), (DB.fetch "words" "n2w_11"), (DB.fetch "words" "n2w_def"), bitTheory.BITWISE_THM] THEN
  metisTools.METIS_TAC [bitTheory.BIT_MODIFY_THM, bitTheory.BIT_MODIFY_def, bitTheory.tactictoe_thm_54, numeral_bitTheory.BIT_MODF_def, numeral_bitTheory.BIT_MODIFY_EVAL, numeral_bitTheory.NUMERAL_BIT_MODIFY, DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_bit_n2w", DB.fetch "words" "tactictoe_thm_9", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_H", DB.fetch "words" "word_L", fcpTheory.FCP, fcpTheory.FCP_UNIQUE, DB.fetch "words" "word_eq_0"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.030841

fcp_n2w
proof length: 4
proof time: 0.00954
Statistics
  infstep : 40
  nodes   : 14
  maxdepth: 4
Time: 1.615971
  inferstep time: 1.179031
  node_find time: 0.01276
  node_crea time: 0.318767
    pred time: 0.064114
    thmpred time: 0.000007
    mc time: 0.237316
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_modify_def", DB.fetch "words" "word_modify_n2w", DB.fetch "words" "bit_field_insert_def", fcpTheory.FCP_UNIQUE, fcpTheory.FCP_BETA, fcpTheory.fcp_subst_comp, fcpTheory.index_comp, DB.fetch "words" "FCP_T_F", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_OR_CLAUSES"] THEN bossLib.SIMP_TAC bossLib.std_ss [(DB.fetch "fcp" "CART_EQ"), (DB.fetch "fcp" "FCP_BETA")] THEN
  boolLib.REPEAT boolLib.STRIP_TAC THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_modify_n2w", bitTheory.BIT_MODIFY_THM, DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "WORD_NEG_1_T", fcpTheory.FCP_UNIQUE, fcpTheory.FCP, DB.fetch "words" "word_reduce_def", fcpTheory.FCP_BETA, fcpTheory.CART_EQ, DB.fetch "words" "w2n_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "w2w", DB.fetch "words" "sw2sw"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007683

w2n_w2w
Statistics
  infstep : 205
  nodes   : 104
  maxdepth: 6
Time: 10.057161
  inferstep time: 7.115392
  node_find time: 0.060508
  node_crea time: 2.67968
    pred time: 0.607806
    thmpred time: 0.000032
    mc time: 1.294933
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.361301

w2n_w2w_le
Statistics
  infstep : 254
  nodes   : 142
  maxdepth: 6
Time: 10.007806
  inferstep time: 6.669491
  node_find time: 0.070135
  node_crea time: 3.050458
    pred time: 0.68204
    thmpred time: 0.000022
    mc time: 1.238913
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.300174

w2w_lt
proof length: 1
proof time: 0.001851
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.17941
  inferstep time: 0.129017
  node_find time: 0.000969
  node_crea time: 0.028563
    pred time: 0.006779
    thmpred time: 0.000001
    mc time: 0.019971
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "w2n_w2w" , DB.fetch "words" "w2n_w2w_le" , DB.fetch "words" "w2w_def" , DB.fetch "words" "sw2sw_sw2sw" , DB.fetch "words" "tactictoe_thm_19" , DB.fetch "words" "w2w" , DB.fetch "words" "sw2sw_w2w" , DB.fetch "words" "w2w_w2w" , DB.fetch "words" "word_bits_w2w" , DB.fetch "words" "word_join_def" , DB.fetch "words" "w2w_id" , DB.fetch "words" "concat_word_list_def" , DB.fetch "words" "w2n_lt" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "w2n_plus1" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.028633

w2w_n2w
Statistics
  infstep : 216
  nodes   : 125
  maxdepth: 6
Time: 10.006717
  inferstep time: 6.779003
  node_find time: 0.065057
  node_crea time: 2.940771
    pred time: 0.568274
    thmpred time: 0.000027
    mc time: 1.620672
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018416

w2w_0
proof length: 2
proof time: 0.078169
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.271338
  inferstep time: 0.205946
  node_find time: 0.000802
  node_crea time: 0.029807
    pred time: 0.006374
    thmpred time: 0.000002
    mc time: 0.042827
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THEN metisTools.METIS_TAC [DB.fetch "words" "word_0", DB.fetch "words" "word_eq_0", DB.fetch "words" "nzcv_def", DB.fetch "words" "dimindex_1_cases", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_L2", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw", fcpTheory.CART_EQ, fcpTheory.FCP_BETA, DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_T", DB.fetch "words" "w2w"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005582

w2n_11_lift
proof length: 3
proof time: 0.154519
Statistics
  infstep : 39
  nodes   : 26
  maxdepth: 4
Time: 2.507083
  inferstep time: 1.630419
  node_find time: 0.01264
  node_crea time: 0.756691
    pred time: 0.175104
    thmpred time: 0.000007
    mc time: 0.405852
    inst time: 0.0
Proof found: bossLib.ASM_SIMP_TAC bossLib.arith_ss [bitTheory.BITS_COMP_THM2, (DB.fetch "words" "w2w_def"), (DB.fetch "words" "word_bits_n2w"), boolLib.REWRITE_RULE [(DB.fetch "words" "MOD_DIMINDEX"), (DB.fetch "words" "dimword_def")] (DB.fetch "words" "w2n_n2w")] THEN bossLib.Cases THEN
  metisTools.METIS_TAC [DB.fetch "words" "w2n_n2w", DB.fetch "words" "w2w_def", DB.fetch "words" "n2w_w2n", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_n2w", DB.fetch "words" "dimindex_dimword_le_iso", DB.fetch "words" "dimindex_int_max_le_iso", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "dimindex_uint_max_le_iso", DB.fetch "words" "word_asr_def", fcpTheory.FCP_EVERY_def, DB.fetch "words" "nzcv_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "word_sign_extend_def", DB.fetch "words" "sw2sw_def", DB.fetch "words" "w2n_plus1"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.103936

word_extract_w2w
Statistics
  infstep : 203
  nodes   : 104
  maxdepth: 6
Time: 10.000134
  inferstep time: 6.722565
  node_find time: 0.070541
  node_crea time: 2.9593
    pred time: 0.674527
    thmpred time: 0.000034
    mc time: 1.356821
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.393766

WORD_w2w_EXTRACT
proof length: 5
proof time: 0.011274
Statistics
  infstep : 91
  nodes   : 48
  maxdepth: 5
Time: 4.306784
  inferstep time: 2.939649
  node_find time: 0.024216
  node_crea time: 1.176131
    pred time: 0.307569
    thmpred time: 0.000012
    mc time: 0.491102
    inst time: 0.0
Proof found: bossLib.Cases THEN bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "w2w"), (DB.fetch "words" "word_bits_def")] THEN
  bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 43028*)i < ", HolKernel.ANTIQUOTE (((Parse.Term [HolKernel.QUOTE " (*#loc 1 324*)dimindex (:'a)"]))), HolKernel.QUOTE " (*#loc 1 43035*)"] THENL
  [bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [(DB.fetch "words" "sw2sw_def"), (DB.fetch "words" "w2n_n2w"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "word_msb_n2w"), bitTheory.BIT_SIGN_EXTEND, (DB.fetch "words" "DIMINDEX_GT_0")],
  metisTools.METIS_TAC [DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_bit_n2w", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_H", DB.fetch "words" "word_L", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_extract_n2w", DB.fetch "words" "w2w_n2w", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "word_msb_n2w"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.075012

WORD_EQ
proof length: 1
proof time: 0.004821
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.176377
  inferstep time: 0.145928
  node_find time: 0.001175
  node_crea time: 0.015819
    pred time: 0.003629
    thmpred time: 0.000001
    mc time: 0.015919
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ fcpLib.FCP_ss , bossLib.ARITH_ss ] [ boolLib.FUN_EQ_THM , ( DB.fetch "words" "word_msb_def" ) , ( DB.fetch "words" "word_bit_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.026583

BIT_UPDATE
Statistics
  infstep : 1210
  nodes   : 201
  maxdepth: 6
Time: 10.061982
  inferstep time: 5.794673
  node_find time: 0.425813
  node_crea time: 2.710962
    pred time: 0.332363
    thmpred time: 0.000018
    mc time: 1.517884
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.056976

WORD_MODIFY_BIT
proof length: 3
proof time: 0.003175
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 3
Time: 0.459977
  inferstep time: 0.368553
  node_find time: 0.001794
  node_crea time: 0.061336
    pred time: 0.016934
    thmpred time: 0.000001
    mc time: 0.046272
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_modify_def", DB.fetch "words" "word_modify_n2w", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "fcp_n2w", DB.fetch "words" "BIT_UPDATE", relationTheory.tactictoe_thm_24, DB.fetch "words" "sw2sw", DB.fetch "words" "w2w", DB.fetch "words" "word_eq_0", DB.fetch "words" "w2n_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "bit_count_upto_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "word_and_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_nor_def"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_modify_n2w", bitTheory.BIT_MODIFY_THM, DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "WORD_NEG_1_T", fcpTheory.FCP_UNIQUE, fcpTheory.FCP, DB.fetch "words" "word_reduce_def", fcpTheory.FCP_BETA, fcpTheory.CART_EQ, DB.fetch "words" "w2n_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "w2w", DB.fetch "words" "sw2sw"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005781
Replaying proof: 0.00631

WORD_BIT_BITS
Statistics
  infstep : 270
  nodes   : 116
  maxdepth: 5
Time: 10.00478
  inferstep time: 7.058624
  node_find time: 0.077232
  node_crea time: 2.60189
    pred time: 0.546665
    thmpred time: 0.000019
    mc time: 1.300967
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.456246
Replaying proof: 0.010158

WORD_BITS_COMP_THM
Statistics
  infstep : 237
  nodes   : 111
  maxdepth: 6
Time: 10.062497
  inferstep time: 7.738799
  node_find time: 0.069908
  node_crea time: 2.002698
    pred time: 0.554641
    thmpred time: 0.000038
    mc time: 0.789835
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.073964

WORD_BITS_EXTRACT
proof length: 1
proof time: 0.015215
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.167538
  inferstep time: 0.142904
  node_find time: 0.000623
  node_crea time: 0.014117
    pred time: 0.003351
    thmpred time: 0.0
    mc time: 0.011561
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ fcpLib.FCP_ss , bossLib.ARITH_ss ] [ ( DB.fetch "words" "word_extract_def" ) , ( DB.fetch "words" "w2w" ) , ( DB.fetch "words" "word_bits_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.030883

WORD_BITS_LSR
Statistics
  infstep : 243
  nodes   : 105
  maxdepth: 6
Time: 10.084688
  inferstep time: 7.509933
  node_find time: 0.070729
  node_crea time: 2.265944
    pred time: 0.560702
    thmpred time: 0.000024
    mc time: 0.947006
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.088371

WORD_BITS_ZERO
proof length: 2
proof time: 0.046383
Statistics
  infstep : 31
  nodes   : 20
  maxdepth: 4
Time: 2.054197
  inferstep time: 1.654147
  node_find time: 0.008034
  node_crea time: 0.288313
    pred time: 0.077452
    thmpred time: 0.000007
    mc time: 0.19232
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "w2w"), (DB.fetch "words" "word_bits_def")] THEN metisTools.METIS_TAC [DB.fetch "words" "word_0", relationTheory.tactictoe_thm_24, DB.fetch "words" "word_eq_0", DB.fetch "words" "fcp_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "w2n_eq_0", DB.fetch "words" "word_abs_def", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "dimindex_1_cases", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_AND_COMP", DB.fetch "words" "WORD_OR_CLAUSES"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065455

WORD_BITS_ZERO2
proof length: 5
proof time: 0.079945
Statistics
  infstep : 203
  nodes   : 94
  maxdepth: 5
Time: 7.911746
  inferstep time: 5.567528
  node_find time: 0.061713
  node_crea time: 1.860198
    pred time: 0.413243
    thmpred time: 0.000012
    mc time: 1.075583
    inst time: 0.0
Proof found: bossLib.RW_TAC bossLib.arith_ss [(DB.fetch "words" "word_bits_n2w"), bitTheory.BITS_ZERO, arithmeticTheory.MIN_DEF] THENL [metisTools.METIS_TAC [bitTheory.BITS_ZERO2, DB.fetch "words" "n2w_BITS", bitTheory.BITS_ZERO, bitTheory.BITS_LT_LOW, bitTheory.BITS_SUC_THM, bitTheory.BITS_ZERO4, bitTheory.BIT_OF_BITS_THM, bitTheory.BIT_BITS_THM, bitTheory.BITS_def, bitTheory.BITS_LT_HIGH, bitTheory.BITS_SUC, bitTheory.BITS_THM2, bitTheory.BITS_THM, bitTheory.BITS_SUM, bitTheory.BITS_SUM2, bitTheory.SLICE_THM], boolLib.STRIP_ASSUME_TAC (DB.fetch "words" "EXISTS_HB") THEN
  bossLib.FULL_SIMP_TAC (bossLib.arith_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close boolSimps.CONJ_ss) [arithmeticTheory.NOT_LESS] THEN
  metisTools.METIS_TAC [bitTheory.BITS_ZERO2, DB.fetch "words" "n2w_BITS", bitTheory.BIT_COMP_THM3, bitTheory.BITS_ZERO, bitTheory.BITS_LT_LOW, bitTheory.BITS_SUC_THM, bitTheory.BITS_ZERO4, bitTheory.BIT_OF_BITS_THM, bitTheory.BIT_BITS_THM, bitTheory.BITS_def, bitTheory.BITS_LT_HIGH, bitTheory.BITS_SUC, bitTheory.BITS_THM2, bitTheory.BITS_THM, bitTheory.BITS_SUM, bitTheory.BITS_SUM2]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007619

WORD_BITS_ZERO3
proof length: 5
proof time: 0.023662
Statistics
  infstep : 16
  nodes   : 10
  maxdepth: 4
Time: 1.188002
  inferstep time: 0.958525
  node_find time: 0.004201
  node_crea time: 0.160845
    pred time: 0.038809
    thmpred time: 0.000002
    mc time: 0.120737
    inst time: 0.0
Proof found: bossLib.Cases THENL [bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [fcpTheory.FCP_EVERY_def, DB.fetch "words" "w2n_w2w", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_extract_n2w", DB.fetch "words" "w2w_n2w", DB.fetch "words" "word_extract_w2w", DB.fetch "words" "word_asr_def", DB.fetch "words" "w2n_11_lift", DB.fetch "words" "dimindex_dimword_le_iso", DB.fetch "words" "dimindex_int_max_le_iso", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "dimindex_uint_max_le_iso", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "word_bits_def"], bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [fcpTheory.FCP_EVERY_def, DB.fetch "words" "w2n_w2w", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_extract_n2w", DB.fetch "words" "w2w_n2w", DB.fetch "words" "word_extract_w2w", DB.fetch "words" "word_asr_def", DB.fetch "words" "w2n_11_lift", DB.fetch "words" "dimindex_dimword_le_iso", DB.fetch "words" "dimindex_int_max_le_iso", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "dimindex_uint_max_le_iso", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "word_sign_extend_bits"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_0", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_bits_def", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "word_extract_def", DB.fetch "words" "word_eq_0"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_bits_def", DB.fetch "words" "word_asr_def", DB.fetch "words" "word_lsr_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_msb_def", DB.fetch "words" "word_H", DB.fetch "words" "word_L", DB.fetch "words" "w2n_w2w", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "WORD_w2w_EXTRACT"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012095

WORD_BITS_LT
Statistics
  infstep : 302
  nodes   : 117
  maxdepth: 5
Time: 10.014441
  inferstep time: 6.492274
  node_find time: 0.106408
  node_crea time: 3.071227
    pred time: 0.657478
    thmpred time: 0.000025
    mc time: 1.657724
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.420507

WORD_EXTRACT_LT
Statistics
  infstep : 204
  nodes   : 98
  maxdepth: 6
Time: 10.050442
  inferstep time: 7.067724
  node_find time: 0.059432
  node_crea time: 2.70305
    pred time: 0.654638
    thmpred time: 0.000024
    mc time: 1.243644
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.070341

WORD_EXTRACT_ZERO
proof length: 2
proof time: 0.050116
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.289289
  inferstep time: 0.204096
  node_find time: 0.001366
  node_crea time: 0.062478
    pred time: 0.014028
    thmpred time: 0.0
    mc time: 0.04355
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def")] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "word_extract_def", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_bits_def", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006865

WORD_EXTRACT_ZERO2
proof length: 2
proof time: 0.036528
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.297221
  inferstep time: 0.182504
  node_find time: 0.002153
  node_crea time: 0.086459
    pred time: 0.020818
    thmpred time: 0.000002
    mc time: 0.06165
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_extract_def", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "n2w_BITS", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "word_bits_def", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "w2w_0"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008339

WORD_EXTRACT_ZERO3
proof length: 3
proof time: 0.065758
Statistics
  infstep : 34
  nodes   : 17
  maxdepth: 4
Time: 1.830974
  inferstep time: 1.326139
  node_find time: 0.009469
  node_crea time: 0.418615
    pred time: 0.104111
    thmpred time: 0.000004
    mc time: 0.207713
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "word_extract_def", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_bits_def", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "sw2sw_w2w"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_0", DB.fetch "words" "w2w_0", DB.fetch "words" "w2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_eq_0", DB.fetch "words" "w2w_n2w", DB.fetch "words" "word_index", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_index_n2w", DB.fetch "words" "tactictoe_thm_19", DB.fetch "words" "sw2sw_sw2sw", DB.fetch "words" "WORD_w2w_EXTRACT", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "word_extract_w2w"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009068

WORD_SLICE_THM
Statistics
  infstep : 264
  nodes   : 121
  maxdepth: 6
Time: 10.095136
  inferstep time: 7.162614
  node_find time: 0.076098
  node_crea time: 2.593773
    pred time: 0.506646
    thmpred time: 0.00002
    mc time: 1.123309
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.087002

WORD_SLICE_ZERO
proof length: 3
proof time: 0.008993
Statistics
  infstep : 34
  nodes   : 20
  maxdepth: 4
Time: 1.962686
  inferstep time: 1.414272
  node_find time: 0.012032
  node_crea time: 0.429311
    pred time: 0.115405
    thmpred time: 0.000005
    mc time: 0.268335
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "word_slice_n2w", DB.fetch "words" "word_slice_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_EXTRACT_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_EXTRACT_ZERO3", DB.fetch "words" "word_eq_0", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "w2n_eq_0", DB.fetch "words" "word_abs_def", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "WORD_EXTRACT_ZERO2", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "WORD_ADD_OR"] THEN
  bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082047

WORD_SLICE_BITS_THM
proof length: 5
proof time: 0.020442
Statistics
  infstep : 19
  nodes   : 11
  maxdepth: 3
Time: 1.172935
  inferstep time: 0.82378
  node_find time: 0.006704
  node_crea time: 0.230453
    pred time: 0.063363
    thmpred time: 0.000002
    mc time: 0.180491
    inst time: 0.0
Proof found: bossLib.Cases THENL [bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "WORD_SLICE_ZERO", DB.fetch "words" "word_slice_def", DB.fetch "words" "WORD_SLICE_ZERO2", DB.fetch "words" "word_slice_n2w", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "word_bits_def", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "WORD_BIT_BITS"] THEN
  bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")], bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "WORD_SLICE_ZERO", DB.fetch "words" "word_slice_def", DB.fetch "words" "WORD_SLICE_ZERO2", DB.fetch "words" "word_slice_n2w", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "word_bits_def", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "WORD_BITS_COMP_THM"] THEN
  bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")]]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.010901

WORD_BITS_SLICE_THM
Statistics
  infstep : 273
  nodes   : 111
  maxdepth: 5
Time: 10.013586
  inferstep time: 7.530713
  node_find time: 0.085836
  node_crea time: 1.998014
    pred time: 0.387211
    thmpred time: 0.000021
    mc time: 1.09446
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.073421

WORD_SLICE_COMP_THM
Statistics
  infstep : 205
  nodes   : 91
  maxdepth: 6
Time: 10.047487
  inferstep time: 7.377766
  node_find time: 0.066144
  node_crea time: 2.341361
    pred time: 0.498885
    thmpred time: 0.000027
    mc time: 1.103804
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.149196

WORD_EXTRACT_COMP_THM
Statistics
  infstep : 325
  nodes   : 90
  maxdepth: 5
Time: 10.029688
  inferstep time: 6.873129
  node_find time: 0.110541
  node_crea time: 2.654721
    pred time: 0.575397
    thmpred time: 0.000015
    mc time: 1.142766
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 1.395633

WORD_ALL_BITS
proof length: 2
proof time: 0.008324
Statistics
  infstep : 12
  nodes   : 8
  maxdepth: 2
Time: 0.698744
  inferstep time: 0.528195
  node_find time: 0.003361
  node_crea time: 0.134669
    pred time: 0.036742
    thmpred time: 0.000001
    mc time: 0.080724
    inst time: 0.0
Proof found: bossLib.SIMP_TAC bossLib.arith_ss [(DB.fetch "words" "word_bits_n2w"), (DB.fetch "words" "w2w_def"), (DB.fetch "words" "w2n_n2w"), (DB.fetch "words" "dimword_def")] THEN bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_bits_def"), (DB.fetch "words" "word_0")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036335

EXTRACT_ALL_BITS
proof length: 4
proof time: 0.006754
Statistics
  infstep : 52
  nodes   : 24
  maxdepth: 4
Time: 2.641573
  inferstep time: 2.012319
  node_find time: 0.014848
  node_crea time: 0.497659
    pred time: 0.120298
    thmpred time: 0.000005
    mc time: 0.247787
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "w2w"), (DB.fetch "words" "word_bits_def")] THEN bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 43028*)i < ", HolKernel.ANTIQUOTE (((Parse.Term [HolKernel.QUOTE " (*#loc 1 324*)dimindex (:'a)"]))), HolKernel.QUOTE " (*#loc 1 43035*)"] THENL
  [bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bit_n2w", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP, fcpTheory.FCP_UNIQUE, DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_H", DB.fetch "words" "word_L", DB.fetch "words" "word_msb_def", DB.fetch "words" "w2w"],
  metisTools.METIS_TAC [DB.fetch "words" "word_bit_def", DB.fetch "words" "word_bit_n2w", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP, fcpTheory.FCP_UNIQUE, DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_H", DB.fetch "words" "word_L", DB.fetch "words" "word_msb_def", DB.fetch "words" "w2w"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01017

WORD_BITS_MIN_HIGH
proof length: 2
proof time: 0.00698
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 2
Time: 0.367249
  inferstep time: 0.258215
  node_find time: 0.002112
  node_crea time: 0.066864
    pred time: 0.017297
    thmpred time: 0.000001
    mc time: 0.060762
    inst time: 0.0
Proof found: bossLib.Cases THEN bossLib.RW_TAC bossLib.arith_ss [arithmeticTheory.MIN_DEF, bitTheory.BIT_def, (DB.fetch "words" "word_bit_n2w"), (DB.fetch "words" "word_bits_n2w"), (DB.fetch "words" "n2w_11"), arithmeticTheory.LESS_MOD, (DB.fetch "words" "tactictoe_thm_27"), (DB.fetch "words" "tactictoe_thm_28"), (DB.fetch "words" "dimword_def")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090676

WORD_EXTRACT_MIN_HIGH
Statistics
  infstep : 168
  nodes   : 69
  maxdepth: 5
Time: 10.047045
  inferstep time: 6.829047
  node_find time: 0.058709
  node_crea time: 2.852764
    pred time: 0.777896
    thmpred time: 0.000038
    mc time: 0.930128
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.22834

CONCAT_EXTRACT
Statistics
  infstep : 243
  nodes   : 63
  maxdepth: 5
Time: 10.044655
  inferstep time: 7.289108
  node_find time: 0.074281
  node_crea time: 2.403313
    pred time: 0.571903
    thmpred time: 0.000015
    mc time: 0.761794
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 1.96104

EXTRACT_CONCAT
Statistics
  infstep : 267
  nodes   : 83
  maxdepth: 5
Time: 10.060967
  inferstep time: 6.538722
  node_find time: 0.090805
  node_crea time: 3.126861
    pred time: 0.723946
    thmpred time: 0.000017
    mc time: 1.006245
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.108439

EXTRACT_JOIN
Statistics
  infstep : 236
  nodes   : 84
  maxdepth: 5
Time: 10.021083
  inferstep time: 6.46066
  node_find time: 0.072306
  node_crea time: 3.203155
    pred time: 0.749978
    thmpred time: 0.000018
    mc time: 1.193297
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.936107

EXTRACT_JOIN_ADD
Statistics
  infstep : 170
  nodes   : 68
  maxdepth: 6
Time: 10.011185
  inferstep time: 6.827396
  node_find time: 0.053132
  node_crea time: 2.865069
    pred time: 0.735554
    thmpred time: 0.000024
    mc time: 1.080446
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.422939

EXTEND_EXTRACT
Statistics
  infstep : 295
  nodes   : 99
  maxdepth: 5
Time: 10.011474
  inferstep time: 6.34381
  node_find time: 0.102165
  node_crea time: 3.213353
    pred time: 0.673114
    thmpred time: 0.000014
    mc time: 1.338122
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.220689

WORD_SLICE_OVER_BITWISE
Statistics
  infstep : 301
  nodes   : 108
  maxdepth: 6
Time: 10.031143
  inferstep time: 7.62978
  node_find time: 0.097545
  node_crea time: 1.961735
    pred time: 0.531127
    thmpred time: 0.000026
    mc time: 0.780264
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.184484

WORD_BITS_OVER_BITWISE
Statistics
  infstep : 456
  nodes   : 148
  maxdepth: 6
Time: 10.000552
  inferstep time: 6.737876
  node_find time: 0.15544
  node_crea time: 2.622611
    pred time: 0.40495
    thmpred time: 0.000026
    mc time: 1.196377
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.137285

WORD_w2w_OVER_BITWISE
proof length: 11
proof time: 0.021439
Statistics
  infstep : 174
  nodes   : 72
  maxdepth: 5
Time: 8.519248
  inferstep time: 5.683445
  node_find time: 0.074261
  node_crea time: 2.329114
    pred time: 0.576446
    thmpred time: 0.000017
    mc time: 1.079564
    inst time: 0.0
Proof found: bossLib.SIMP_TAC bossLib.std_ss [fcpTheory.CART_EQ, (DB.fetch "words" "word_0"), (DB.fetch "words" "word_xor_def"), (DB.fetch "words" "word_or_def"), fcpTheory.FCP_BETA, (DB.fetch "words" "word_and_def")] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_xor_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_and_def", DB.fetch "words" "w2w", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_join_def", DB.fetch "words" "tactictoe_thm_19", DB.fetch "words" "sw2sw_sw2sw", DB.fetch "words" "EXTRACT_ALL_BITS", DB.fetch "words" "word_extract_w2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "WORD_w2w_EXTRACT", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w"] THENL
  [bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 43028*)i < ", HolKernel.ANTIQUOTE (((Parse.Term [HolKernel.QUOTE " (*#loc 1 324*)dimindex (:'a)"]))), HolKernel.QUOTE " (*#loc 1 43035*)"] THENL
  [bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")],
  metisTools.METIS_TAC [DB.fetch "words" "word_and_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "w2w", DB.fetch "words" "sw2sw", DB.fetch "words" "WORD_MODIFY_BIT", DB.fetch "words" "word_eq_0", fcpTheory.FCP_APPLY_UPDATE_THM, DB.fetch "words" "word_bit", fcpTheory.FCP_EXISTS_def, fcpTheory.EL_V2L, DB.fetch "words" "word_lsl_def", fcpTheory.CART_EQ, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_xnor_def"]],
  bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 43028*)i < ", HolKernel.ANTIQUOTE (((Parse.Term [HolKernel.QUOTE " (*#loc 1 324*)dimindex (:'a)"]))), HolKernel.QUOTE " (*#loc 1 43035*)"] THENL
  [bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")],
  metisTools.METIS_TAC [DB.fetch "words" "word_or_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "sw2sw", DB.fetch "words" "w2w", DB.fetch "words" "WORD_MODIFY_BIT", DB.fetch "words" "word_eq_0", fcpTheory.FCP_APPLY_UPDATE_THM, DB.fetch "words" "word_bit", fcpTheory.FCP_EXISTS_def, fcpTheory.EL_V2L, DB.fetch "words" "word_lsl_def", fcpTheory.CART_EQ, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_and_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_xor_def"]],
  bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 43028*)i < ", HolKernel.ANTIQUOTE (((Parse.Term [HolKernel.QUOTE " (*#loc 1 324*)dimindex (:'a)"]))), HolKernel.QUOTE " (*#loc 1 43035*)"] THEN
  bossLib.srw_tac [(bossLib.rewrites [((DB.fetch "fcp" "FCP_BETA")), ((DB.fetch "fcp" "FCP_ETA")), ((DB.fetch "fcp" "CART_EQ"))])] [(DB.fetch "fcp" "FCP_UPDATE_def")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.075264

WORD_EXTRACT_OVER_BITWISE
proof length: 4
proof time: 0.100396
Statistics
  infstep : 195
  nodes   : 64
  maxdepth: 5
Time: 8.260515
  inferstep time: 6.14843
  node_find time: 0.065267
  node_crea time: 1.740321
    pred time: 0.494021
    thmpred time: 0.000018
    mc time: 0.637773
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THENL [metisTools.METIS_TAC [DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_MIN_HIGH", DB.fetch "words" "WORD_BITS_SLICE_THM", DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_EXTRACT_BITS_COMP", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "word_extract_def", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], metisTools.METIS_TAC [DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_MIN_HIGH", DB.fetch "words" "WORD_BITS_SLICE_THM", DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_EXTRACT_BITS_COMP", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "word_extract_def"], metisTools.METIS_TAC [DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_MIN_HIGH", DB.fetch "words" "WORD_BITS_SLICE_THM", DB.fetch "words" "WORD_SLICE_THM", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LT", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_EXTRACT_BITS_COMP"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013567
Replaying proof: 0.007468
Replaying proof: 0.005412

WORD_w2w_OVER_ADD
Statistics
  infstep : 229
  nodes   : 109
  maxdepth: 6
Time: 10.027503
  inferstep time: 7.097624
  node_find time: 0.081823
  node_crea time: 2.529705
    pred time: 0.567653
    thmpred time: 0.00002
    mc time: 1.287545
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.063619

WORD_w2w_OVER_MUL
Statistics
  infstep : 183
  nodes   : 106
  maxdepth: 6
Time: 10.018948
  inferstep time: 7.020259
  node_find time: 0.082783
  node_crea time: 2.683824
    pred time: 0.647979
    thmpred time: 0.000019
    mc time: 1.207739
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.045327

WORD_EXTRACT_OVER_ADD
Statistics
  infstep : 236
  nodes   : 100
  maxdepth: 5
Time: 10.097534
  inferstep time: 6.481313
  node_find time: 0.091782
  node_crea time: 3.197531
    pred time: 0.664276
    thmpred time: 0.000015
    mc time: 1.392462
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.125634

WORD_EXTRACT_OVER_MUL
Statistics
  infstep : 191
  nodes   : 97
  maxdepth: 6
Time: 10.094585
  inferstep time: 6.857995
  node_find time: 0.063541
  node_crea time: 2.936329
    pred time: 0.697238
    thmpred time: 0.000024
    mc time: 1.142992
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.104693

WORD_EXTRACT_OVER_ADD2
Statistics
  infstep : 248
  nodes   : 95
  maxdepth: 5
Time: 10.090221
  inferstep time: 6.901981
  node_find time: 0.096852
  node_crea time: 2.764304
    pred time: 0.578987
    thmpred time: 0.000016
    mc time: 1.246073
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.317155

WORD_EXTRACT_OVER_MUL2
Statistics
  infstep : 251
  nodes   : 101
  maxdepth: 6
Time: 10.009048
  inferstep time: 6.865554
  node_find time: 0.087761
  node_crea time: 2.730674
    pred time: 0.559366
    thmpred time: 0.000024
    mc time: 1.187038
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.28804

WORD_EXTRACT_ID
Statistics
  infstep : 343
  nodes   : 116
  maxdepth: 5
Time: 10.122356
  inferstep time: 6.613427
  node_find time: 0.124479
  node_crea time: 2.983109
    pred time: 0.365641
    thmpred time: 0.00002
    mc time: 1.754668
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.202177
Replaying proof: 0.007692
Replaying proof: 0.004744
Replaying proof: 0.002725
Replaying proof: 0.008264
Replaying proof: 0.008244
Replaying proof: 0.008178
Replaying proof: 0.00735
Replaying proof: 0.012021
Replaying proof: 0.012332
Replaying proof: 0.002231
Replaying proof: 0.00953
Replaying proof: 0.000968
Replaying proof: 0.001039
Replaying proof: 0.000957

WORD_LITERAL_XOR
Statistics
  infstep : 440
  nodes   : 103
  maxdepth: 5
Time: 10.019771
  inferstep time: 7.326662
  node_find time: 0.156502
  node_crea time: 2.028117
    pred time: 0.355112
    thmpred time: 0.000024
    mc time: 1.106055
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.030559
Replaying proof: 0.002619
Replaying proof: 0.059297

bit_field_insert
Statistics
  infstep : 193
  nodes   : 105
  maxdepth: 7
Time: 10.068803
  inferstep time: 7.194541
  node_find time: 0.069739
  node_crea time: 2.54559
    pred time: 0.549555
    thmpred time: 0.000029
    mc time: 1.082581
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.090971

word_join_index
Statistics
  infstep : 265
  nodes   : 81
  maxdepth: 5
Time: 10.038577
  inferstep time: 6.931239
  node_find time: 0.096176
  node_crea time: 2.672328
    pred time: 0.742398
    thmpred time: 0.000024
    mc time: 0.473768
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.189067
Replaying proof: 0.002042
Replaying proof: 0.00255
Replaying proof: 0.002092
Replaying proof: 0.001869
Replaying proof: 0.00212
Replaying proof: 0.001977
Replaying proof: 0.001681

LOG2_w2n
Statistics
  infstep : 290
  nodes   : 84
  maxdepth: 5
Time: 10.011892
  inferstep time: 7.649738
  node_find time: 0.103926
  node_crea time: 1.877346
    pred time: 0.452706
    thmpred time: 0.000022
    mc time: 0.71099
    inst time: 0.0
Proof status: Time Out
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.802957

LEAST_BIT_LT
Statistics
  infstep : 483
  nodes   : 124
  maxdepth: 5
Time: 10.020353
  inferstep time: 7.024916
  node_find time: 0.195062
  node_crea time: 2.185077
    pred time: 0.478
    thmpred time: 0.000021
    mc time: 0.814552
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.50632
Replaying proof: 0.014618
Replaying proof: 0.004352
Replaying proof: 0.002281
Replaying proof: 0.00256
Replaying proof: 0.004655
Replaying proof: 0.003058
Replaying proof: 0.002972
Replaying proof: 0.003052

NOT_UINTMAXw
proof length: 1
proof time: 0.00172
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.22376
  inferstep time: 0.166363
  node_find time: 0.001392
  node_crea time: 0.038799
    pred time: 0.010654
    thmpred time: 0.000001
    mc time: 0.025286
    inst time: 0.0
Proof found: (bossLib.SIMP_TAC ( bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss ) [ ( DB.fetch "words" "word_T_def" ) , ( DB.fetch "words" "n2w_def" ) , ( DB.fetch "words" "tactictoe_thm_16" ) , ( DB.fetch "words" "DIMINDEX_GT_0" ) , ( DB.fetch "words" "UINT_MAX_def" ) , ( DB.fetch "words" "dimword_def" ) ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.089143

NOT_0w
proof length: 1
proof time: 0.043173
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.09962
  inferstep time: 0.073092
  node_find time: 0.000561
  node_crea time: 0.016672
    pred time: 0.004787
    thmpred time: 0.0
    mc time: 0.012216
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_eq_0" , DB.fetch "words" "LEAST_BIT_LT" , DB.fetch "words" "NOT_UINTMAXw" , DB.fetch "words" "w2w" , DB.fetch "words" "WORD_MODIFY_BIT" , DB.fetch "words" "sw2sw" , DB.fetch "words" "word_bit" , fcpTheory.FCP_APPLY_UPDATE_THM , fcpTheory.FCP_EXISTS_def , DB.fetch "words" "word_join_index" , fcpTheory.CART_EQ , fcpTheory.EL_V2L , fcpTheory.FCP , fcpTheory.FCP_UNIQUE , fcpTheory.FCP_CONCAT_def , DB.fetch "words" "word_0"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091749

reduce_and
Statistics
  infstep : 311
  nodes   : 110
  maxdepth: 6
Time: 10.0167
  inferstep time: 6.894105
  node_find time: 0.119512
  node_crea time: 2.598132
    pred time: 0.458277
    thmpred time: 0.000018
    mc time: 1.328968
    inst time: 0.0
Proof status: Time Out
Org tac number: 18
Original proof time: 0.0
Replaying proof: 0.79798

reduce_or
Statistics
  infstep : 304
  nodes   : 100
  maxdepth: 5
Time: 10.072549
  inferstep time: 7.21729
  node_find time: 0.125701
  node_crea time: 2.35393
    pred time: 0.451672
    thmpred time: 0.000016
    mc time: 1.065443
    inst time: 0.0
Proof status: Time Out
Org tac number: 18
Original proof time: 0.0
Replaying proof: 0.775847
Replaying proof: 0.004605
Replaying proof: 0.009535
Replaying proof: 0.025655
Replaying proof: 0.005051
Replaying proof: 0.000424
Replaying proof: 0.038852
Replaying proof: 0.000643

WORD_ADD_0
proof length: 3
proof time: 0.004578
Statistics
  infstep : 9
  nodes   : 4
  maxdepth: 2
Time: 0.500968
  inferstep time: 0.419388
  node_find time: 0.00314
  node_crea time: 0.038355
    pred time: 0.009316
    thmpred time: 0.0
    mc time: 0.043963
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [numposrepTheory.num_to_oct_list_def, numposrepTheory.num_from_oct_list_def, DB.fetch "words" "word_from_oct_list_def", DB.fetch "words" "word_to_oct_list_def", DB.fetch "words" "word_from_oct_string_def", DB.fetch "words" "word_to_oct_string_def", ASCIInumbersTheory.num_from_oct_string_def, ASCIInumbersTheory.num_to_oct_string_def, ASCIInumbersTheory.HEX_primitive_def, ASCIInumbersTheory.UNHEX_primitive_def, DB.fetch "words" "w2l_def", DB.fetch "words" "w2l_l2w", numposrepTheory.l2n_n2l, numposrepTheory.n2l_l2n, DB.fetch "words" "add_with_carry_def", DB.fetch "words" "n2w_w2n"] THENL [bossLib.simp [DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "word_add_def", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_w2w_OVER_ADD", DB.fetch "words" "word_msb_add_word_L", DB.fetch "words" "word_add_n2w", DB.fetch "words" "EXTRACT_JOIN_ADD", DB.fetch "words" "NOT_0w", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "w2n_eq_0"], bossLib.simp [DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "word_add_def", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_add_n2w", DB.fetch "words" "EXTRACT_JOIN_ADD", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_w2w_OVER_ADD", DB.fetch "words" "word_msb_add_word_L", DB.fetch "words" "NOT_0w", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "w2n_eq_0"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.027174

WORD_ADD_ASSOC
proof length: 2
proof time: 0.009411
Statistics
  infstep : 6
  nodes   : 3
  maxdepth: 2
Time: 0.353025
  inferstep time: 0.30149
  node_find time: 0.002206
  node_crea time: 0.029023
    pred time: 0.007342
    thmpred time: 0.0
    mc time: 0.02202
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_add_def", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_w2w_OVER_ADD", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_ADD_0", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_msb_add_word_L", DB.fetch "words" "EXTRACT_JOIN_ADD", DB.fetch "words" "word_add_n2w", DB.fetch "words" "WORD_EQ", DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_xor_def"] THEN bossLib.simp [DB.fetch "words" "word_add_def", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_2comp_def", DB.fetch "words" "w2n_lt", DB.fetch "words" "w2w_lt", DB.fetch "words" "w2n_n2w", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "n2w_mod", DB.fetch "words" "n2w_11", DB.fetch "words" "word_mod_def", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "w2n_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "sw2sw_def"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.007482

WORD_MULT_ASSOC
proof length: 2
proof time: 0.012045
Statistics
  infstep : 8
  nodes   : 6
  maxdepth: 2
Time: 0.545999
  inferstep time: 0.437647
  node_find time: 0.002753
  node_crea time: 0.077605
    pred time: 0.021732
    thmpred time: 0.000001
    mc time: 0.045322
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "word_mul_n2w", DB.fetch "words" "word_L2_def", DB.fetch "words" "WORD_ADD_ASSOC", DB.fetch "words" "WORD_EQ", DB.fetch "words" "EXTRACT_CONCAT", DB.fetch "words" "word_or_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_concat_def", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "word_and_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE"] THEN bossLib.ASM_SIMP_TAC bossLib.arith_ss [DB.fetch "words" "word_mul_def", DB.fetch "words" "word_2comp_def", DB.fetch "words" "w2n_lt", DB.fetch "words" "w2w_lt", DB.fetch "words" "w2n_n2w", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "n2w_mod", DB.fetch "words" "n2w_11", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_mod_def", DB.fetch "words" "w2n_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "sw2sw_def", DB.fetch "words" "w2n_w2w", DB.fetch "words" "word_sign_extend_def"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.048838

WORD_ADD_COMM
proof length: 1
proof time: 0.001878
Statistics
  infstep : 20
  nodes   : 11
  maxdepth: 3
Time: 0.895567
  inferstep time: 0.66133
  node_find time: 0.007505
  node_crea time: 0.156982
    pred time: 0.034281
    thmpred time: 0.000002
    mc time: 0.07923
    inst time: 0.0
Proof found: (bossLib.simp [ DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2" , DB.fetch "words" "WORD_w2w_OVER_ADD" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "w2n_plus1" , DB.fetch "words" "word_msb_add_word_L" , DB.fetch "words" "EXTRACT_JOIN_ADD" , DB.fetch "words" "word_add_n2w" , DB.fetch "words" "word_and_def" , DB.fetch "words" "word_or_def" , DB.fetch "words" "word_xor_def" ])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004605

WORD_MULT_COMM
proof length: 2
proof time: 0.004866
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.365146
  inferstep time: 0.29436
  node_find time: 0.002274
  node_crea time: 0.037258
    pred time: 0.00991
    thmpred time: 0.000001
    mc time: 0.033971
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "word_mul_n2w", DB.fetch "words" "word_L2_def", DB.fetch "words" "EXTRACT_CONCAT", DB.fetch "words" "word_or_def", DB.fetch "words" "word_join_def", DB.fetch "words" "word_concat_def", DB.fetch "words" "WORD_ADD_ASSOC", DB.fetch "words" "WORD_ADD_COMM", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "word_and_def", DB.fetch "words" "word_xor_def"] THEN bossLib.ASM_SIMP_TAC bossLib.arith_ss [DB.fetch "words" "word_mul_def", DB.fetch "words" "word_2comp_def", DB.fetch "words" "w2n_lt", DB.fetch "words" "w2w_lt", DB.fetch "words" "w2n_n2w", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "n2w_mod", DB.fetch "words" "n2w_11", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_mod_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "w2n_def", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "sw2sw_def", DB.fetch "words" "w2n_w2w", DB.fetch "words" "word_sign_extend_def"]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005871

WORD_MULT_CLAUSES
proof length: 3
proof time: 0.131168
Statistics
  infstep : 12
  nodes   : 8
  maxdepth: 3
Time: 0.921752
  inferstep time: 0.581222
  node_find time: 0.005315
  node_crea time: 0.24625
    pred time: 0.070017
    thmpred time: 0.000003
    mc time: 0.172411
    inst time: 0.0
Proof found: boolLib.REPEAT bossLib.Cases THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [arithmeticTheory.MULT_ASSOC] THEN
  metisTools.METIS_TAC [arithmeticTheory.MULT_CLAUSES, arithmeticTheory.DIV_UNIQUE, arithmeticTheory.MOD_UNIQUE, arithmeticTheory.DIV_MULT, numeralTheory.numeral_mult, relationTheory.tactictoe_thm_24, arithmeticTheory.RIGHT_ADD_DISTRIB, arithmeticTheory.LEFT_ADD_DISTRIB, DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_lsl_def", fcpTheory.CART_EQ]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.019055

WORD_LEFT_ADD_DISTRIB
proof length: 2
proof time: 0.002305
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.479695
  inferstep time: 0.329702
  node_find time: 0.002669
  node_crea time: 0.114371
    pred time: 0.026569
    thmpred time: 0.000001
    mc time: 0.072145
    inst time: 0.0
Proof found: boolLib.REPEAT bossLib.Cases THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [arithmeticTheory.MULT_ASSOC]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.007442

WORD_RIGHT_ADD_DISTRIB
proof length: 1
proof time: 0.002683
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.231561
  inferstep time: 0.153809
  node_find time: 0.001847
  node_crea time: 0.057909
    pred time: 0.014013
    thmpred time: 0.0
    mc time: 0.031389
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_MULT_ASSOC" , DB.fetch "words" "WORD_MULT_COMM" , DB.fetch "words" "word_mul_def" , DB.fetch "words" "WORD_EXTRACT_OVER_MUL" , DB.fetch "words" "WORD_EXTRACT_OVER_MUL2" , DB.fetch "words" "WORD_w2w_OVER_MUL" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_ADD_COMM" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2" , DB.fetch "words" "WORD_w2w_OVER_ADD" ])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.012945

WORD_ADD_SUB_ASSOC
proof length: 1
proof time: 0.09381
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.133935
  inferstep time: 0.108682
  node_find time: 0.00049
  node_crea time: 0.016115
    pred time: 0.004061
    thmpred time: 0.0
    mc time: 0.012384
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB" , DB.fetch "words" "WORD_ADD_COMM" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2" , DB.fetch "words" "WORD_w2w_OVER_ADD" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "w2n_plus1" , DB.fetch "words" "word_msb_add_word_L" , DB.fetch "words" "EXTRACT_JOIN_ADD"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.021889

WORD_ADD_SUB_SYM
proof length: 1
proof time: 0.046237
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.125848
  inferstep time: 0.093712
  node_find time: 0.000458
  node_crea time: 0.020612
    pred time: 0.004053
    thmpred time: 0.0
    mc time: 0.015597
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB" , DB.fetch "words" "WORD_ADD_COMM" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2" , DB.fetch "words" "WORD_w2w_OVER_ADD" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "w2n_plus1" , DB.fetch "words" "word_msb_add_word_L"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.02833

WORD_ADD_LINV
Statistics
  infstep : 229
  nodes   : 90
  maxdepth: 5
Time: 10.098092
  inferstep time: 7.034577
  node_find time: 0.097033
  node_crea time: 2.62452
    pred time: 0.496159
    thmpred time: 0.000018
    mc time: 1.474187
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.126649

WORD_ADD_RINV
proof length: 1
proof time: 0.029833
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.112807
  inferstep time: 0.079723
  node_find time: 0.000662
  node_crea time: 0.018936
    pred time: 0.003778
    thmpred time: 0.000001
    mc time: 0.020013
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_LINV" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "word_2comp_dimindex_1" , DB.fetch "words" "word_quot_def" , DB.fetch "words" "word_rem_def" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "word_add_def" , DB.fetch "words" "w2n_plus1" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_ADD_COMM"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011683

WORD_SUB_REFL
proof length: 1
proof time: 0.027763
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.110493
  inferstep time: 0.057828
  node_find time: 0.000794
  node_crea time: 0.038376
    pred time: 0.003749
    thmpred time: 0.0
    mc time: 0.038515
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "LEAST_BIT_LT" , DB.fetch "words" "LOG2_w2n" , DB.fetch "words" "LOG2_w2n_lt" , DB.fetch "words" "w2n_eq_0" , DB.fetch "words" "NOT_0w" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "WORD_ADD_LINV" , DB.fetch "words" "WORD_ADD_RINV" , DB.fetch "words" "WORD_BITS_ZERO" , DB.fetch "words" "WORD_BITS_ZERO3" , DB.fetch "words" "WORD_EXTRACT_ZERO" , DB.fetch "words" "WORD_EXTRACT_ZERO3" , DB.fetch "words" "WORD_MULT_CLAUSES"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007446

WORD_SUB_ADD2
proof length: 1
proof time: 0.086634
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.143169
  inferstep time: 0.10986
  node_find time: 0.000635
  node_crea time: 0.017584
    pred time: 0.003657
    thmpred time: 0.000001
    mc time: 0.017517
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_ADD_COMM" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_RINV" , DB.fetch "words" "WORD_ADD_0" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011582

WORD_ADD_SUB
proof length: 1
proof time: 0.055848
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.137433
  inferstep time: 0.105265
  node_find time: 0.000626
  node_crea time: 0.018009
    pred time: 0.004234
    thmpred time: 0.0
    mc time: 0.016918
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_ADD_COMM" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB" , DB.fetch "words" "word_add_def" , DB.fetch "words" "WORD_ADD_OR" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD2" , DB.fetch "words" "WORD_w2w_OVER_ADD" , DB.fetch "words" "WORD_MULT_CLAUSES"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007542

WORD_ADD_EQ_SUB
Statistics
  infstep : 253
  nodes   : 89
  maxdepth: 6
Time: 10.011853
  inferstep time: 7.050239
  node_find time: 0.126085
  node_crea time: 2.412001
    pred time: 0.491297
    thmpred time: 0.000026
    mc time: 1.156035
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.029441

WORD_ADD_INV_0_EQ
proof length: 2
proof time: 0.113125
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.351763
  inferstep time: 0.259589
  node_find time: 0.002207
  node_crea time: 0.064611
    pred time: 0.010655
    thmpred time: 0.0
    mc time: 0.05016
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "word_add_def", DB.fetch "words" "WORD_ADD_ASSOC", DB.fetch "words" "WORD_ADD_COMM", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_w2w_OVER_ADD", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_ADD_0"] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_SUB_ADD", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_SUB_ADD2", DB.fetch "words" "WORD_ADD_SUB", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_ADD_0", DB.fetch "words" "WORD_ADD_RINV", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt", DB.fetch "words" "w2n_eq_0"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.057529

WORD_EQ_ADD_LCANCEL
Statistics
  infstep : 204
  nodes   : 73
  maxdepth: 5
Time: 10.007294
  inferstep time: 6.73278
  node_find time: 0.084683
  node_crea time: 2.863635
    pred time: 0.534178
    thmpred time: 0.000014
    mc time: 1.302071
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.048735

WORD_EQ_ADD_RCANCEL
proof length: 2
proof time: 0.028904
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.259706
  inferstep time: 0.18996
  node_find time: 0.001407
  node_crea time: 0.035345
    pred time: 0.00891
    thmpred time: 0.000001
    mc time: 0.036994
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_ADD_ASSOC", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_EQ_ADD_LCANCEL", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_ADD_SUB", DB.fetch "words" "WORD_ADD_COMM", DB.fetch "words" "WORD_ADD_INV_0_EQ", DB.fetch "words" "word_add_def", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_w2w_OVER_ADD"] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_SUB_ADD", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_ADD2", DB.fetch "words" "word_add_def", DB.fetch "words" "w2n_plus1", DB.fetch "words" "WORD_ADD_SUB", DB.fetch "words" "word_div_def", DB.fetch "words" "word_mod_def", DB.fetch "words" "word_mul_def", DB.fetch "words" "word_2comp_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "LOG2_w2n_lt"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.028437

WORD_NEG
Statistics
  infstep : 245
  nodes   : 81
  maxdepth: 5
Time: 10.005083
  inferstep time: 6.786618
  node_find time: 0.109683
  node_crea time: 2.729076
    pred time: 0.454974
    thmpred time: 0.000026
    mc time: 1.627273
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.059703

WORD_NOT
proof length: 2
proof time: 0.044821
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.266217
  inferstep time: 0.198463
  node_find time: 0.001402
  node_crea time: 0.040269
    pred time: 0.008469
    thmpred time: 0.0
    mc time: 0.040047
    inst time: 0.0
Proof found: bossLib.Cases THEN metisTools.METIS_TAC [DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "WORD_LITERAL_AND", DB.fetch "words" "WORD_LITERAL_OR", DB.fetch "words" "tactictoe_thm_38", DB.fetch "words" "tactictoe_thm_41", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_NEG", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006956

WORD_NEG_0
proof length: 1
proof time: 0.001297
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 1
Time: 0.221397
  inferstep time: 0.171825
  node_find time: 0.001871
  node_crea time: 0.032062
    pred time: 0.006561
    thmpred time: 0.000001
    mc time: 0.02243
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "WORD_ADD_LINV" , DB.fetch "words" "WORD_ADD_RINV" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "sw2sw_w2w" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "WORD_NEG_1" , DB.fetch "words" "WORD_NEG" , DB.fetch "words" "word_2comp_n2w" , DB.fetch "words" "WORD_NOT" , DB.fetch "words" "bit_field_insert" , DB.fetch "words" "w2n_minus1" , DB.fetch "words" "WORD_NEG_1_T" , DB.fetch "words" "word_2comp_dimindex_1" , DB.fetch "words" "word_quot_def" , DB.fetch "words" "word_rem_def" ])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.004631

WORD_NEG_ADD
Statistics
  infstep : 232
  nodes   : 92
  maxdepth: 6
Time: 10.032036
  inferstep time: 7.065801
  node_find time: 0.100482
  node_crea time: 2.507624
    pred time: 0.493491
    thmpred time: 0.00002
    mc time: 1.309714
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.219973

WORD_NEG_NEG
Statistics
  infstep : 433
  nodes   : 103
  maxdepth: 5
Time: 10.080763
  inferstep time: 7.642128
  node_find time: 0.160763
  node_crea time: 1.745672
    pred time: 0.370535
    thmpred time: 0.000018
    mc time: 0.850729
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.173754

WORD_SUB_SUB
proof length: 1
proof time: 0.063812
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.131957
  inferstep time: 0.105291
  node_find time: 0.000641
  node_crea time: 0.016272
    pred time: 0.003731
    thmpred time: 0.0
    mc time: 0.013717
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_ADD_SUB" , DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_SUB_RNEG" , DB.fetch "words" "WORD_SUB_LNEG" , DB.fetch "words" "WORD_ADD_ASSOC" , DB.fetch "words" "WORD_EQ_ADD_LCANCEL" , DB.fetch "words" "WORD_EQ_ADD_RCANCEL" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB" , DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB" , DB.fetch "words" "WORD_NEG_ADD"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011282

WORD_EQ_SUB_LADD
proof length: 1
proof time: 0.009894
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.2059
  inferstep time: 0.163691
  node_find time: 0.001042
  node_crea time: 0.019356
    pred time: 0.003666
    thmpred time: 0.0
    mc time: 0.024138
    inst time: 0.0
Proof found: (bossLib.METIS_TAC [ ( DB.fetch "words" "WORD_ADD_SUB" ) , ( DB.fetch "words" "WORD_SUB_ADD" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.114954

WORD_EQ_SUB_RADD
proof length: 1
proof time: 0.022164
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.257588
  inferstep time: 0.223975
  node_find time: 0.001378
  node_crea time: 0.020388
    pred time: 0.005052
    thmpred time: 0.0
    mc time: 0.014799
    inst time: 0.0
Proof found: (bossLib.METIS_TAC [ ( DB.fetch "words" "WORD_ADD_SUB" ) , ( DB.fetch "words" "WORD_SUB_ADD" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.037361

WORD_LCANCEL_SUB
proof length: 1
proof time: 0.105939
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.177747
  inferstep time: 0.127346
  node_find time: 0.000605
  node_crea time: 0.016801
    pred time: 0.00392
    thmpred time: 0.0
    mc time: 0.018091
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_EQ_SUB_LADD" , DB.fetch "words" "WORD_EQ_SUB_RADD" , DB.fetch "words" "WORD_SUB_SUB" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_EQ_SUB_ZERO" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_SUB_SUB2" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_SUB_RNEG" , DB.fetch "words" "WORD_ADD_SUB" , DB.fetch "words" "WORD_SUB_LNEG" , DB.fetch "words" "WORD_NOT"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012603

WORD_RCANCEL_SUB
Statistics
  infstep : 377
  nodes   : 66
  maxdepth: 4
Time: 10.011679
  inferstep time: 8.120876
  node_find time: 0.148309
  node_crea time: 1.20665
    pred time: 0.292153
    thmpred time: 0.000021
    mc time: 0.542275
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040179

WORD_SUB_PLUS
proof length: 1
proof time: 0.054354
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.108252
  inferstep time: 0.07983
  node_find time: 0.000579
  node_crea time: 0.018039
    pred time: 0.004316
    thmpred time: 0.0
    mc time: 0.014639
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_EQ_SUB_LADD" , DB.fetch "words" "WORD_EQ_SUB_RADD" , DB.fetch "words" "WORD_SUB_SUB" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_SUB_RNEG" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "WORD_LCANCEL_SUB" , DB.fetch "words" "WORD_RCANCEL_SUB" , DB.fetch "words" "WORD_EQ_SUB_ZERO" , DB.fetch "words" "WORD_SUB_SUB2" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_ADD_SUB"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009337

WORD_SUB_LZERO
proof length: 2
proof time: 0.028874
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 2
Time: 0.542737
  inferstep time: 0.438778
  node_find time: 0.002769
  node_crea time: 0.068467
    pred time: 0.014645
    thmpred time: 0.0
    mc time: 0.054038
    inst time: 0.0
Proof found: bossLib.Cases THEN metisTools.METIS_TAC [DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_SUB_LNEG", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_RNEG", DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_EQ_SUB_ZERO", DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "WORD_ADD_RINV", DB.fetch "words" "word_abs_def", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "WORD_NEG_0", DB.fetch "words" "WORD_ADD_SUB", DB.fetch "words" "WORD_EQ_SUB_RADD", DB.fetch "words" "WORD_ADD_EQ_SUB"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006923

WORD_SUB_RZERO
proof length: 1
proof time: 0.07002
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.130971
  inferstep time: 0.087208
  node_find time: 0.000762
  node_crea time: 0.022896
    pred time: 0.003867
    thmpred time: 0.0
    mc time: 0.026846
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_EQ_SUB_ZERO" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_EQ_SUB_RADD" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_EQ_SUB_LADD" , DB.fetch "words" "WORD_LCANCEL_SUB" , DB.fetch "words" "WORD_RCANCEL_SUB" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_SUB_PLUS" , DB.fetch "words" "WORD_SUB_RNEG" , DB.fetch "words" "WORD_SUB_SUB" , DB.fetch "words" "WORD_SUB_SUB2"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008453

WORD_SUM_ZERO
proof length: 2
proof time: 0.018704
Statistics
  infstep : 11
  nodes   : 4
  maxdepth: 2
Time: 0.489293
  inferstep time: 0.348224
  node_find time: 0.006171
  node_crea time: 0.088154
    pred time: 0.019795
    thmpred time: 0.0
    mc time: 0.069163
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN bossLib.METIS_TAC [boolLib.GSYM (DB.fetch "words" "WORD_ADD_LINV"), (DB.fetch "words" "WORD_EQ_ADD_RCANCEL")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.02943

WORD_EQ_NEG
proof length: 1
proof time: 0.036335
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.090658
  inferstep time: 0.064412
  node_find time: 0.000478
  node_crea time: 0.015569
    pred time: 0.003901
    thmpred time: 0.000001
    mc time: 0.012911
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_ADD" , DB.fetch "words" "WORD_SUB_LNEG" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_SUB_RNEG" , DB.fetch "words" "WORD_SUB_SUB3" , DB.fetch "words" "WORD_ADD_LINV" , DB.fetch "words" "WORD_NEG_NEG" , DB.fetch "words" "word_2comp_def" , DB.fetch "words" "WORD_ADD_RINV" , DB.fetch "words" "WORD_NEG" , DB.fetch "words" "WORD_NOT" , DB.fetch "words" "WORD_SUB_LZERO" , DB.fetch "words" "word_2comp_dimindex_1" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "WORD_ADD_SUB3" , DB.fetch "words" "WORD_SUM_ZERO"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011155

WORD_SUB_TRIANGLE
proof length: 1
proof time: 0.045384
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.167873
  inferstep time: 0.124969
  node_find time: 0.001119
  node_crea time: 0.031179
    pred time: 0.008187
    thmpred time: 0.000001
    mc time: 0.020598
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_SUB_SYM" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_EQ_SUB_LADD" , DB.fetch "words" "WORD_EQ_SUB_RADD" , DB.fetch "words" "WORD_SUB_PLUS" , DB.fetch "words" "WORD_SUB_SUB" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_SUB" , DB.fetch "words" "WORD_SUB_ADD2" , DB.fetch "words" "WORD_LCANCEL_SUB" , DB.fetch "words" "WORD_RCANCEL_SUB" , DB.fetch "words" "WORD_EQ_SUB_ZERO" , DB.fetch "words" "WORD_NEG_SUB" , DB.fetch "words" "WORD_SUB_NEG"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032539

WORD_NOT_T
proof length: 1
proof time: 0.033811
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.114383
  inferstep time: 0.061294
  node_find time: 0.00081
  node_crea time: 0.036568
    pred time: 0.003278
    thmpred time: 0.0
    mc time: 0.020944
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_0" , DB.fetch "words" "WORD_XOR_CLAUSES" , DB.fetch "words" "WORD_OR_COMP" , DB.fetch "words" "WORD_XOR_COMP" , DB.fetch "words" "FCP_T_F" , DB.fetch "words" "WORD_AND_CLAUSES" , DB.fetch "words" "WORD_OR_CLAUSES" , DB.fetch "words" "reduce_and" , DB.fetch "words" "WORD_NEG_1" , DB.fetch "words" "word_T_def" , DB.fetch "words" "saturate_n2w_def" , DB.fetch "words" "w2n_plus1" , DB.fetch "words" "NOT_UINTMAXw" , DB.fetch "words" "tactictoe_thm_45" , DB.fetch "words" "word_T" , DB.fetch "words" "WORD_AND_COMP"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015032

WORD_NEG_T
proof length: 3
proof time: 0.037304
Statistics
  infstep : 39
  nodes   : 17
  maxdepth: 3
Time: 1.647021
  inferstep time: 1.263011
  node_find time: 0.014513
  node_crea time: 0.268564
    pred time: 0.057008
    thmpred time: 0.000003
    mc time: 0.179924
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "WORD_NEG"), (DB.fetch "words" "WORD_ADD_SUB")] THEN boolLib.REWRITE_TAC [boolLib.GSYM (DB.fetch "words" "WORD_NOT_0"), (DB.fetch "words" "WORD_NOT_NOT")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "WORD_ADD_0", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "w2n_plus1", DB.fetch "words" "WORD_NEG", DB.fetch "words" "reduce_and", DB.fetch "words" "tactictoe_thm_46", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "dimindex_1_cases", DB.fetch "words" "reduce_or", DB.fetch "words" "tactictoe_thm_50", DB.fetch "words" "word_compare_def", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_NOT", DB.fetch "words" "bit_field_insert", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_BIT_BITS"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008308

WORD_MULT_SUC
proof length: 3
proof time: 0.132815
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.537989
  inferstep time: 0.389895
  node_find time: 0.00235
  node_crea time: 0.090358
    pred time: 0.016197
    thmpred time: 0.000002
    mc time: 0.089164
    inst time: 0.0
Proof found: boolLib.REPEAT bossLib.Cases THENL [metisTools.METIS_TAC [DB.fetch "words" "word_mul_n2w", numeralTheory.numeral_distrib, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_L2_def", DB.fetch "words" "word_add_n2w", DB.fetch "words" "WORD_ADD_OR"], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close WORD_ss) [DB.fetch "words" "word_mul_n2w", DB.fetch "words" "WORD_INDUCT", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_L2_def", arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, numpairTheory.tri_def, DB.fetch "words" "word_add_n2w"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044986

WORD_NEG_LMUL
Statistics
  infstep : 218
  nodes   : 76
  maxdepth: 5
Time: 10.014523
  inferstep time: 7.782445
  node_find time: 0.093744
  node_crea time: 1.794116
    pred time: 0.362821
    thmpred time: 0.000021
    mc time: 0.94846
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.196217

WORD_NEG_MUL
proof length: 1
proof time: 0.052384
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.11706
  inferstep time: 0.081927
  node_find time: 0.000814
  node_crea time: 0.021353
    pred time: 0.004172
    thmpred time: 0.0
    mc time: 0.020793
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "sw2sw_w2w" , DB.fetch "words" "bit_field_insert" , DB.fetch "words" "WORD_NEG_1" , DB.fetch "words" "w2n_minus1" , DB.fetch "words" "WORD_NEG_1_T" , DB.fetch "words" "WORD_NEG_LMUL" , DB.fetch "words" "WORD_NEG_RMUL" , DB.fetch "words" "WORD_MULT_CLAUSES" , DB.fetch "words" "WORD_NEG" , DB.fetch "words" "WORD_NOT" , DB.fetch "words" "WORD_NEG_T" , DB.fetch "words" "word_mul_def" , DB.fetch "words" "WORD_MULT_SUC" , DB.fetch "words" "word_mul_n2w" , DB.fetch "words" "WORD_MULT_COMM" , DB.fetch "words" "WORD_LEFT_ADD_DISTRIB"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009089

sw2sw_w2w_add
Statistics
  infstep : 234
  nodes   : 92
  maxdepth: 6
Time: 10.014356
  inferstep time: 6.899605
  node_find time: 0.089852
  node_crea time: 2.697758
    pred time: 0.532527
    thmpred time: 0.000021
    mc time: 1.110715
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.149612

WORD_ADD_BIT0
Statistics
  infstep : 372
  nodes   : 111
  maxdepth: 5
Time: 10.079026
  inferstep time: 7.344665
  node_find time: 0.165807
  node_crea time: 2.006591
    pred time: 0.478944
    thmpred time: 0.000022
    mc time: 0.831457
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.052234

WORD_ADD_BIT
Statistics
  infstep : 300
  nodes   : 90
  maxdepth: 5
Time: 10.006574
  inferstep time: 6.946481
  node_find time: 0.122839
  node_crea time: 2.466474
    pred time: 0.473587
    thmpred time: 0.000022
    mc time: 1.058171
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.319123

WORD_LEFT_SUB_DISTRIB
proof length: 2
proof time: 0.038107
Statistics
  infstep : 34
  nodes   : 11
  maxdepth: 3
Time: 1.376287
  inferstep time: 1.098028
  node_find time: 0.013653
  node_crea time: 0.191881
    pred time: 0.045431
    thmpred time: 0.000004
    mc time: 0.098973
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "word_sub_def"), (DB.fetch "words" "WORD_EQ_ADD_LCANCEL")] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_ADD_RINV", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_MULT_SUC", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "WORD_NEG_ADD"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007866

WORD_LITERAL_MULT
Statistics
  infstep : 210
  nodes   : 104
  maxdepth: 6
Time: 10.025827
  inferstep time: 6.326718
  node_find time: 0.103117
  node_crea time: 3.206821
    pred time: 0.536898
    thmpred time: 0.00003
    mc time: 1.880495
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.020196

WORD_LITERAL_ADD
Statistics
  infstep : 320
  nodes   : 111
  maxdepth: 6
Time: 10.04078
  inferstep time: 6.865641
  node_find time: 0.134673
  node_crea time: 2.549817
    pred time: 0.468741
    thmpred time: 0.000016
    mc time: 1.380079
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.324796

WORD_SUB_INTRO
proof length: 9
proof time: 0.241936
Statistics
  infstep : 18
  nodes   : 11
  maxdepth: 3
Time: 1.294417
  inferstep time: 0.977157
  node_find time: 0.008811
  node_crea time: 0.156123
    pred time: 0.036372
    thmpred time: 0.000003
    mc time: 0.178645
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "WORD_NEG_EQ"), (DB.fetch "words" "WORD_NEG_LMUL"), (DB.fetch "words" "WORD_NEG_NEG"), (DB.fetch "words" "WORD_MULT_CLAUSES")] THENL [metisTools.METIS_TAC [DB.fetch "words" "WORD_SUB", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "WORD_NEG_ADD", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_NEG", DB.fetch "words" "WORD_SUB_SUB3", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "WORD_SUB_RNEG", DB.fetch "words" "WORD_NEG_SUB", DB.fetch "words" "WORD_SUB_PLUS", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_EQ_SUB_LADD", DB.fetch "words" "WORD_EQ_SUB_RADD", DB.fetch "words" "WORD_SUB_SUB"], metisTools.METIS_TAC [DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_ADD_RINV", DB.fetch "words" "WORD_SUB", DB.fetch "words" "WORD_SUB_NEG", DB.fetch "words" "WORD_SUB_SUB3", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "WORD_SUB_RNEG", DB.fetch "words" "WORD_SUB_PLUS", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_EQ_SUB_LADD", DB.fetch "words" "WORD_EQ_SUB_RADD", DB.fetch "words" "WORD_SUB_SUB", DB.fetch "words" "WORD_SUB_ADD2", DB.fetch "words" "WORD_NEG_SUB"], metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_LEFT_SUB_DISTRIB", DB.fetch "words" "WORD_RIGHT_SUB_DISTRIB", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_MULT_SUC", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "WORD_SUB"], metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_LEFT_SUB_DISTRIB", DB.fetch "words" "WORD_RIGHT_SUB_DISTRIB", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_RNEG"], metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_NEG", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_LITERAL_MULT", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "word_2comp_def"], metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_LEFT_SUB_DISTRIB", DB.fetch "words" "WORD_RIGHT_SUB_DISTRIB", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_RNEG"], boolLib.REWRITE_TAC [(DB.fetch "words" "word_sub_def"), (DB.fetch "words" "WORD_LEFT_ADD_DISTRIB"), (DB.fetch "words" "WORD_NEG_RMUL")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LEFT_SUB_DISTRIB", DB.fetch "words" "WORD_RIGHT_SUB_DISTRIB", DB.fetch "words" "WORD_MULT_ASSOC", DB.fetch "words" "WORD_MULT_COMM", DB.fetch "words" "word_mul_def", DB.fetch "words" "WORD_EXTRACT_OVER_MUL", DB.fetch "words" "WORD_w2w_OVER_MUL", DB.fetch "words" "WORD_EXTRACT_OVER_MUL2", DB.fetch "words" "WORD_MULT_SUC", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "WORD_LITERAL_MULT"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.062663

n2w_sub
proof length: 1
proof time: 0.045003
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.13614
  inferstep time: 0.102882
  node_find time: 0.000853
  node_crea time: 0.020816
    pred time: 0.004358
    thmpred time: 0.0
    mc time: 0.018596
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LITERAL_ADD" , DB.fetch "words" "WORD_SUB_REFL" , DB.fetch "words" "WORD_SUB_LZERO" , DB.fetch "words" "WORD_EQ_SUB_ZERO" , DB.fetch "words" "WORD_NOT" , DB.fetch "words" "WORD_SUB_INTRO" , DB.fetch "words" "WORD_SUB_RZERO" , DB.fetch "words" "word_sub_def" , DB.fetch "words" "WORD_ADD_SUB" , DB.fetch "words" "WORD_SUB_PLUS" , DB.fetch "words" "WORD_EQ_SUB_RADD" , DB.fetch "words" "WORD_SUB_LNEG" , DB.fetch "words" "WORD_ADD_EQ_SUB" , DB.fetch "words" "WORD_SUB_ADD" , DB.fetch "words" "WORD_ADD_SUB_ASSOC" , DB.fetch "words" "WORD_ADD_SUB2"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.136459

n2w_sub_eq_0
proof length: 3
proof time: 0.099687
Statistics
  infstep : 86
  nodes   : 33
  maxdepth: 4
Time: 3.425834
  inferstep time: 2.546923
  node_find time: 0.037294
  node_crea time: 0.665556
    pred time: 0.165321
    thmpred time: 0.000008
    mc time: 0.265635
    inst time: 0.0
Proof found: bossLib.Cases THENL [metisTools.METIS_TAC [numeralTheory.numeral_distrib, arithmeticTheory.ZERO_LESS_EQ, arithmeticTheory.SUB_0, arithmeticTheory.SUB, DB.fetch "words" "LOG2_w2n", DB.fetch "words" "tactictoe_thm_49", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_SUM_ZERO", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_compare_def", DB.fetch "words" "tactictoe_thm_46", DB.fetch "words" "tactictoe_thm_50", DB.fetch "words" "WORD_BITS_ZERO3", DB.fetch "words" "WORD_EXTRACT_ZERO3", DB.fetch "words" "dimindex_1_cases"], metisTools.METIS_TAC [arithmeticTheory.OR_LESS, arithmeticTheory.NOT_LEQ, arithmeticTheory.LESS_EQ, arithmeticTheory.NOT_NUM_EQ, arithmeticTheory.NOT_SUC_LESS_EQ, arithmeticTheory.SUB_LEFT_SUC, arithmeticTheory.SUB, numeralTheory.tactictoe_thm_14, numeralTheory.tactictoe_thm_17, numeralTheory.tactictoe_thm_20, numeralTheory.tactictoe_thm_23, numeralTheory.tactictoe_thm_26, bitTheory.BITS_THM, arithmeticTheory.NOT_SUC_LESS_EQ_0, arithmeticTheory.LESS_EQ_MONO, arithmeticTheory.SUB_MONO_EQ]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.137431

WORD_H_WORD_L
Statistics
  infstep : 385
  nodes   : 150
  maxdepth: 6
Time: 10.074302
  inferstep time: 5.499922
  node_find time: 0.168919
  node_crea time: 3.855678
    pred time: 0.508356
    thmpred time: 0.000022
    mc time: 2.145823
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014638

word_L_MULT
Statistics
  infstep : 316
  nodes   : 88
  maxdepth: 5
Time: 10.045757
  inferstep time: 7.292806
  node_find time: 0.13423
  node_crea time: 2.126621
    pred time: 0.395289
    thmpred time: 0.000019
    mc time: 1.183502
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.239604

ASR_ADD
Statistics
  infstep : 265
  nodes   : 84
  maxdepth: 5
Time: 10.00942
  inferstep time: 7.043717
  node_find time: 0.11705
  node_crea time: 2.433948
    pred time: 0.69278
    thmpred time: 0.000028
    mc time: 0.815457
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.141933

LSR_ADD
proof length: 4
proof time: 0.019918
Statistics
  infstep : 19
  nodes   : 9
  maxdepth: 3
Time: 1.144143
  inferstep time: 0.848892
  node_find time: 0.008135
  node_crea time: 0.199397
    pred time: 0.053645
    thmpred time: 0.000004
    mc time: 0.133111
    inst time: 0.0
Proof found: boolLib.NTAC 2 SHIFT_WORD_TAC THEN bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 54454*)i + n < dimindex (:'a)"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) []
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.050345

ROR_ADD
proof length: 1
proof time: 0.02345
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.1868
  inferstep time: 0.145325
  node_find time: 0.001223
  node_crea time: 0.029256
    pred time: 0.00405
    thmpred time: 0.0
    mc time: 0.023675
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.016607

LSL_ADD
Statistics
  infstep : 399
  nodes   : 117
  maxdepth: 5
Time: 10.119642
  inferstep time: 6.143502
  node_find time: 0.179553
  node_crea time: 3.206211
    pred time: 0.573043
    thmpred time: 0.00002
    mc time: 1.27657
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.065027

ASR_LIMIT
proof length: 1
proof time: 0.006909
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.199647
  inferstep time: 0.14707
  node_find time: 0.001175
  node_crea time: 0.036383
    pred time: 0.01937
    thmpred time: 0.000001
    mc time: 0.02002
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.010268

ASR_UINT_MAX
proof length: 1
proof time: 0.003801
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.165527
  inferstep time: 0.136854
  node_find time: 0.001087
  node_crea time: 0.016144
    pred time: 0.003102
    thmpred time: 0.0
    mc time: 0.014558
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.006868

LSR_LIMIT
proof length: 1
proof time: 0.003522
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.165891
  inferstep time: 0.135086
  node_find time: 0.001154
  node_crea time: 0.017599
    pred time: 0.003853
    thmpred time: 0.000001
    mc time: 0.014913
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.006566

LSL_LIMIT
proof length: 2
proof time: 0.005939
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.333939
  inferstep time: 0.272395
  node_find time: 0.001927
  node_crea time: 0.035812
    pred time: 0.008726
    thmpred time: 0.000002
    mc time: 0.030877
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "sw2sw_w2w"), (DB.fetch "words" "WORD_OR_CLAUSES"), (DB.fetch "words" "WORD_ADD_0")] THEN bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "word_bits_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "word_and_def"), (DB.fetch "words" "word_0"), (DB.fetch "words" "w2w"), (DB.fetch "words" "DIMINDEX_GT_0")]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.008319

ROR_CYCLE
proof length: 2
proof time: 0.009605
Statistics
  infstep : 21
  nodes   : 9
  maxdepth: 3
Time: 1.253835
  inferstep time: 0.955009
  node_find time: 0.009392
  node_crea time: 0.211352
    pred time: 0.058891
    thmpred time: 0.000003
    mc time: 0.122012
    inst time: 0.0
Proof found: bossLib.SRW_TAC [bossLib.ARITH_ss] [DB.fetch "words" "word_replicate_def", DB.fetch "words" "word_rol_def", DB.fetch "words" "word_ror_def", DB.fetch "words" "ROR_ADD", DB.fetch "words" "word_ror_bv_def", DB.fetch "words" "ASR_LIMIT", DB.fetch "words" "word_asr_def", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "word_lsl_def", DB.fetch "words" "LSR_LIMIT", DB.fetch "words" "word_lsr_def", DB.fetch "words" "WORD_EXTRACT_COMP_THM", DB.fetch "words" "foldl_reduce_and", DB.fetch "words" "foldl_reduce_nand", DB.fetch "words" "foldl_reduce_nor", DB.fetch "words" "foldl_reduce_or"] THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) []
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.038828

ROR_MOD
proof length: 1
proof time: 0.006773
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.172271
  inferstep time: 0.137402
  node_find time: 0.001228
  node_crea time: 0.018744
    pred time: 0.004161
    thmpred time: 0.0
    mc time: 0.01775
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.00986

ROL_MOD
proof length: 1
proof time: 0.00449
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.193161
  inferstep time: 0.160699
  node_find time: 0.00115
  node_crea time: 0.018727
    pred time: 0.00408
    thmpred time: 0.000001
    mc time: 0.015022
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "word_rol_def" , DB.fetch "words" "word_rol_bv_def" , DB.fetch "words" "ROR_MOD" , DB.fetch "words" "word_replicate_def" , DB.fetch "words" "mod_dimindex" , DB.fetch "words" "MOD_2EXP_DIMINDEX" , DB.fetch "words" "MOD_DIMINDEX" , DB.fetch "words" "word_ror_def" , DB.fetch "words" "ASR_LIMIT" , DB.fetch "words" "word_asr_def" , DB.fetch "words" "LSL_LIMIT" , DB.fetch "words" "word_lsl_def" , DB.fetch "words" "LSR_LIMIT" , DB.fetch "words" "word_lsr_def" , DB.fetch "words" "ROR_CYCLE" , DB.fetch "words" "WORD_EXTRACT_COMP_THM" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008848

LSL_ONE
Statistics
  infstep : 439
  nodes   : 90
  maxdepth: 5
Time: 10.040617
  inferstep time: 7.36436
  node_find time: 0.187827
  node_crea time: 1.8419
    pred time: 0.355433
    thmpred time: 0.000019
    mc time: 0.919572
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.248131

ROR_UINT_MAX
proof length: 1
proof time: 0.002812
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.193627
  inferstep time: 0.148082
  node_find time: 0.001424
  node_crea time: 0.030373
    pred time: 0.006625
    thmpred time: 0.000001
    mc time: 0.021475
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005499

ROR_ROL
Statistics
  infstep : 238
  nodes   : 73
  maxdepth: 5
Time: 10.017501
  inferstep time: 7.688699
  node_find time: 0.115994
  node_crea time: 1.793287
    pred time: 0.486521
    thmpred time: 0.000014
    mc time: 0.715815
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.351349
Replaying proof: 0.007461
Replaying proof: 0.094983
Replaying proof: 0.007269

MOD_COMPLEMENT
Statistics
  infstep : 353
  nodes   : 135
  maxdepth: 6
Time: 10.014343
  inferstep time: 6.221447
  node_find time: 0.158291
  node_crea time: 3.055771
    pred time: 0.446088
    thmpred time: 0.000028
    mc time: 1.519279
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.308893

ROL_ADD
Statistics
  infstep : 232
  nodes   : 102
  maxdepth: 6
Time: 10.018974
  inferstep time: 7.006922
  node_find time: 0.10111
  node_crea time: 2.514368
    pred time: 0.57509
    thmpred time: 0.000016
    mc time: 1.092864
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.250362

ZERO_SHIFT
proof length: 9
proof time: 0.088057
Statistics
  infstep : 87
  nodes   : 36
  maxdepth: 4
Time: 4.021426
  inferstep time: 2.837621
  node_find time: 0.037329
  node_crea time: 0.761655
    pred time: 0.138009
    thmpred time: 0.000011
    mc time: 0.613812
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THENL [boolLib.NTAC 2 SHIFT_WORD_TAC, boolLib.NTAC 2 SHIFT_WORD_TAC THEN
  bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 54454*)i + n < dimindex (:'a)"] THENL
  [bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [],
  metisTools.METIS_TAC [DB.fetch "words" "word_lsr_def", arithmeticTheory.LESS_MONO_ADD_EQ, arithmeticTheory.SUB_LEFT_LESS, DB.fetch "words" "word_ror_def", DB.fetch "words" "word_asr_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_lsl_def", fcpTheory.FCP_BETA, DB.fetch "words" "tactictoe_thm_9", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_or_def"]], BasicProvers.SRW_TAC [] [DB.fetch "words" "ROR_ROL", DB.fetch "words" "word_rol_def", DB.fetch "words" "ROL_ADD", DB.fetch "words" "ROL_MOD", DB.fetch "words" "word_rol_bv_def", DB.fetch "words" "word_0", DB.fetch "words" "NOT_0w", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "word_eq_0", DB.fetch "words" "tactictoe_thm_49", DB.fetch "words" "fcp_n2w", DB.fetch "words" "nzcv_def", DB.fetch "words" "tactictoe_thm_46", DB.fetch "words" "tactictoe_thm_50", DB.fetch "words" "LOG2_w2n_lt"] THEN
  boolLib.NTAC 2 SHIFT_WORD_TAC, boolLib.NTAC 2 SHIFT_WORD_TAC]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.091823
Replaying proof: 0.001602

SHIFT_ZERO
proof length: 6
proof time: 0.070062
Statistics
  infstep : 13
  nodes   : 8
  maxdepth: 3
Time: 0.98322
  inferstep time: 0.779434
  node_find time: 0.005784
  node_crea time: 0.121114
    pred time: 0.036019
    thmpred time: 0.000001
    mc time: 0.087661
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THENL [boolLib.NTAC 2 SHIFT_WORD_TAC, boolLib.NTAC 2 SHIFT_WORD_TAC, metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_76", DB.fetch "words" "word_rol_def", DB.fetch "words" "ROR_ROL", DB.fetch "words" "ROL_ADD", DB.fetch "words" "ROL_MOD", DB.fetch "words" "word_rol_bv_def", DB.fetch "words" "ZERO_SHIFT", DB.fetch "words" "word_join_index", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "NOT_0w", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "bit_count_upto_def", DB.fetch "words" "word_eq_0", fcpTheory.CART_EQ, DB.fetch "words" "word_1comp_def"], BasicProvers.SRW_TAC [] [DB.fetch "words" "word_ror_def", DB.fetch "words" "tactictoe_thm_75", DB.fetch "words" "word_rol_def", DB.fetch "words" "ROR_CYCLE", DB.fetch "words" "ROR_ROL", DB.fetch "words" "ROR_ADD", DB.fetch "words" "ROR_MOD", DB.fetch "words" "word_ror_bv_def", DB.fetch "words" "ZERO_SHIFT", DB.fetch "words" "ROR_UINT_MAX", DB.fetch "words" "word_join_index", fcpTheory.FCP_CONCAT_def, fcpTheory.FCP_ZIP_def, DB.fetch "words" "NOT_0w", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "bit_count_upto_def"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) []]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.035669

word_lsl_n2w
Statistics
  infstep : 198
  nodes   : 87
  maxdepth: 6
Time: 10.078224
  inferstep time: 6.613359
  node_find time: 0.099656
  node_crea time: 2.814746
    pred time: 0.499209
    thmpred time: 0.000027
    mc time: 1.653318
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.356754

word_1_lsl
proof length: 4
proof time: 0.052147
Statistics
  infstep : 220
  nodes   : 63
  maxdepth: 5
Time: 6.353144
  inferstep time: 4.387715
  node_find time: 0.086841
  node_crea time: 1.463564
    pred time: 0.228134
    thmpred time: 0.000011
    mc time: 0.863672
    inst time: 0.0
Proof found: bossLib.Induct THENL [metisTools.METIS_TAC [numeralTheory.TWO_EXP_THM, DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "bit_field_insert", DB.fetch "words" "word_lsl_n2w", DB.fetch "words" "ZERO_SHIFT", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "LSL_ONE", DB.fetch "words" "EXTRACT_JOIN", DB.fetch "words" "EXTRACT_JOIN_ADD", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "word_lsl_def", DB.fetch "words" "LSL_ADD", DB.fetch "words" "word_lsl_bv_def", DB.fetch "words" "WORD_SLICE_THM"], boolLib.ASM_REWRITE_TAC [arithmeticTheory.ADD1, boolLib.GSYM (DB.fetch "words" "LSL_ADD")] THEN
  bossLib.RW_TAC bossLib.arith_ss [(DB.fetch "words" "LSL_ONE"), arithmeticTheory.EXP_ADD, (DB.fetch "words" "word_add_n2w")]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.156475

word_lsr_n2w
proof length: 5
proof time: 0.014767
Statistics
  infstep : 62
  nodes   : 32
  maxdepth: 4
Time: 3.430102
  inferstep time: 2.221478
  node_find time: 0.046928
  node_crea time: 0.927531
    pred time: 0.241893
    thmpred time: 0.000009
    mc time: 0.513625
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_bits_def"), (DB.fetch "words" "word_0")] THEN boolLib.NTAC 2 SHIFT_WORD_TAC THEN
  bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 54454*)i + n < dimindex (:'a)"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) []
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017216
Replaying proof: 0.051676

LSL_UINT_MAX
Statistics
  infstep : 300
  nodes   : 119
  maxdepth: 6
Time: 10.007028
  inferstep time: 6.578053
  node_find time: 0.132895
  node_crea time: 2.754842
    pred time: 0.35593
    thmpred time: 0.000015
    mc time: 1.704043
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.783437
Replaying proof: 0.033362
Replaying proof: 0.055308
Replaying proof: 0.105319

word_asr
Statistics
  infstep : 200
  nodes   : 76
  maxdepth: 5
Time: 10.01027
  inferstep time: 6.641516
  node_find time: 0.09239
  node_crea time: 2.912696
    pred time: 0.65239
    thmpred time: 0.000015
    mc time: 1.284385
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.094473

w2n_lsr
Statistics
  infstep : 261
  nodes   : 103
  maxdepth: 6
Time: 10.021664
  inferstep time: 6.700811
  node_find time: 0.121681
  node_crea time: 2.756384
    pred time: 0.409648
    thmpred time: 0.000018
    mc time: 1.580577
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.07342

WORD_MUL_LSL
Statistics
  infstep : 362
  nodes   : 106
  maxdepth: 6
Time: 10.001554
  inferstep time: 6.721753
  node_find time: 0.164205
  node_crea time: 2.518312
    pred time: 0.343726
    thmpred time: 0.000016
    mc time: 1.559918
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.203385

WORD_ADD_LSL
proof length: 2
proof time: 0.056781
Statistics
  infstep : 69
  nodes   : 17
  maxdepth: 4
Time: 2.322791
  inferstep time: 1.710296
  node_find time: 0.041942
  node_crea time: 0.412695
    pred time: 0.118962
    thmpred time: 0.000004
    mc time: 0.19297
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_MUL_LSL", DB.fetch "words" "LSL_ADD", DB.fetch "words" "word_lsl_def", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "LSL_ONE", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "word_lsl_bv_def", DB.fetch "words" "word_join_def", DB.fetch "words" "WORD_ADD_BIT", DB.fetch "words" "WORD_ADD_BIT0", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_EXTRACT_OVER_ADD2", DB.fetch "words" "WORD_SUM_ZERO", DB.fetch "words" "WORD_w2w_OVER_ADD"] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_MUL_LSL", DB.fetch "words" "word_1_lsl", DB.fetch "words" "WORD_LEFT_ADD_DISTRIB", DB.fetch "words" "WORD_RIGHT_ADD_DISTRIB", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_SUM_ZERO", DB.fetch "words" "word_add_def", DB.fetch "words" "WORD_ADD_INV_0_EQ", DB.fetch "words" "WORD_ADD_LID_UNIQ", DB.fetch "words" "WORD_ADD_RID_UNIQ", DB.fetch "words" "WORD_ADD_BIT", DB.fetch "words" "WORD_EXTRACT_OVER_ADD", DB.fetch "words" "WORD_w2w_OVER_ADD"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008984

WORD_DIV_LSR
Statistics
  infstep : 193
  nodes   : 81
  maxdepth: 5
Time: 10.041971
  inferstep time: 6.784448
  node_find time: 0.108794
  node_crea time: 2.736528
    pred time: 0.647536
    thmpred time: 0.000025
    mc time: 1.236979
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.693877

WORD_MOD_1
proof length: 3
proof time: 0.010392
Statistics
  infstep : 29
  nodes   : 14
  maxdepth: 3
Time: 1.54585
  inferstep time: 1.093741
  node_find time: 0.012257
  node_crea time: 0.336905
    pred time: 0.058132
    thmpred time: 0.000005
    mc time: 0.238411
    inst time: 0.0
Proof found: boolLib.REPEAT bossLib.Cases THEN bossLib.FULL_SIMP_TAC bossLib.std_ss [(DB.fetch "words" "dimword_def")] THEN
  bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [DB.fetch "words" "word_mod_def", DB.fetch "words" "word_rem_def", DB.fetch "words" "n2w_SUC", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "dimindex_1_cases", DB.fetch "words" "reduce_and", DB.fetch "words" "tactictoe_thm_46", DB.fetch "words" "reduce_or", DB.fetch "words" "tactictoe_thm_50", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_compare_def", DB.fetch "words" "word_1_lsl", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "WORD_NEG", DB.fetch "words" "WORD_NEG_MUL"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00762

WORD_MOD_POW2
Statistics
  infstep : 203
  nodes   : 109
  maxdepth: 6
Time: 10.005673
  inferstep time: 6.292048
  node_find time: 0.096832
  node_crea time: 2.9948
    pred time: 0.537465
    thmpred time: 0.000014
    mc time: 1.601395
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.246955

SHIFT_1_SUB_1
proof length: 3
proof time: 0.118
Statistics
  infstep : 220
  nodes   : 52
  maxdepth: 5
Time: 6.820072
  inferstep time: 4.971403
  node_find time: 0.101164
  node_crea time: 1.252821
    pred time: 0.302777
    thmpred time: 0.000019
    mc time: 0.652663
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_1_lsl", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_lsl_def", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_H_WORD_L", DB.fetch "words" "word_lsl_n2w", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "concat_word_list_def", DB.fetch "words" "word_ror", DB.fetch "words" "EXTRACT_JOIN", DB.fetch "words" "EXTRACT_JOIN_ADD", DB.fetch "words" "word_join_def"] THEN bossLib.SRW_TAC [] [(DB.fetch "words" "word_H_def"), (DB.fetch "words" "word_L_def"), (DB.fetch "words" "word_sub_def"), (DB.fetch "words" "WORD_LITERAL_ADD"), (DB.fetch "words" "ZERO_LT_INT_MIN"), (DB.fetch "words" "INT_MAX_def"), bossLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 99340*)0 < n ==> 1 <= n"])] THEN
  metisTools.METIS_TAC [bitTheory.BIT_EXP_SUB1, DB.fetch "words" "tactictoe_thm_16", bitTheory.SIGN_EXTEND_def, DB.fetch "words" "tactictoe_thm_49", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "word_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "word_lsl_n2w", bitTheory.BIT_SIGN_EXTEND, DB.fetch "words" "tactictoe_thm_21", DB.fetch "words" "tactictoe_thm_22"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.047145

LSR_BITWISE
proof length: 4
proof time: 0.166966
Statistics
  infstep : 7
  nodes   : 6
  maxdepth: 2
Time: 0.53429
  inferstep time: 0.387178
  node_find time: 0.006359
  node_crea time: 0.076516
    pred time: 0.023734
    thmpred time: 0.000002
    mc time: 0.06612
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THENL [metisTools.METIS_TAC [DB.fetch "words" "word_asr", DB.fetch "words" "word_lsr_def", DB.fetch "words" "word_asr_n2w", DB.fetch "words" "LSR_LIMIT", DB.fetch "words" "LSR_ADD", DB.fetch "words" "word_lsr_n2w", DB.fetch "words" "w2n_lsr", DB.fetch "words" "WORD_DIV_LSR", DB.fetch "words" "word_lsr_bv_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "word_and_def", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], metisTools.METIS_TAC [DB.fetch "words" "word_asr", DB.fetch "words" "word_asr_n2w", DB.fetch "words" "word_lsr_def", DB.fetch "words" "LSR_LIMIT", DB.fetch "words" "LSR_ADD", DB.fetch "words" "word_lsr_n2w", DB.fetch "words" "w2n_lsr", DB.fetch "words" "WORD_DIV_LSR", DB.fetch "words" "word_lsr_bv_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "word_or_def", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], metisTools.METIS_TAC [DB.fetch "words" "word_asr", DB.fetch "words" "word_lsr_def", DB.fetch "words" "word_asr_n2w", DB.fetch "words" "LSR_LIMIT", DB.fetch "words" "LSR_ADD", DB.fetch "words" "word_lsr_n2w", DB.fetch "words" "w2n_lsr", DB.fetch "words" "WORD_DIV_LSR", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "word_xor_def", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.076364

LSL_BITWISE
proof length: 10
proof time: 0.254095
Statistics
  infstep : 67
  nodes   : 36
  maxdepth: 5
Time: 3.742732
  inferstep time: 2.792881
  node_find time: 0.031412
  node_crea time: 0.623537
    pred time: 0.142744
    thmpred time: 0.000004
    mc time: 0.356398
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THENL [bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THEN
  bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_and_def", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "WORD_AND_CLAUSES", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_LEFT_AND_OVER_OR"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_and_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "word_asr_def"], bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "sw2sw", DB.fetch "words" "word_and_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "LOG2_w2n"], bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_SLICE_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_NOT_XOR", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_RIGHT_AND_OVER_XOR", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_XNOR_NOT_XOR"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "NOT_0w", DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "w2w", DB.fetch "words" "sw2sw", DB.fetch "words" "WORD_MODIFY_BIT", fcpTheory.FCP_APPLY_UPDATE_THM, relationTheory.tactictoe_thm_24, fcpTheory.CART_EQ, DB.fetch "words" "word_nand_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_and_def"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", relationTheory.tactictoe_thm_24, DB.fetch "words" "word_slice_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_nand_def", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_nor_def", DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def", DB.fetch "words" "word_xnor_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_reduce_def", DB.fetch "words" "word_asr_def"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.148189

ROR_BITWISE
proof length: 4
proof time: 0.030241
Statistics
  infstep : 23
  nodes   : 10
  maxdepth: 3
Time: 1.50382
  inferstep time: 1.181901
  node_find time: 0.011076
  node_crea time: 0.22922
    pred time: 0.065774
    thmpred time: 0.000002
    mc time: 0.102046
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.032266

ROL_BITWISE
proof length: 1
proof time: 0.008063
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.228358
  inferstep time: 0.18242
  node_find time: 0.001595
  node_crea time: 0.02267
    pred time: 0.004691
    thmpred time: 0.0
    mc time: 0.022133
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "ROR_ROL" , DB.fetch "words" "word_rol_def" , DB.fetch "words" "ROL_ADD" , DB.fetch "words" "ROL_MOD" , DB.fetch "words" "LSL_BITWISE" , DB.fetch "words" "LSR_BITWISE" , DB.fetch "words" "ROR_BITWISE" , DB.fetch "words" "WORD_BITS_OVER_BITWISE" , DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE" , DB.fetch "words" "WORD_SLICE_OVER_BITWISE" , DB.fetch "words" "WORD_w2w_OVER_BITWISE" , DB.fetch "words" "word_rol_bv_def" , DB.fetch "words" "tactictoe_thm_76" , DB.fetch "words" "SHIFT_ZERO" , DB.fetch "words" "WORD_ADD_XOR" , DB.fetch "words" "WORD_LEFT_AND_OVER_XOR" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017837

WORD_2COMP_LSL
proof length: 2
proof time: 0.039931
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.306335
  inferstep time: 0.245476
  node_find time: 0.001972
  node_crea time: 0.033681
    pred time: 0.006967
    thmpred time: 0.000001
    mc time: 0.029481
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_ADD_LSL", DB.fetch "words" "WORD_MUL_LSL", DB.fetch "words" "LSL_ADD", DB.fetch "words" "word_lsl_def", DB.fetch "words" "LSL_BITWISE", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "word_lsl_bv_def", DB.fetch "words" "LSL_ONE", DB.fetch "words" "word_join_def", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "WORD_SUM_ZERO", DB.fetch "words" "nzcv_def", DB.fetch "words" "word_quot_def"] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_MUL_LSL", DB.fetch "words" "word_1_lsl", DB.fetch "words" "WORD_DIV_LSR", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_LMUL", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_LITERAL_MULT", DB.fetch "words" "WORD_SUM_ZERO", DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_NEG", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_SUB_LZERO", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "word_2comp_def", DB.fetch "words" "WORD_ADD_RINV"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00884

w2w_LSL
Statistics
  infstep : 207
  nodes   : 86
  maxdepth: 5
Time: 10.066198
  inferstep time: 6.48986
  node_find time: 0.114374
  node_crea time: 2.940591
    pred time: 0.573437
    thmpred time: 0.000017
    mc time: 1.376329
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.310426

n2w_DIV
Statistics
  infstep : 283
  nodes   : 96
  maxdepth: 6
Time: 10.10126
  inferstep time: 5.756601
  node_find time: 0.16887
  node_crea time: 3.587938
    pred time: 0.465841
    thmpred time: 0.000016
    mc time: 2.200405
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.471701

WORD_BITS_LSL
Statistics
  infstep : 282
  nodes   : 67
  maxdepth: 5
Time: 10.025266
  inferstep time: 7.186777
  node_find time: 0.132123
  node_crea time: 2.16733
    pred time: 0.415521
    thmpred time: 0.000016
    mc time: 0.968365
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.992056

WORD_EXTRACT_LSL
Statistics
  infstep : 185
  nodes   : 53
  maxdepth: 4
Time: 10.001669
  inferstep time: 7.207343
  node_find time: 0.084521
  node_crea time: 2.350208
    pred time: 0.597258
    thmpred time: 0.000016
    mc time: 0.827687
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.230366

WORD_EXTRACT_LSL2
Statistics
  infstep : 245
  nodes   : 97
  maxdepth: 6
Time: 10.023396
  inferstep time: 6.553931
  node_find time: 0.113971
  node_crea time: 2.913563
    pred time: 0.520037
    thmpred time: 0.000018
    mc time: 1.279388
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.179772

EXTRACT_JOIN_LSL
Statistics
  infstep : 214
  nodes   : 69
  maxdepth: 5
Time: 10.014181
  inferstep time: 6.418069
  node_find time: 0.106143
  node_crea time: 3.06333
    pred time: 0.661681
    thmpred time: 0.000018
    mc time: 1.180252
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.095145

EXTRACT_JOIN_ADD_LSL
Statistics
  infstep : 220
  nodes   : 67
  maxdepth: 5
Time: 10.036455
  inferstep time: 6.686117
  node_find time: 0.102162
  node_crea time: 2.829348
    pred time: 0.607941
    thmpred time: 0.000011
    mc time: 1.200146
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.111871
Replaying proof: 0.056362
Replaying proof: 0.001368

word_shift_bv
proof length: 12
proof time: 0.048306
Statistics
  infstep : 215
  nodes   : 88
  maxdepth: 5
Time: 9.080187
  inferstep time: 5.847532
  node_find time: 0.105578
  node_crea time: 2.401245
    pred time: 0.371638
    thmpred time: 0.000013
    mc time: 1.43565
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THENL [bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 115953*)i - n < dimindex (:'a)"] THENL
  [bossLib.FULL_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_lsl_bv_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "WORD_LITERAL_ADD", DB.fetch "words" "n2w_sub", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_reduce_def"] THEN
  bossLib.SRW_TAC [bossLib.ARITH_ss, fcpLib.FCP_ss] [DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "w2n_def", DB.fetch "words" "nzcv_def", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "WORD_LITERAL_ADD", DB.fetch "words" "n2w_sub", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_signed_bits_def"],
  bossLib.FULL_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_lsl_bv_def", DB.fetch "words" "word_lsl_def", DB.fetch "words" "bit_field_insert_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "WORD_LITERAL_ADD", DB.fetch "words" "n2w_sub", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_bit_def", DB.fetch "words" "word_reduce_def"]], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_asr_bv_def", DB.fetch "words" "word_asr_def", DB.fetch "words" "word_asr_n2w", DB.fetch "words" "ASR_LIMIT", DB.fetch "words" "word_asr", DB.fetch "words" "ASR_ADD", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "ZERO_SHIFT", DB.fetch "words" "ASR_UINT_MAX", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "ranged_word_nchotomy", DB.fetch "words" "word_nchotomy", DB.fetch "words" "n2w_def", DB.fetch "words" "n2w_DIV", DB.fetch "words" "w2n_n2w"], bossLib.SIMP_TAC bossLib.arith_ss [(DB.fetch "words" "word_lsr_def"), (DB.fetch "words" "word_bits_def"), arithmeticTheory.MIN_IDEM, (DB.fetch "words" "DIMINDEX_GT_0"), bossLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 106942*)0 < m ==> (a <= m - 1 = a < m)"])] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_lsr_bv_def", DB.fetch "words" "word_lsr_def", DB.fetch "words" "word_asr_def", DB.fetch "words" "word_bits_def", arithmeticTheory.LESS_MONO_ADD_EQ, arithmeticTheory.SUB_LEFT_LESS, DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "word_ror_def", DB.fetch "words" "word_signed_bits_def", DB.fetch "words" "word_index", DB.fetch "words" "word_index_n2w", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_replicate_def"] THEN
  bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [], BasicProvers.SRW_TAC [] [DB.fetch "words" "word_ror_bv_def", DB.fetch "words" "word_ror", DB.fetch "words" "ROR_MOD", DB.fetch "words" "tactictoe_thm_75", DB.fetch "words" "word_ror_def", DB.fetch "words" "ROR_ROL", DB.fetch "words" "ROR_BITWISE", DB.fetch "words" "ROR_ADD", DB.fetch "words" "word_rol_def", DB.fetch "words" "word_ror_n2w", DB.fetch "words" "ROR_CYCLE", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "word_replicate_def", DB.fetch "words" "ROL_MOD", DB.fetch "words" "mod_dimindex", DB.fetch "words" "ZERO_SHIFT"], BasicProvers.SRW_TAC [] [DB.fetch "words" "word_rol_bv_def", DB.fetch "words" "word_rol_def", DB.fetch "words" "ROL_MOD", DB.fetch "words" "ROR_ROL", DB.fetch "words" "ROL_BITWISE", DB.fetch "words" "ROL_ADD", DB.fetch "words" "tactictoe_thm_76", DB.fetch "words" "SHIFT_ZERO", DB.fetch "words" "word_replicate_def", DB.fetch "words" "word_ror_n2w", DB.fetch "words" "word_ror", DB.fetch "words" "ROR_MOD", DB.fetch "words" "tactictoe_thm_75", DB.fetch "words" "mod_dimindex", DB.fetch "words" "ZERO_SHIFT", DB.fetch "words" "NOT_0w"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.225282

lsl_lsr
Statistics
  infstep : 237
  nodes   : 79
  maxdepth: 5
Time: 10.012595
  inferstep time: 6.858835
  node_find time: 0.117012
  node_crea time: 2.53994
    pred time: 0.462113
    thmpred time: 0.000021
    mc time: 1.328425
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.420914
Replaying proof: 0.000334
Replaying proof: 0.001666

WORD_NEG_L
proof length: 2
proof time: 0.011164
Statistics
  infstep : 85
  nodes   : 23
  maxdepth: 4
Time: 2.612439
  inferstep time: 1.975569
  node_find time: 0.038081
  node_crea time: 0.420916
    pred time: 0.107575
    thmpred time: 0.000007
    mc time: 0.179149
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_H_WORD_L", DB.fetch "words" "word_L_def", DB.fetch "words" "word_L", DB.fetch "words" "word_L2", DB.fetch "words" "word_L2_def", DB.fetch "words" "word_L_MULT", DB.fetch "words" "word_msb_add_word_L", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_LITERAL_ADD", DB.fetch "words" "WORD_2COMP_LSL", DB.fetch "words" "WORD_NEG_RMUL", DB.fetch "words" "WORD_ADD_LINV", DB.fetch "words" "word_2comp_def", DB.fetch "words" "WORD_ADD_RINV", DB.fetch "words" "WORD_ADD_SUB3", DB.fetch "words" "WORD_SUB_LZERO"] THEN bossLib.SRW_TAC [bossLib.ARITH_ss] [(DB.fetch "words" "dimword_IS_TWICE_INT_MIN")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018113

word_L_MULT_NEG
Statistics
  infstep : 301
  nodes   : 89
  maxdepth: 5
Time: 10.028768
  inferstep time: 7.139466
  node_find time: 0.151372
  node_crea time: 2.147055
    pred time: 0.417667
    thmpred time: 0.000019
    mc time: 1.081757
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064692

word_L2_MULT
Statistics
  infstep : 455
  nodes   : 170
  maxdepth: 6
Time: 10.062648
  inferstep time: 5.506766
  node_find time: 0.236812
  node_crea time: 3.488542
    pred time: 0.40367
    thmpred time: 0.000017
    mc time: 1.936625
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.025923
Replaying proof: 0.004696
Replaying proof: 0.007416
Replaying proof: 0.087115
Replaying proof: 0.012011
Replaying proof: 0.09696
Replaying proof: 0.006611
Replaying proof: 0.009164
Replaying proof: 0.000981
Replaying proof: 0.008341
Replaying proof: 0.001065
Replaying proof: 0.000472
Replaying proof: 0.000551
Replaying proof: 0.001423
Replaying proof: 0.058376
Replaying proof: 0.028993

TWO_COMP_NEG
Statistics
  infstep : 260
  nodes   : 84
  maxdepth: 5
Time: 10.004672
  inferstep time: 6.788085
  node_find time: 0.131317
  node_crea time: 2.588741
    pred time: 0.554334
    thmpred time: 0.000017
    mc time: 1.07027
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.880825

TWO_COMP_POS_NEG
Statistics
  infstep : 220
  nodes   : 76
  maxdepth: 5
Time: 10.02293
  inferstep time: 7.031476
  node_find time: 0.111672
  node_crea time: 2.444626
    pred time: 0.375241
    thmpred time: 0.000018
    mc time: 1.246426
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.753351

WORD_0_POS
proof length: 1
proof time: 0.002334
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.252528
  inferstep time: 0.187086
  node_find time: 0.003727
  node_crea time: 0.028293
    pred time: 0.003036
    thmpred time: 0.0
    mc time: 0.030686
    inst time: 0.0
Proof found: (boolLib.NTAC 2 SHIFT_WORD_TAC)
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007607

WORD_H_POS
proof length: 3
proof time: 0.001713
Statistics
  infstep : 50
  nodes   : 21
  maxdepth: 4
Time: 2.236474
  inferstep time: 1.652468
  node_find time: 0.024161
  node_crea time: 0.401124
    pred time: 0.116189
    thmpred time: 0.000003
    mc time: 0.160269
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [(DB.fetch "words" "word_H_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "INT_MAX_def"), (DB.fetch "words" "INT_MIN_def")] THEN bossLib.SRW_TAC [] [bitTheory.BIT_EXP_SUB1] THEN
  bossLib.SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [(DB.fetch "words" "word_msb_def"), (DB.fetch "words" "n2w_def"), (DB.fetch "words" "DIMINDEX_GT_0")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.317678

WORD_L_NEG
proof length: 1
proof time: 0.001444
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.220338
  inferstep time: 0.168275
  node_find time: 0.002048
  node_crea time: 0.035178
    pred time: 0.008741
    thmpred time: 0.000001
    mc time: 0.018902
    inst time: 0.0
Proof found: (bossLib.fs [ ( DB.fetch "words" "word_L_def" ) , ( DB.fetch "words" "word_add_n2w" ) , ( DB.fetch "words" "dimword_IS_TWICE_INT_MIN" ) , ( DB.fetch "words" "word_msb_n2w_numeric" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010863
Replaying proof: 0.029357

WORD_GREATER
Statistics
  infstep : 535
  nodes   : 80
  maxdepth: 5
Time: 10.072859
  inferstep time: 7.376026
  node_find time: 0.27314
  node_crea time: 1.484831
    pred time: 0.328386
    thmpred time: 0.000018
    mc time: 0.468352
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.131852

WORD_GREATER_EQ
Statistics
  infstep : 457
  nodes   : 90
  maxdepth: 5
Time: 10.027278
  inferstep time: 7.176557
  node_find time: 0.238416
  node_crea time: 1.777476
    pred time: 0.325739
    thmpred time: 0.000015
    mc time: 0.595852
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.105948

WORD_NOT_LESS
Statistics
  infstep : 310
  nodes   : 92
  maxdepth: 6
Time: 10.071961
  inferstep time: 7.299349
  node_find time: 0.164187
  node_crea time: 1.980657
    pred time: 0.466044
    thmpred time: 0.000011
    mc time: 0.548917
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.100846
Replaying proof: 0.043444
Replaying proof: 0.486245
Replaying proof: 0.05805
Replaying proof: 0.07259

WORD_LT
Statistics
  infstep : 167
  nodes   : 85
  maxdepth: 6
Time: 10.013666
  inferstep time: 7.541692
  node_find time: 0.081447
  node_crea time: 2.02977
    pred time: 0.401172
    thmpred time: 0.000029
    mc time: 0.757894
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.491558

WORD_LE
Statistics
  infstep : 194
  nodes   : 76
  maxdepth: 6
Time: 10.084042
  inferstep time: 6.43746
  node_find time: 0.123768
  node_crea time: 3.096776
    pred time: 0.749503
    thmpred time: 0.00003
    mc time: 0.993977
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.069151
Replaying proof: 0.007146
Replaying proof: 0.016755

WORD_LS
Statistics
  infstep : 224
  nodes   : 70
  maxdepth: 6
Time: 10.303418
  inferstep time: 7.765884
  node_find time: 0.141169
  node_crea time: 1.934774
    pred time: 0.532428
    thmpred time: 0.000029
    mc time: 0.674177
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01967

WORD_HI
Statistics
  infstep : 240
  nodes   : 85
  maxdepth: 5
Time: 10.027604
  inferstep time: 6.990839
  node_find time: 0.133617
  node_crea time: 2.398906
    pred time: 0.642567
    thmpred time: 0.000018
    mc time: 0.83826
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010795

WORD_HS
Statistics
  infstep : 423
  nodes   : 95
  maxdepth: 5
Time: 10.040558
  inferstep time: 7.052456
  node_find time: 0.215896
  node_crea time: 1.984166
    pred time: 0.446834
    thmpred time: 0.000015
    mc time: 0.624817
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013472

WORD_NOT_LESS_EQUAL
proof length: 1
proof time: 0.090412
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.155317
  inferstep time: 0.131792
  node_find time: 0.000714
  node_crea time: 0.014309
    pred time: 0.003328
    thmpred time: 0.000001
    mc time: 0.008027
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "tactictoe_thm_133" , DB.fetch "words" "tactictoe_thm_134" , DB.fetch "words" "tactictoe_thm_135"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014027

WORD_LESS_OR_EQ
Statistics
  infstep : 259
  nodes   : 84
  maxdepth: 6
Time: 10.001684
  inferstep time: 6.95806
  node_find time: 0.139153
  node_crea time: 2.370922
    pred time: 0.581208
    thmpred time: 0.00003
    mc time: 0.50738
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.017668

WORD_GREATER_OR_EQ
Statistics
  infstep : 240
  nodes   : 92
  maxdepth: 6
Time: 10.066885
  inferstep time: 6.487673
  node_find time: 0.130587
  node_crea time: 2.933653
    pred time: 0.674744
    thmpred time: 0.000017
    mc time: 0.574358
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017681

WORD_LESS_TRANS
Statistics
  infstep : 223
  nodes   : 70
  maxdepth: 5
Time: 10.140001
  inferstep time: 6.558928
  node_find time: 0.136325
  node_crea time: 2.858115
    pred time: 0.700649
    thmpred time: 0.00002
    mc time: 0.494164
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.129564

WORD_LESS_EQ_TRANS
proof length: 5
proof time: 0.10251
Statistics
  infstep : 88
  nodes   : 32
  maxdepth: 3
Time: 4.003171
  inferstep time: 2.877565
  node_find time: 0.046059
  node_crea time: 0.767662
    pred time: 0.192372
    thmpred time: 0.000007
    mc time: 0.197302
    inst time: 0.0
Proof found: bossLib.RW_TAC bossLib.bool_ss [DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_NOT_LESS", DB.fetch "words" "WORD_GREATER_EQ", DB.fetch "words" "word_le_def", DB.fetch "words" "WORD_LESS_OR_EQ", DB.fetch "words" "WORD_NOT_LESS_EQUAL", DB.fetch "words" "WORD_LESS_TRANS", DB.fetch "words" "word_hi_def", fcpTheory.FCP_UPDATE_COMMUTES, fcpTheory.FCP_UPDATE_def, fcpTheory.FCP_UPDATE_EQ, DB.fetch "words" "WORD_AND_ASSOC", DB.fetch "words" "WORD_LEFT_AND_OVER_OR", DB.fetch "words" "WORD_LEFT_AND_OVER_XOR", DB.fetch "words" "WORD_LEFT_OR_OVER_AND", DB.fetch "words" "WORD_OR_ASSOC"] THENL [boolLib.ASM_REWRITE_TAC [] THEN
  bossLib.DECIDE_TAC, metisTools.METIS_TAC [DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_LT", DB.fetch "words" "nzcv_def", DB.fetch "words" "TWO_COMP_POS_NEG", DB.fetch "words" "word_add_def", DB.fetch "words" "n2w_w2n", DB.fetch "words" "w2n_11", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_ls_def", combinTheory.UPD11_SAME_BASE, stringTheory.isHexDigit_def, stringTheory.isSpace_def, pairTheory.LEX_DEF_THM, rich_listTheory.IS_PREFIX_APPEND2], metisTools.METIS_TAC [DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_LT", DB.fetch "words" "nzcv_def", DB.fetch "words" "TWO_COMP_POS_NEG", DB.fetch "words" "word_add_def", DB.fetch "words" "n2w_w2n", DB.fetch "words" "w2n_11", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_ls_def", combinTheory.UPD11_SAME_BASE, stringTheory.isHexDigit_def, stringTheory.isSpace_def, pairTheory.LEX_DEF_THM, rich_listTheory.IS_PREFIX_APPEND2]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.097246

WORD_LESS_EQ_LESS_TRANS
proof length: 1
proof time: 0.10505
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.173397
  inferstep time: 0.147214
  node_find time: 0.000697
  node_crea time: 0.014795
    pred time: 0.00312
    thmpred time: 0.000001
    mc time: 0.008536
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def" , DB.fetch "words" "word_abs_def"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.105644

WORD_LESS_LESS_EQ_TRANS
proof length: 1
proof time: 0.072058
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.142855
  inferstep time: 0.114778
  node_find time: 0.000953
  node_crea time: 0.015836
    pred time: 0.003347
    thmpred time: 0.0
    mc time: 0.008559
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.102588

WORD_LESS_EQ_CASES
proof length: 1
proof time: 0.075391
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.162215
  inferstep time: 0.136254
  node_find time: 0.000866
  node_crea time: 0.015675
    pred time: 0.003589
    thmpred time: 0.0
    mc time: 0.007957
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "WORD_GE" , DB.fetch "words" "WORD_GREATER_OR_EQ" , DB.fetch "words" "WORD_GT" , DB.fetch "words" "WORD_LITERAL_AND" , DB.fetch "words" "WORD_LITERAL_OR"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.0605

WORD_LESS_CASES
proof length: 1
proof time: 0.038403
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.119312
  inferstep time: 0.081227
  node_find time: 0.001027
  node_crea time: 0.018641
    pred time: 0.003278
    thmpred time: 0.0
    mc time: 0.012958
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01449

WORD_LESS_CASES_IMP
proof length: 1
proof time: 0.032201
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.098978
  inferstep time: 0.067547
  node_find time: 0.000583
  node_crea time: 0.016285
    pred time: 0.003379
    thmpred time: 0.000001
    mc time: 0.011701
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "word_abs_def" , DB.fetch "words" "tactictoe_thm_133"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018129

WORD_LESS_ANTISYM
proof length: 1
proof time: 0.018789
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.100655
  inferstep time: 0.075494
  node_find time: 0.00063
  node_crea time: 0.015211
    pred time: 0.003566
    thmpred time: 0.0
    mc time: 0.007992
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def" , DB.fetch "words" "word_abs_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010784

WORD_LESS_EQ_ANTISYM
proof length: 1
proof time: 0.027004
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.104859
  inferstep time: 0.07963
  node_find time: 0.001102
  node_crea time: 0.015464
    pred time: 0.003497
    thmpred time: 0.000001
    mc time: 0.00821
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "WORD_LESS_ANTISYM" , DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008299

WORD_LESS_EQ_REFL
proof length: 1
proof time: 0.039866
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.117623
  inferstep time: 0.090067
  node_find time: 0.000734
  node_crea time: 0.017432
    pred time: 0.003975
    thmpred time: 0.0
    mc time: 0.011912
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_ge_def" , DB.fetch "words" "TWO_COMP_POS_NEG" , DB.fetch "words" "WORD_LT"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011403

WORD_LESS_EQUAL_ANTISYM
proof length: 1
proof time: 0.041323
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.108978
  inferstep time: 0.085778
  node_find time: 0.000933
  node_crea time: 0.014461
    pred time: 0.003162
    thmpred time: 0.0
    mc time: 0.007275
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "WORD_LESS_EQ_REFL" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD" , DB.fetch "words" "WORD_EXTRACT_OVER_MUL" , DB.fetch "words" "WORD_LESS_CASES_IMP"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011864

WORD_LESS_IMP_LESS_OR_EQ
proof length: 1
proof time: 0.036517
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.110456
  inferstep time: 0.078279
  node_find time: 0.001083
  node_crea time: 0.017077
    pred time: 0.003237
    thmpred time: 0.000001
    mc time: 0.010602
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_EQ_REFL" , DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_LESS_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010085

WORD_LESS_REFL
proof length: 1
proof time: 0.037207
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.096601
  inferstep time: 0.071665
  node_find time: 0.000814
  node_crea time: 0.016154
    pred time: 0.003524
    thmpred time: 0.0
    mc time: 0.008021
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_ANTISYM" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_IMP_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010903

WORD_LESS_LESS_CASES
proof length: 1
proof time: 0.047021
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.111687
  inferstep time: 0.087893
  node_find time: 0.000725
  node_crea time: 0.014998
    pred time: 0.003574
    thmpred time: 0.0
    mc time: 0.008379
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "word_smax_def" , DB.fetch "words" "word_smin_def" , DB.fetch "words" "WORD_LESS_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_IMP_LESS_OR_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013606

WORD_NOT_GREATER
proof length: 1
proof time: 0.067926
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.132725
  inferstep time: 0.108794
  node_find time: 0.000717
  node_crea time: 0.014776
    pred time: 0.003485
    thmpred time: 0.000001
    mc time: 0.008092
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_GT" , DB.fetch "words" "word_gt_def" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_GREATER_OR_EQ" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "word_le_def" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_GREATER_EQ" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LESS_CASES" , DB.fetch "words" "WORD_LESS_EQ_CASES" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_EQ_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009822

WORD_LESS_NOT_EQ
proof length: 1
proof time: 0.031571
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.09484
  inferstep time: 0.070938
  node_find time: 0.000728
  node_crea time: 0.014727
    pred time: 0.003554
    thmpred time: 0.0
    mc time: 0.007974
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_IMP_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_GREATER" , DB.fetch "words" "WORD_LESS_LESS_CASES"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01352

WORD_NOT_LESS_EQ
proof length: 1
proof time: 0.028857
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.127609
  inferstep time: 0.091312
  node_find time: 0.001101
  node_crea time: 0.023227
    pred time: 0.006919
    thmpred time: 0.0
    mc time: 0.011759
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LESS_CASES_IMP" , DB.fetch "words" "WORD_LESS_NOT_EQ" , DB.fetch "words" "WORD_NOT_LESS" , DB.fetch "words" "WORD_LT" , DB.fetch "words" "tactictoe_thm_132" , DB.fetch "words" "tactictoe_thm_137" , DB.fetch "words" "word_lt_def" , DB.fetch "words" "WORD_NOT_LESS_EQUAL" , DB.fetch "words" "WORD_LESS_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_IMP_LESS_OR_EQ" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LESS_OR_EQ" , DB.fetch "words" "WORD_GREATER"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013372

WORD_HIGHER
proof length: 3
proof time: 0.000761
Statistics
  infstep : 33
  nodes   : 12
  maxdepth: 3
Time: 1.143613
  inferstep time: 0.869175
  node_find time: 0.015852
  node_crea time: 0.173305
    pred time: 0.044463
    thmpred time: 0.000002
    mc time: 0.059758
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "tactictoe_thm_149"), (DB.fetch "words" "WORD_LS"), boolLib.GSYM arithmeticTheory.NOT_GREATER] THEN boolLib.REPEAT boolLib.STRIP_TAC THEN
  boolLib.ASM_REWRITE_TAC [DB.fetch "words" "WORD_HI", DB.fetch "words" "WORD_GT", DB.fetch "words" "WORD_LO", DB.fetch "words" "tactictoe_thm_144", DB.fetch "words" "word_lo_def", DB.fetch "words" "word_max_def", DB.fetch "words" "word_min_def", DB.fetch "words" "tactictoe_thm_148", DB.fetch "words" "tactictoe_thm_150", arithmeticTheory.NOT_GREATER, numeralTheory.numeral_distrib, arithmeticTheory.GREATER_DEF, DB.fetch "words" "WORD_LS", DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_GE", DB.fetch "words" "WORD_LE"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011557

WORD_HIGHER_EQ
proof length: 3
proof time: 0.008133
Statistics
  infstep : 22
  nodes   : 9
  maxdepth: 3
Time: 0.839037
  inferstep time: 0.676547
  node_find time: 0.01145
  node_crea time: 0.084154
    pred time: 0.018991
    thmpred time: 0.0
    mc time: 0.037892
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "tactictoe_thm_150"), (DB.fetch "words" "WORD_LO"), bossLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 141511*)~(a < b) = a >= b:num"])] THEN boolLib.REPEAT boolLib.STRIP_TAC THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "words" "WORD_HS", DB.fetch "words" "WORD_GE", DB.fetch "words" "WORD_LS", DB.fetch "words" "tactictoe_thm_148", DB.fetch "words" "word_ls_def", DB.fetch "words" "tactictoe_thm_149", arithmeticTheory.GREATER_EQ, arithmeticTheory.NOT_GREATER_EQ, numeralTheory.numeral_distrib, DB.fetch "words" "WORD_LO", DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_GT", DB.fetch "words" "WORD_LT", DB.fetch "words" "WORD_HI", DB.fetch "words" "tactictoe_thm_133"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013024

WORD_NOT_LOWER
proof length: 1
proof time: 0.090242
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.177552
  inferstep time: 0.149894
  node_find time: 0.001122
  node_crea time: 0.01738
    pred time: 0.004033
    thmpred time: 0.0
    mc time: 0.00912
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_hi_def" , fcpTheory.FCP_UPDATE_COMMUTES , DB.fetch "words" "WORD_ADD_BIT"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012689

WORD_NOT_LOWER_EQUAL
proof length: 1
proof time: 0.06703
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.154038
  inferstep time: 0.123817
  node_find time: 0.000838
  node_crea time: 0.017521
    pred time: 0.004025
    thmpred time: 0.000001
    mc time: 0.011045
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "word_hi_def" , fcpTheory.FCP_UPDATE_COMMUTES])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013696

WORD_LOWER_OR_EQ
proof length: 2
proof time: 0.006138
Statistics
  infstep : 7
  nodes   : 3
  maxdepth: 2
Time: 0.378632
  inferstep time: 0.299362
  node_find time: 0.005833
  node_crea time: 0.035338
    pred time: 0.009277
    thmpred time: 0.0
    mc time: 0.024996
    inst time: 0.0
Proof found: bossLib.RW_TAC bossLib.arith_ss [(DB.fetch "words" "WORD_LO"), (DB.fetch "words" "WORD_LS")] THEN bossLib.PROVE_TAC [(DB.fetch "words" "w2n_11"), (DB.fetch "words" "WORD_LO"), (DB.fetch "words" "tactictoe_thm_148"), arithmeticTheory.LESS_OR_EQ]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016261

WORD_HIGHER_OR_EQ
proof length: 2
proof time: 0.010927
Statistics
  infstep : 15
  nodes   : 8
  maxdepth: 2
Time: 0.988175
  inferstep time: 0.793065
  node_find time: 0.009628
  node_crea time: 0.127404
    pred time: 0.037431
    thmpred time: 0.000003
    mc time: 0.056129
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "tactictoe_thm_150"), (DB.fetch "words" "WORD_LO"), bossLib.DECIDE (Parse.Term [HolKernel.QUOTE " (*#loc 1 141511*)~(a < b) = a >= b:num"])] THEN BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "words" "WORD_GE", DB.fetch "words" "WORD_HS", DB.fetch "words" "WORD_HI", DB.fetch "words" "WORD_HIGHER", DB.fetch "words" "word_hi_def", DB.fetch "words" "tactictoe_thm_149", arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.SUB_RIGHT_GREATER_EQ, numeralTheory.numeral_distrib, arithmeticTheory.GREATER_EQ, arithmeticTheory.NOT_GREATER_EQ, DB.fetch "words" "nzcv_def", DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_GT", DB.fetch "words" "WORD_LT", DB.fetch "words" "WORD_LS"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015058

WORD_LOWER_TRANS
proof length: 1
proof time: 0.002009
Statistics
  infstep : 15
  nodes   : 5
  maxdepth: 2
Time: 0.545329
  inferstep time: 0.445595
  node_find time: 0.007331
  node_crea time: 0.057116
    pred time: 0.012832
    thmpred time: 0.0
    mc time: 0.018836
    inst time: 0.0
Proof found: (bossLib.RW_TAC bossLib.arith_ss [ ( DB.fetch "words" "WORD_LO" ) , ( DB.fetch "words" "WORD_LS" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013365

WORD_LOWER_EQ_TRANS
proof length: 1
proof time: 0.05226
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.104079
  inferstep time: 0.082788
  node_find time: 0.000644
  node_crea time: 0.013241
    pred time: 0.002788
    thmpred time: 0.0
    mc time: 0.006575
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "word_hi_def" , fcpTheory.FCP_UPDATE_COMMUTES , DB.fetch "words" "word_lo_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011586

WORD_LOWER_EQ_LOWER_TRANS
proof length: 1
proof time: 0.062313
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.134343
  inferstep time: 0.110495
  node_find time: 0.000921
  node_crea time: 0.014563
    pred time: 0.003075
    thmpred time: 0.0
    mc time: 0.007089
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013884

WORD_LOWER_LOWER_EQ_TRANS
proof length: 1
proof time: 0.067262
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.136479
  inferstep time: 0.108969
  node_find time: 0.001528
  node_crea time: 0.017587
    pred time: 0.003395
    thmpred time: 0.000001
    mc time: 0.009099
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "word_max_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01244

WORD_LOWER_EQ_CASES
proof length: 1
proof time: 0.02898
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.10495
  inferstep time: 0.078307
  node_find time: 0.00097
  node_crea time: 0.016472
    pred time: 0.003916
    thmpred time: 0.000001
    mc time: 0.008827
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "nzcv_def" , DB.fetch "words" "WORD_GE" , DB.fetch "words" "WORD_LE" , DB.fetch "words" "WORD_GREATER_OR_EQ" , DB.fetch "words" "WORD_LESS_OR_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01782

WORD_LOWER_CASES
proof length: 1
proof time: 0.027763
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.094489
  inferstep time: 0.069256
  node_find time: 0.0009
  node_crea time: 0.015499
    pred time: 0.003348
    thmpred time: 0.000001
    mc time: 0.008464
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012719

WORD_LOWER_CASES_IMP
proof length: 1
proof time: 0.069048
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.136728
  inferstep time: 0.10253
  node_find time: 0.000795
  node_crea time: 0.016348
    pred time: 0.004126
    thmpred time: 0.000001
    mc time: 0.016492
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LESS_CASES_IMP"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010838

WORD_LOWER_ANTISYM
proof length: 1
proof time: 0.035091
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.100589
  inferstep time: 0.074618
  node_find time: 0.001037
  node_crea time: 0.016576
    pred time: 0.004073
    thmpred time: 0.000001
    mc time: 0.008699
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def" , DB.fetch "words" "tactictoe_thm_148"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01515

WORD_LOWER_EQ_ANTISYM
proof length: 1
proof time: 0.024657
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.113874
  inferstep time: 0.091023
  node_find time: 0.000741
  node_crea time: 0.014022
    pred time: 0.003239
    thmpred time: 0.0
    mc time: 0.007996
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "tactictoe_thm_144"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008656

WORD_LOWER_EQ_REFL
proof length: 1
proof time: 0.012007
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.10742
  inferstep time: 0.064544
  node_find time: 0.001296
  node_crea time: 0.028175
    pred time: 0.00786
    thmpred time: 0.0
    mc time: 0.013939
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_HS" , DB.fetch "words" "WORD_LO"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007927

WORD_LOWER_EQUAL_ANTISYM
proof length: 1
proof time: 0.028707
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.09804
  inferstep time: 0.07193
  node_find time: 0.000958
  node_crea time: 0.016599
    pred time: 0.004016
    thmpred time: 0.0
    mc time: 0.007942
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "WORD_LOWER_EQ_REFL" , DB.fetch "words" "WORD_EXTRACT_OVER_ADD"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014199

WORD_LOWER_IMP_LOWER_OR_EQ
proof length: 1
proof time: 0.021146
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.093481
  inferstep time: 0.067455
  node_find time: 0.000992
  node_crea time: 0.016077
    pred time: 0.003597
    thmpred time: 0.0
    mc time: 0.00808
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_EQ_REFL"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010635

WORD_LOWER_REFL
proof length: 1
proof time: 0.022051
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.141298
  inferstep time: 0.113682
  node_find time: 0.000654
  node_crea time: 0.015279
    pred time: 0.003597
    thmpred time: 0.0
    mc time: 0.009283
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_IMP_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010821

WORD_LOWER_LOWER_CASES
proof length: 1
proof time: 0.02858
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.111397
  inferstep time: 0.074206
  node_find time: 0.000745
  node_crea time: 0.015093
    pred time: 0.003585
    thmpred time: 0.000001
    mc time: 0.020041
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "word_max_def" , DB.fetch "words" "word_min_def" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011827

WORD_NOT_HIGHER
proof length: 1
proof time: 0.05882
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.115866
  inferstep time: 0.090303
  node_find time: 0.001032
  node_crea time: 0.015845
    pred time: 0.003798
    thmpred time: 0.0
    mc time: 0.008253
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "word_hi_def" , DB.fetch "words" "WORD_HI" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_HIGHER_OR_EQ" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_EQ_CASES"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011477

WORD_LOWER_NOT_EQ
proof length: 1
proof time: 0.011422
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.37499
  inferstep time: 0.313671
  node_find time: 0.001811
  node_crea time: 0.035945
    pred time: 0.01146
    thmpred time: 0.0
    mc time: 0.024949
    inst time: 0.0
Proof found: (bossLib.PROVE_TAC [ DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_IMP_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_LOWER_LOWER_CASES" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014342

WORD_NOT_LOWER_EQ
proof length: 1
proof time: 0.02927
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.107265
  inferstep time: 0.073315
  node_find time: 0.001088
  node_crea time: 0.019266
    pred time: 0.004922
    thmpred time: 0.0
    mc time: 0.011093
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "WORD_LOWER_NOT_EQ" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_IMP_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LO" , DB.fetch "words" "WORD_HIGHER"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009838
Replaying proof: 0.006989

WORD_L_PLUS_H
Statistics
  infstep : 295
  nodes   : 106
  maxdepth: 5
Time: 10.057986
  inferstep time: 6.992165
  node_find time: 0.159785
  node_crea time: 2.315864
    pred time: 0.496678
    thmpred time: 0.000019
    mc time: 0.952667
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.117348

WORD_L_LESS_EQ
proof length: 4
proof time: 0.008033
Statistics
  infstep : 145
  nodes   : 45
  maxdepth: 4
Time: 4.339962
  inferstep time: 3.18513
  node_find time: 0.076365
  node_crea time: 0.733239
    pred time: 0.174607
    thmpred time: 0.000004
    mc time: 0.268946
    inst time: 0.0
Proof found: bossLib.Cases THEN bossLib.RW_TAC bossLib.std_ss ([(DB.fetch "words" "word_L2_def"), (DB.fetch "words" "word_L_def"), (DB.fetch "words" "WORD_MULT_CLAUSES")] @ map (boolLib.ONCE_REWRITE_RULE [(DB.fetch "words" "word_L_def")]) [(DB.fetch "words" "word_L_MULT"), (DB.fetch "words" "word_L_MULT_NEG")]) THEN
  bossLib.SIMP_TAC bossLib.bool_ss [(DB.fetch "words" "WORD_LT"), boolLib.GSYM (DB.fetch "words" "WORD_NOT_LESS"), arithmeticTheory.NOT_LESS] THEN
  bossLib.fs [(DB.fetch "words" "word_L_def"), (DB.fetch "words" "word_add_n2w"), (DB.fetch "words" "dimword_IS_TWICE_INT_MIN"), (DB.fetch "words" "word_msb_n2w_numeric")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.03487

WORD_LESS_EQ_H
Statistics
  infstep : 299
  nodes   : 97
  maxdepth: 6
Time: 10.009677
  inferstep time: 7.403857
  node_find time: 0.159479
  node_crea time: 1.799891
    pred time: 0.433327
    thmpred time: 0.000016
    mc time: 0.632524
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.17192
Replaying proof: 0.00119

WORD_L_LESS_H
Statistics
  infstep : 362
  nodes   : 122
  maxdepth: 6
Time: 10.074675
  inferstep time: 6.942125
  node_find time: 0.196338
  node_crea time: 2.211017
    pred time: 0.527357
    thmpred time: 0.000031
    mc time: 0.809672
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017722

WORD_0_LS
proof length: 1
proof time: 0.001119
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.236537
  inferstep time: 0.187459
  node_find time: 0.002088
  node_crea time: 0.023546
    pred time: 0.003499
    thmpred time: 0.000001
    mc time: 0.023858
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LOWER_CASES" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_EQ_CASES" , DB.fetch "words" "WORD_LOWER_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS" , DB.fetch "words" "WORD_LOWER_EQ_REFL" , DB.fetch "words" "WORD_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_LOWER_IMP_LOWER_OR_EQ" , DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS" , DB.fetch "words" "WORD_NOT_HIGHER" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "word_ls_def" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00773

WORD_LS_T
Statistics
  infstep : 241
  nodes   : 76
  maxdepth: 5
Time: 10.033631
  inferstep time: 7.235479
  node_find time: 0.16037
  node_crea time: 2.058866
    pred time: 0.354768
    thmpred time: 0.000017
    mc time: 1.122551
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.031685

WORD_ADD_LEFT_LO
Statistics
  infstep : 286
  nodes   : 77
  maxdepth: 5
Time: 10.050262
  inferstep time: 7.554954
  node_find time: 0.16327
  node_crea time: 1.705762
    pred time: 0.289716
    thmpred time: 0.000009
    mc time: 0.726063
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.749048

WORD_ADD_LEFT_LS
Statistics
  infstep : 194
  nodes   : 65
  maxdepth: 5
Time: 10.098804
  inferstep time: 6.99127
  node_find time: 0.12853
  node_crea time: 2.486782
    pred time: 0.480189
    thmpred time: 0.000017
    mc time: 0.915903
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.735395
Replaying proof: 0.003833
Replaying proof: 0.003556
Replaying proof: 0.000628

WORD_MSB_INT_MIN_LS
Statistics
  infstep : 297
  nodes   : 102
  maxdepth: 5
Time: 10.018446
  inferstep time: 7.045029
  node_find time: 0.172681
  node_crea time: 2.169552
    pred time: 0.410197
    thmpred time: 0.000019
    mc time: 0.975175
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.096584

WORD_LESS_NEG_LEFT
Statistics
  infstep : 332
  nodes   : 81
  maxdepth: 5
Time: 10.133507
  inferstep time: 7.127481
  node_find time: 0.188336
  node_crea time: 2.043257
    pred time: 0.395806
    thmpred time: 0.000016
    mc time: 0.919606
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.18519

WORD_LESS_NEG_RIGHT
Statistics
  infstep : 249
  nodes   : 96
  maxdepth: 5
Time: 10.002269
  inferstep time: 7.106037
  node_find time: 0.142238
  node_crea time: 2.114676
    pred time: 0.39612
    thmpred time: 0.00002
    mc time: 1.019609
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.222047

WORD_LS_word_0
proof length: 1
proof time: 0.009855
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.251526
  inferstep time: 0.188948
  node_find time: 0.002217
  node_crea time: 0.040944
    pred time: 0.009127
    thmpred time: 0.0
    mc time: 0.027885
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "WORD_ADD_LEFT_LO" , DB.fetch "words" "WORD_ADD_LEFT_LS" , DB.fetch "words" "WORD_ADD_RIGHT_LO" , DB.fetch "words" "WORD_ADD_RIGHT_LS" , DB.fetch "words" "WORD_LS" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_LE_LS" , DB.fetch "words" "WORD_LOWER_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LOWER_OR_EQ" , DB.fetch "words" "WORD_NOT_HIGHER" , DB.fetch "words" "word_ls_def" , DB.fetch "words" "tactictoe_thm_148" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "WORD_LOWER_CASES" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01387

WORD_LO_word_0
proof length: 1
proof time: 0.090181
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.184167
  inferstep time: 0.146685
  node_find time: 0.001301
  node_crea time: 0.02173
    pred time: 0.004023
    thmpred time: 0.0
    mc time: 0.018203
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "ZERO_LO_INT_MIN" , DB.fetch "words" "WORD_ADD_LEFT_LO" , DB.fetch "words" "WORD_LESS_NEG_RIGHT" , DB.fetch "words" "tactictoe_thm_144" , DB.fetch "words" "WORD_ADD_RIGHT_LO" , DB.fetch "words" "WORD_ADD_RIGHT_LS" , DB.fetch "words" "WORD_LOWER_CASES_IMP" , DB.fetch "words" "WORD_LOWER_ANTISYM" , DB.fetch "words" "WORD_LOWER_EQ_ANTISYM" , DB.fetch "words" "word_lo_def" , DB.fetch "words" "WORD_NOT_LOWER_EQUAL" , DB.fetch "words" "WORD_NOT_LOWER" , DB.fetch "words" "WORD_LOWER_NOT_EQ" , DB.fetch "words" "WORD_NOT_LOWER_EQ" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "WORD_LOWER_REFL"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.049994

word_msb_neg
proof length: 3
proof time: 0.005345
Statistics
  infstep : 16
  nodes   : 9
  maxdepth: 3
Time: 1.30932
  inferstep time: 0.92936
  node_find time: 0.011523
  node_crea time: 0.256604
    pred time: 0.068978
    thmpred time: 0.000004
    mc time: 0.135427
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.ASM_REWRITE_TAC [DB.fetch "words" "word_abs_def", DB.fetch "words" "WORD_LT", DB.fetch "words" "tactictoe_thm_132", DB.fetch "words" "tactictoe_thm_137", DB.fetch "words" "word_lt_def", DB.fetch "words" "WORD_GREATER", DB.fetch "words" "WORD_LESS_CASES_IMP", DB.fetch "words" "WORD_NOT_LESS", DB.fetch "words" "WORD_LESS_OR_EQ", DB.fetch "words" "WORD_LESS_LESS_CASES", DB.fetch "words" "WORD_LESS_NOT_EQ", DB.fetch "words" "WORD_LT_LO", DB.fetch "words" "WORD_NOT_LESS_EQ", DB.fetch "words" "WORD_NOT_LESS_EQUAL", DB.fetch "words" "word_smax_def", DB.fetch "words" "word_smin_def"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_0_POS", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "WORD_LT", DB.fetch "words" "tactictoe_thm_133", DB.fetch "words" "tactictoe_thm_134", DB.fetch "words" "tactictoe_thm_135", DB.fetch "words" "tactictoe_thm_136", DB.fetch "words" "w2n_lt", DB.fetch "words" "WORD_LO", DB.fetch "words" "nzcv_def", DB.fetch "words" "tactictoe_thm_108", DB.fetch "words" "add_with_carry_def", DB.fetch "words" "WORD_LE", DB.fetch "words" "WORD_GE", DB.fetch "words" "WORD_GT", DB.fetch "words" "tactictoe_thm_140"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015209

word_abs
Statistics
  infstep : 266
  nodes   : 99
  maxdepth: 6
Time: 10.019704
  inferstep time: 6.735164
  node_find time: 0.149645
  node_crea time: 2.542013
    pred time: 0.481308
    thmpred time: 0.000017
    mc time: 0.902939
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014166

word_abs_word_abs
Statistics
  infstep : 251
  nodes   : 95
  maxdepth: 6
Time: 10.039696
  inferstep time: 6.73953
  node_find time: 0.147032
  node_crea time: 2.57557
    pred time: 0.422315
    thmpred time: 0.000026
    mc time: 0.89753
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.212808

word_abs_neg
Statistics
  infstep : 259
  nodes   : 88
  maxdepth: 5
Time: 10.100954
  inferstep time: 7.145949
  node_find time: 0.156354
  node_crea time: 2.072472
    pred time: 0.330183
    thmpred time: 0.00004
    mc time: 0.925354
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.295866

word_abs_diff
proof length: 3
proof time: 0.172184
Statistics
  infstep : 39
  nodes   : 22
  maxdepth: 4
Time: 2.428585
  inferstep time: 1.742572
  node_find time: 0.022903
  node_crea time: 0.528162
    pred time: 0.14085
    thmpred time: 0.000007
    mc time: 0.154083
    inst time: 0.0
Proof found: bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 138581*)w2n a < w2n b"] THEN (metisTools.METIS_TAC [DB.fetch "words" "word_abs", DB.fetch "words" "word_abs_def", DB.fetch "words" "word_abs_neg", DB.fetch "words" "word_abs_word_abs", DB.fetch "words" "tactictoe_thm_132", DB.fetch "words" "tactictoe_thm_133", DB.fetch "words" "tactictoe_thm_134", DB.fetch "words" "tactictoe_thm_135", DB.fetch "words" "tactictoe_thm_136", DB.fetch "words" "tactictoe_thm_137", DB.fetch "words" "word_sub_def", DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "WORD_LCANCEL_SUB", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_SUB_ADD", DB.fetch "words" "WORD_ADD_SUB_ASSOC"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.020953
Replaying proof: 0.045367
Replaying proof: 0.053878

word_eq_n2w
Statistics
  infstep : 309
  nodes   : 149
  maxdepth: 6
Time: 10.012004
  inferstep time: 5.692932
  node_find time: 0.181241
  node_crea time: 3.21682
    pred time: 0.310133
    thmpred time: 0.000014
    mc time: 2.213419
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.095182

word_lt_n2w
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.015193

word_gt_n2w
Statistics
  infstep : 289
  nodes   : 87
  maxdepth: 5
Time: 10.038236
  inferstep time: 6.636434
  node_find time: 0.175274
  node_crea time: 2.558503
    pred time: 0.474797
    thmpred time: 0.000023
    mc time: 1.129878
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.035355

word_le_n2w
Statistics
  infstep : 153
  nodes   : 73
  maxdepth: 6
Time: 10.115412
  inferstep time: 7.486898
  node_find time: 0.106269
  node_crea time: 2.130236
    pred time: 0.413933
    thmpred time: 0.000016
    mc time: 0.86569
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.009294

word_ge_n2w
Statistics
  infstep : 260
  nodes   : 111
  maxdepth: 6
Time: 10.034856
  inferstep time: 6.43596
  node_find time: 0.155054
  node_crea time: 2.837925
    pred time: 0.438881
    thmpred time: 0.000009
    mc time: 1.189798
    inst time: 0.0
Proof status: Time Out
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.031083

word_ls_n2w
proof length: 3
proof time: 0.005508
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.822427
  inferstep time: 0.6245
  node_find time: 0.005644
  node_crea time: 0.114611
    pred time: 0.022464
    thmpred time: 0.000002
    mc time: 0.100765
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_le_n2w", DB.fetch "words" "word_ge_n2w", DB.fetch "words" "word_gt_n2w", DB.fetch "words" "word_lt_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "w2n_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "MOD_2EXP_DIMINDEX", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_shift_bv", DB.fetch "words" "saturate_n2w_def", DB.fetch "words" "n2w_DIV"] THEN bossLib.SRW_TAC [] [(DB.fetch "words" "word_L_def"), (DB.fetch "words" "word_msb_n2w_numeric"), (DB.fetch "words" "WORD_LS"), (DB.fetch "words" "tactictoe_thm_163")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "MOD_2EXP_DIMINDEX", DB.fetch "words" "word_le_n2w", DB.fetch "words" "word_ge_n2w", DB.fetch "words" "word_gt_n2w", DB.fetch "words" "word_lt_n2w", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "w2n_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", bitTheory.MOD_2EXP_def, bitTheory.MOD_2EXP_EQ_def, bitTheory.MOD_2EXP_MAX_def]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005366

word_hi_n2w
proof length: 1
proof time: 0.087881
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.139896
  inferstep time: 0.102614
  node_find time: 0.001368
  node_crea time: 0.022274
    pred time: 0.003348
    thmpred time: 0.0
    mc time: 0.018557
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_gt_n2w" , DB.fetch "words" "WORD_HI" , DB.fetch "words" "WORD_HIGHER" , DB.fetch "words" "WORD_HIGHER_OR_EQ" , DB.fetch "words" "WORD_NOT_HIGHER" , DB.fetch "words" "word_hi_def" , DB.fetch "words" "tactictoe_thm_149" , DB.fetch "words" "word_ge_n2w" , DB.fetch "words" "word_le_n2w" , DB.fetch "words" "word_ls_n2w" , DB.fetch "words" "word_lt_n2w" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "n2w_11" , DB.fetch "words" "n2w_mod" , DB.fetch "words" "word_1comp_n2w" , DB.fetch "words" "word_2comp_n2w"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.005976

word_lo_n2w
proof length: 3
proof time: 0.009019
Statistics
  infstep : 41
  nodes   : 24
  maxdepth: 4
Time: 2.645752
  inferstep time: 1.869497
  node_find time: 0.023827
  node_crea time: 0.58094
    pred time: 0.10593
    thmpred time: 0.000007
    mc time: 0.33776
    inst time: 0.0
Proof found: bossLib.SRW_TAC [bossLib.ARITH_ss] [DB.fetch "words" "word_lt_n2w", DB.fetch "words" "word_ge_n2w", DB.fetch "words" "word_gt_n2w", DB.fetch "words" "word_hi_n2w", DB.fetch "words" "word_le_n2w", DB.fetch "words" "word_ls_n2w", DB.fetch "words" "w2n_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "MOD_2EXP_DIMINDEX", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_shift_bv"] THEN bossLib.RW_TAC (bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close boolSimps.LET_ss) [((DB.fetch "words" "WORD_LO")), ((DB.fetch "words" "WORD_LS")), ((DB.fetch "words" "w2n_n2w"))] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "MOD_2EXP_DIMINDEX", DB.fetch "words" "word_lt_n2w", DB.fetch "words" "word_ge_n2w", DB.fetch "words" "word_gt_n2w", DB.fetch "words" "word_le_n2w", DB.fetch "words" "MOD_DIMINDEX", DB.fetch "words" "word_hi_n2w", DB.fetch "words" "word_ls_n2w", DB.fetch "words" "w2n_n2w", DB.fetch "words" "n2w_11", DB.fetch "words" "n2w_mod", DB.fetch "words" "word_1comp_n2w", DB.fetch "words" "word_2comp_n2w", DB.fetch "words" "word_log2_n2w", DB.fetch "words" "word_msb_n2w_numeric", bitTheory.MOD_2EXP_def]
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.00568

word_hs_n2w
proof length: 1
proof time: 0.113192
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.181558
  inferstep time: 0.143253
  node_find time: 0.001219
  node_crea time: 0.021976
    pred time: 0.003548
    thmpred time: 0.000001
    mc time: 0.019583
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "word_ge_n2w" , DB.fetch "words" "WORD_HS" , DB.fetch "words" "WORD_HIGHER_EQ" , DB.fetch "words" "WORD_HIGHER_OR_EQ" , DB.fetch "words" "word_hs_def" , DB.fetch "words" "tactictoe_thm_150" , DB.fetch "words" "word_gt_n2w" , DB.fetch "words" "word_hi_n2w" , DB.fetch "words" "word_le_n2w" , DB.fetch "words" "word_lo_n2w" , DB.fetch "words" "word_ls_n2w" , DB.fetch "words" "word_lt_n2w" , DB.fetch "words" "w2n_n2w" , DB.fetch "words" "n2w_11" , DB.fetch "words" "n2w_mod" , DB.fetch "words" "word_1comp_n2w"])
Org tac number: 0
Original proof time: 0.0
Replaying proof: 0.006599
Replaying proof: 0.005468

w2n_add
Statistics
  infstep : 169
  nodes   : 72
  maxdepth: 6
Time: 10.01576
  inferstep time: 7.544064
  node_find time: 0.108023
  node_crea time: 1.78606
    pred time: 0.355356
    thmpred time: 0.000024
    mc time: 0.69714
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.173027

saturate_w2w_n2w
Statistics
  infstep : 200
  nodes   : 88
  maxdepth: 5
Time: 10.042099
  inferstep time: 7.079133
  node_find time: 0.117663
  node_crea time: 2.373766
    pred time: 0.409687
    thmpred time: 0.000016
    mc time: 1.026817
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.327912

saturate_w2w
Statistics
  infstep : 153
  nodes   : 82
  maxdepth: 5
Time: 10.034857
  inferstep time: 7.114771
  node_find time: 0.094093
  node_crea time: 2.405506
    pred time: 0.58902
    thmpred time: 0.000017
    mc time: 0.807586
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.864396

saturate_sub
Statistics
  infstep : 324
  nodes   : 77
  maxdepth: 5
Time: 10.028397
  inferstep time: 7.214793
  node_find time: 0.1956
  node_crea time: 1.807621
    pred time: 0.349261
    thmpred time: 0.00002
    mc time: 0.837683
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.024852

saturate_add
Statistics
  infstep : 177
  nodes   : 87
  maxdepth: 5
Time: 10.009395
  inferstep time: 7.494911
  node_find time: 0.110538
  node_crea time: 1.935197
    pred time: 0.347856
    thmpred time: 0.000022
    mc time: 0.828965
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.178995
Replaying proof: 0.000626
Replaying proof: 0.001451

NOT_FINITE_IMP_dimword_2
proof length: 3
proof time: 0.004031
Statistics
  infstep : 20
  nodes   : 6
  maxdepth: 3
Time: 0.777877
  inferstep time: 0.617798
  node_find time: 0.012359
  node_crea time: 0.077228
    pred time: 0.014396
    thmpred time: 0.000003
    mc time: 0.043015
    inst time: 0.0
Proof found: bossLib.SRW_TAC [bossLib.ARITH_ss] [arithmeticTheory.LESS_EQ_ADD_SUB, fcpTheory.DIMINDEX_GE_1, arithmeticTheory.EXP_ADD, (DB.fetch "words" "INT_MIN_def"), (DB.fetch "words" "dimword_def"), fcpTheory.index_sum] THEN boolLib.ASM_REWRITE_TAC [fcpTheory.dimindex_def, fcpTheory.tactictoe_thm_87, fcpTheory.tactictoe_thm_38, fcpTheory.card_dimindex, bitTheory.BITS_ZERO3, bitTheory.BITS_THM2, bitTheory.DIV_MULT_THM2, numposrepTheory.tactictoe_thm_12, numposrepTheory.tactictoe_thm_13, fcpTheory.index_bit0, fcpTheory.index_bit1, bitTheory.BITS_THM, bitTheory.BITWISE_ONE_COMP_LEM, numeral_bitTheory.tactictoe_thm_37, bitTheory.BITS_ZERO4, bitTheory.BIT_COMP_THM3] THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [arithmeticTheory.EXP, boolLib.GSYM arithmeticTheory.MULT_ASSOC, arithmeticTheory.EQ_MULT_LCANCEL, numTheory.NOT_SUC, boolLib.GSYM numTheory.NOT_SUC, prim_recTheory.INV_SUC_EQ]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008733
Replaying proof: 0.001537

saturate_mul
Statistics
  infstep : 159
  nodes   : 77
  maxdepth: 5
Time: 10.064729
  inferstep time: 7.407355
  node_find time: 0.092583
  node_crea time: 2.162841
    pred time: 0.474094
    thmpred time: 0.000019
    mc time: 0.801224
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.269256

WORD_DIVISION
Statistics
  infstep : 220
  nodes   : 82
  maxdepth: 5
Time: 10.005432
  inferstep time: 7.580411
  node_find time: 0.135302
  node_crea time: 1.751418
    pred time: 0.293794
    thmpred time: 0.000027
    mc time: 0.831004
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.331945

word_reverse_0
proof length: 3
proof time: 0.051808
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.677574
  inferstep time: 0.471188
  node_find time: 0.005673
  node_crea time: 0.125015
    pred time: 0.020726
    thmpred time: 0.000002
    mc time: 0.092705
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "words" "word_0", DB.fetch "words" "WORD_BITS_ZERO", DB.fetch "words" "WORD_BITS_ZERO2", DB.fetch "words" "word_bits_def", DB.fetch "words" "WORD_BIT_BITS", DB.fetch "words" "word_bits_n2w", DB.fetch "words" "n2w_BITS", DB.fetch "words" "word_sign_extend_bits", DB.fetch "words" "WORD_BITS_LSR", DB.fetch "words" "WORD_BITS_EXTRACT", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2w_w2w", DB.fetch "words" "WORD_BITS_COMP_THM", DB.fetch "words" "word_extract_def", DB.fetch "words" "word_eq_0"] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "word_0", DB.fetch "words" "LEAST_BIT_LT", DB.fetch "words" "LOG2_w2n", DB.fetch "words" "NOT_0w", DB.fetch "words" "word_eq_0", DB.fetch "words" "tactictoe_thm_49", DB.fetch "words" "word_index", DB.fetch "words" "SHIFT_1_SUB_1", DB.fetch "words" "word_xor_def", DB.fetch "words" "word_1comp_def", DB.fetch "words" "NOT_UINTMAXw", fcpTheory.CART_EQ, fcpTheory.FCP_BETA, DB.fetch "words" "word_asr_def"] THEN
  metisTools.METIS_TAC [DB.fetch "words" "word_reverse_n2w", bitTheory.BIT_REVERSE_THM, DB.fetch "words" "word_index", DB.fetch "words" "tactictoe_thm_9", DB.fetch "words" "word_bit_n2w", bitTheory.EXISTS_BIT_LT, bitTheory.BITS_ZERO5, bitTheory.EXISTS_BIT_IN_RANGE, bitTheory.NOT_BIT_GT_TWOEXP, bitTheory.NOT_BIT_GT_LOG2, bitTheory.NOT_BIT_GT_BITWISE, DB.fetch "words" "n2w_def", bitTheory.BIT_IMP_GE_TWOEXP, bitTheory.BIT_ZERO, bitTheory.BIT_SLICE_THM3, bitTheory.BITWISE_def]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018668

word_reverse_word_T
proof length: 2
proof time: 0.009037
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.455615
  inferstep time: 0.338798
  node_find time: 0.004214
  node_crea time: 0.069852
    pred time: 0.012216
    thmpred time: 0.000002
    mc time: 0.056145
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_0"), (DB.fetch "words" "word_reverse_def")] THEN bossLib.SRW_TAC [fcpLib.FCP_ss, boolSimps.LET_ss, bossLib.ARITH_ss] [(DB.fetch "words" "bit_field_insert_def"), (DB.fetch "words" "word_modify_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "w2w"), (DB.fetch "words" "word_slice_def"), (DB.fetch "words" "word_and_def"), (DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_1comp_def"), (DB.fetch "words" "WORD_NEG_1_T")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018421

sw2sw_word_T
Statistics
  infstep : 237
  nodes   : 83
  maxdepth: 5
Time: 10.053591
  inferstep time: 6.964973
  node_find time: 0.144906
  node_crea time: 2.374533
    pred time: 0.41743
    thmpred time: 0.000009
    mc time: 1.103625
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.021957

word_lsb_word_T
proof length: 1
proof time: 0.000649
Statistics
  infstep : 10
  nodes   : 5
  maxdepth: 2
Time: 0.568073
  inferstep time: 0.433832
  node_find time: 0.007102
  node_crea time: 0.085738
    pred time: 0.017843
    thmpred time: 0.000001
    mc time: 0.051207
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "words" "word_lsb_n2w" , DB.fetch "words" "word_rrx_def" , DB.fetch "words" "word_lsb_def" , DB.fetch "words" "word_lsb" , DB.fetch "words" "WORD_NEG_1" , DB.fetch "words" "WORD_NEG_1_T" , DB.fetch "words" "WORD_NEG_MUL" , DB.fetch "words" "WORD_SUB_INTRO" , DB.fetch "words" "bit_field_insert" , DB.fetch "words" "sw2sw_w2w" , DB.fetch "words" "sw2sw_w2w_add" , DB.fetch "words" "sw2sw_word_T" , DB.fetch "words" "w2n_minus1" , DB.fetch "words" "word_eq_n2w" , DB.fetch "words" "word_reverse_word_T" , DB.fetch "words" "WORD_NEG" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.024785

word_msb_word_T
proof length: 2
proof time: 0.004914
Statistics
  infstep : 10
  nodes   : 4
  maxdepth: 2
Time: 0.454324
  inferstep time: 0.335849
  node_find time: 0.006537
  node_crea time: 0.050757
    pred time: 0.009399
    thmpred time: 0.0
    mc time: 0.05334
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss, bossLib.ARITH_ss] [(DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "sw2sw"), (DB.fetch "words" "w2w"), (DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_0")] THEN boolLib.NTAC 2 SHIFT_WORD_TAC
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.027383

word_bit_0_word_T
proof length: 3
proof time: 0.002595
Statistics
  infstep : 12
  nodes   : 5
  maxdepth: 3
Time: 0.691684
  inferstep time: 0.554948
  node_find time: 0.008197
  node_crea time: 0.066206
    pred time: 0.013121
    thmpred time: 0.000002
    mc time: 0.053324
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [boolLib.FUN_EQ_THM, (DB.fetch "words" "word_lsb_def"), (DB.fetch "words" "word_bit_def")] THEN bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_lsb_word_T", DB.fetch "words" "word_msb_word_T", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "WORD_NEG", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_NOT"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "word_T", DB.fetch "words" "tactictoe_thm_45", DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "reduce_and", DB.fetch "words" "ASR_LIMIT", DB.fetch "words" "FCP_T_F", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "word_T_def", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "w2n_plus1", DB.fetch "words" "LSL_UINT_MAX", DB.fetch "words" "word_lsb_def", DB.fetch "words" "word_0", DB.fetch "words" "NOT_0w", DB.fetch "words" "tactictoe_thm_49"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.027682

word_log2_1
Statistics
  infstep : 263
  nodes   : 102
  maxdepth: 6
Time: 10.039466
  inferstep time: 6.897842
  node_find time: 0.165334
  node_crea time: 2.320918
    pred time: 0.329645
    thmpred time: 0.000019
    mc time: 1.216062
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010681

word_join_0
Statistics
  infstep : 312
  nodes   : 109
  maxdepth: 5
Time: 10.122634
  inferstep time: 7.019348
  node_find time: 0.187293
  node_crea time: 2.192824
    pred time: 0.386385
    thmpred time: 0.000017
    mc time: 0.78243
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.026632

w2w_eq_n2w
Statistics
  infstep : 213
  nodes   : 93
  maxdepth: 6
Time: 10.046959
  inferstep time: 6.489121
  node_find time: 0.139487
  node_crea time: 2.846946
    pred time: 0.47843
    thmpred time: 0.000018
    mc time: 1.053694
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.386367

word_extract_eq_n2w
proof length: 2
proof time: 0.008717
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.54754
  inferstep time: 0.385831
  node_find time: 0.00476
  node_crea time: 0.103191
    pred time: 0.019791
    thmpred time: 0.0
    mc time: 0.076429
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_ALL_BITS")] THEN bossLib.FULL_SIMP_TAC bossLib.arith_ss [DB.fetch "words" "w2w_eq_n2w", DB.fetch "words" "w2w_def", DB.fetch "words" "EXTRACT_ALL_BITS", DB.fetch "words" "word_extract_w2w", DB.fetch "words" "w2w", DB.fetch "words" "w2n_w2w", DB.fetch "words" "w2n_11_lift", DB.fetch "words" "saturate_w2w", DB.fetch "words" "word_join_def", DB.fetch "words" "WORD_w2w_EXTRACT", DB.fetch "words" "word_bits_w2w", DB.fetch "words" "w2n_w2w_le", DB.fetch "words" "w2w_lt", DB.fetch "words" "WORD_w2w_OVER_BITWISE", DB.fetch "words" "w2w_n2w", DB.fetch "words" "w2w_LSL"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.088365

word_concat_0
Statistics
  infstep : 282
  nodes   : 74
  maxdepth: 5
Time: 10.003885
  inferstep time: 6.80541
  node_find time: 0.173184
  node_crea time: 2.330814
    pred time: 0.389099
    thmpred time: 0.000016
    mc time: 1.019247
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.286381

word_concat_0_eq
Statistics
  infstep : 206
  nodes   : 74
  maxdepth: 4
Time: 10.021707
  inferstep time: 6.658509
  node_find time: 0.130997
  node_crea time: 2.655702
    pred time: 0.571983
    thmpred time: 0.00002
    mc time: 0.873095
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.05898

word_concat_assoc
Statistics
  infstep : 240
  nodes   : 76
  maxdepth: 5
Time: 10.058128
  inferstep time: 6.684321
  node_find time: 0.148067
  node_crea time: 2.621851
    pred time: 0.393838
    thmpred time: 0.000009
    mc time: 0.495697
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.631453

word_join_word_T
Statistics
  infstep : 202
  nodes   : 78
  maxdepth: 6
Time: 10.067199
  inferstep time: 7.452702
  node_find time: 0.129282
  node_crea time: 1.921555
    pred time: 0.392147
    thmpred time: 0.000017
    mc time: 0.716379
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.182432
Replaying proof: 0.027125

lsr_1_word_T
Statistics
  infstep : 242
  nodes   : 97
  maxdepth: 6
Time: 10.019157
  inferstep time: 6.545668
  node_find time: 0.163315
  node_crea time: 2.667497
    pred time: 0.452057
    thmpred time: 0.000014
    mc time: 1.367549
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.102591

word_rrx_0
Statistics
  infstep : 308
  nodes   : 120
  maxdepth: 6
Time: 10.00012
  inferstep time: 6.563407
  node_find time: 0.20734
  node_crea time: 2.343836
    pred time: 0.308763
    thmpred time: 0.000016
    mc time: 1.129476
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.022542

word_rrx_word_T
proof length: 7
proof time: 0.091715
Statistics
  infstep : 17
  nodes   : 12
  maxdepth: 3
Time: 1.669295
  inferstep time: 1.1493
  node_find time: 0.015213
  node_crea time: 0.266543
    pred time: 0.063293
    thmpred time: 0.000002
    mc time: 0.236018
    inst time: 0.0
Proof found: bossLib.SRW_TAC [fcpLib.FCP_ss] [(DB.fetch "words" "word_0"), (DB.fetch "words" "word_L"), (DB.fetch "words" "word_rrx_def"), (DB.fetch "words" "word_lsb_n2w"), (DB.fetch "words" "ZERO_SHIFT")] THENL [metisTools.METIS_TAC [DB.fetch "words" "word_lsb_word_T", DB.fetch "words" "word_lsb_n2w", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_lsb_def", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "sw2sw_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_concat_word_T"], bossLib.SRW_TAC [fcpLib.FCP_ss] [(DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_lsr_def"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_H")] THEN
  bossLib.FULL_SIMP_TAC (bossLib.arith_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close boolSimps.CONJ_ss) [DB.fetch "words" "tactictoe_thm_45", DB.fetch "words" "word_T", DB.fetch "words" "word_H", DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_T_def", DB.fetch "words" "reduce_and", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "FCP_T_F", DB.fetch "words" "WORD_L_PLUS_H", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_reverse_def"], metisTools.METIS_TAC [DB.fetch "words" "word_lsb_word_T", DB.fetch "words" "word_lsb_n2w", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_lsb_def", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "sw2sw_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_concat_word_T"], bossLib.SRW_TAC [fcpLib.FCP_ss] [(DB.fetch "words" "WORD_NEG_1"), (DB.fetch "words" "word_lsr_def"), (DB.fetch "words" "word_T"), (DB.fetch "words" "word_H")] THEN
  bossLib.FULL_SIMP_TAC (bossLib.arith_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close boolSimps.CONJ_ss) [DB.fetch "words" "tactictoe_thm_45", DB.fetch "words" "word_T", DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "w2n_plus1", DB.fetch "words" "word_T_def", DB.fetch "words" "reduce_and", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "FCP_T_F", DB.fetch "words" "WORD_L_PLUS_H", DB.fetch "words" "word_bits_def", DB.fetch "words" "word_slice_def", DB.fetch "words" "word_rrx_def", DB.fetch "words" "word_reverse_def", DB.fetch "words" "word_reduce_def"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.030513

word_T_not_zero
proof length: 1
proof time: 0.00087
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.230213
  inferstep time: 0.172572
  node_find time: 0.002184
  node_crea time: 0.023776
    pred time: 0.003575
    thmpred time: 0.0
    mc time: 0.031566
    inst time: 0.0
Proof found: (bossLib.SRW_TAC [ fcpLib.FCP_ss ] [ ( DB.fetch "words" "w2w" ) , ( DB.fetch "words" "word_and_def" ) , ( DB.fetch "words" "word_lsl_def" ) , ( DB.fetch "words" "word_0" ) , ( DB.fetch "words" "WORD_NEG_1" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015045

WORD_LS_word_T
proof length: 2
proof time: 0.115179
Statistics
  infstep : 48
  nodes   : 20
  maxdepth: 3
Time: 2.399251
  inferstep time: 1.799837
  node_find time: 0.02817
  node_crea time: 0.401698
    pred time: 0.079497
    thmpred time: 0.000007
    mc time: 0.203339
    inst time: 0.0
Proof found: bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "word_eq_n2w", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "word_rrx_word_T", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "sw2sw_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "word_concat_word_T", DB.fetch "words" "word_join_word_T", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "WORD_NEG_1_T"] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_LS_T", DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "w2w", DB.fetch "words" "NOT_0w", fcpTheory.CART_EQ, DB.fetch "words" "sw2sw", DB.fetch "words" "word_T", DB.fetch "words" "saturate_w2w", DB.fetch "words" "WORD_LS_word_0", DB.fetch "words" "WORD_LOWER_EQUAL_ANTISYM", DB.fetch "words" "WORD_LOWER_EQ_LOWER_TRANS", DB.fetch "words" "WORD_LOWER_EQ_TRANS", DB.fetch "words" "WORD_LOWER_LOWER_EQ_TRANS", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_LEFT_LS", DB.fetch "words" "WORD_ADD_RIGHT_LO"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090548

WORD_LO_word_T
proof length: 5
proof time: 0.089292
Statistics
  infstep : 91
  nodes   : 32
  maxdepth: 4
Time: 4.505287
  inferstep time: 3.503151
  node_find time: 0.055598
  node_crea time: 0.614082
    pred time: 0.118571
    thmpred time: 0.000009
    mc time: 0.317762
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "word_rrx_word_T", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "sw2sw_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_concat_word_T", DB.fetch "words" "word_join_word_T", DB.fetch "words" "word_reverse_word_T"] THENL [metisTools.METIS_TAC [DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "WORD_LS_T", DB.fetch "words" "word_T", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "reduce_and", DB.fetch "words" "tactictoe_thm_45", DB.fetch "words" "w2n_plus1", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "word_T_def", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_LO_word_0", DB.fetch "words" "WORD_NOT_LOWER", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_RIGHT_LO2", DB.fetch "words" "WORD_LESS_NEG_RIGHT", DB.fetch "words" "word_lo_def"], boolLib.REWRITE_TAC [boolLib.GSYM (DB.fetch "words" "WORD_NOT_LOWER_EQUAL"), (DB.fetch "words" "WORD_LS_word_0")] THEN
  boolLib.REWRITE_TAC [(DB.fetch "words" "WORD_LOWER_OR_EQ"), bossLib.METIS_PROVE [(DB.fetch "words" "WORD_LS_T"), (DB.fetch "words" "WORD_NOT_LOWER")] (Parse.Term [HolKernel.QUOTE " (*#loc 1 172914*)~(word_T <+ n)"])] THEN
  metisTools.METIS_TAC [DB.fetch "words" "NOT_UINTMAXw", DB.fetch "words" "WORD_OR_CLAUSES", DB.fetch "words" "reduce_and", DB.fetch "words" "tactictoe_thm_45", DB.fetch "words" "w2n_plus1", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "word_T_def", DB.fetch "words" "WORD_NEG_T", DB.fetch "words" "WORD_LS_T", DB.fetch "words" "word_T", DB.fetch "words" "WORD_LO_word_0", DB.fetch "words" "tactictoe_thm_117", DB.fetch "words" "WORD_NOT_LOWER", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_RIGHT_LO2"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.056819

WORD_LESS_0_word_T
proof length: 7
proof time: 0.191301
Statistics
  infstep : 17
  nodes   : 10
  maxdepth: 2
Time: 1.39532
  inferstep time: 1.060842
  node_find time: 0.012318
  node_crea time: 0.183853
    pred time: 0.055403
    thmpred time: 0.000003
    mc time: 0.132451
    inst time: 0.0
Proof found: bossLib.RW_TAC bossLib.bool_ss [(DB.fetch "words" "WORD_LE"), (DB.fetch "words" "WORD_LT")] THENL [metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL"], metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_rrx_word_T", DB.fetch "words" "word_lsb_word_T", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "WORD_NEG_1_T"], metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_rrx_word_T"], metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_rrx_word_T", DB.fetch "words" "word_lsb_word_T", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "WORD_NEG_1_T"], metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_NEG_1_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_rrx_word_T"], metisTools.METIS_TAC [DB.fetch "words" "word_msb_word_T", DB.fetch "words" "w2n_minus1", DB.fetch "words" "WORD_0_POS", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "word_T_not_zero", DB.fetch "words" "WORD_LO_word_T", DB.fetch "words" "word_bit_0_word_T", DB.fetch "words" "WORD_LS_word_T", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "word_rrx_word_T", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "WORD_NEG_MUL"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016982
Replaying proof: 0.010575
Replaying proof: 0.018864
Replaying proof: 0.005144
Replaying proof: 0.013611
Replaying proof: 0.013817

word_reverse_thm
proof length: 12
proof time: 0.20108
Statistics
  infstep : 29
  nodes   : 20
  maxdepth: 2
Time: 3.053496
  inferstep time: 2.368349
  node_find time: 0.024272
  node_crea time: 0.366882
    pred time: 0.093112
    thmpred time: 0.000018
    mc time: 0.290518
    inst time: 0.0
Proof found: bossLib.SRW_TAC [] [(DB.fetch "words" "word_extract_def"), (DB.fetch "words" "WORD_BITS_ZERO"), (DB.fetch "words" "w2w_0")] THENL [metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "word_reverse_0", DB.fetch "words" "word_lsl_def", DB.fetch "words" "word_lsr_def", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "word_and_def", DB.fetch "words" "word_or_def"], metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "word_shift_bv", DB.fetch "words" "lsl_lsr", DB.fetch "words" "word_lsl_def", DB.fetch "words" "LSL_BITWISE", DB.fetch "words" "LSL_ADD", DB.fetch "words" "w2w_LSL", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "WORD_BITS_LSL"], metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "word_shift_bv", DB.fetch "words" "tactictoe_thm_86", DB.fetch "words" "word_bits_mask", DB.fetch "words" "word_extract_mask", DB.fetch "words" "word_extract_w2w_mask", DB.fetch "words" "word_lsr_def", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "word_asr_n2w"], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "word_or_def", DB.fetch "words" "LSL_BITWISE", DB.fetch "words" "ROL_BITWISE", DB.fetch "words" "ROR_BITWISE", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "word_and_def", DB.fetch "words" "LSL_BITWISE", DB.fetch "words" "ROL_BITWISE", DB.fetch "words" "ROR_BITWISE", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "LSR_BITWISE", DB.fetch "words" "word_xor_def", DB.fetch "words" "LSL_BITWISE", DB.fetch "words" "ROL_BITWISE", DB.fetch "words" "ROR_BITWISE", DB.fetch "words" "WORD_BITS_OVER_BITWISE", DB.fetch "words" "WORD_EXTRACT_OVER_BITWISE", DB.fetch "words" "WORD_w2w_OVER_BITWISE"], bossLib.ASM_SIMP_TAC ((bossLib.std_ss hhs_infixl0_open bossLib.++ hhs_infixl0_close fcpLib.FCP_ss) hhs_infixl0_open bossLib.++ hhs_infixl0_close bossLib.ARITH_ss) [DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "word_1comp_def", DB.fetch "words" "WORD_NEG", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_MSB_1COMP", DB.fetch "words" "WORD_XOR", DB.fetch "words" "WORD_DE_MORGAN_THM", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_XOR_CLAUSES"], metisTools.METIS_TAC [DB.fetch "words" "word_reverse_0", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "WORD_XOR_CLAUSES", DB.fetch "words" "WORD_ADD_XOR", DB.fetch "words" "WORD_ADD_OR", DB.fetch "words" "tactictoe_thm_86", DB.fetch "words" "word_bits_mask"], metisTools.METIS_TAC [DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "word_reverse_0", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "WORD_NEG_1", DB.fetch "words" "bit_field_insert", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "lsr_1_word_T", DB.fetch "words" "sw2sw_w2w_add"], metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "word_reverse_0", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "ASR_LIMIT", DB.fetch "words" "LSR_LIMIT", DB.fetch "words" "w2w_LSL", DB.fetch "words" "LSL_LIMIT", DB.fetch "words" "WORD_BITS_LSL"], metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_176", DB.fetch "words" "tactictoe_thm_175", DB.fetch "words" "word_reverse_def", DB.fetch "words" "tactictoe_thm_173", DB.fetch "words" "tactictoe_thm_170", DB.fetch "words" "tactictoe_thm_174", DB.fetch "words" "tactictoe_thm_171", DB.fetch "words" "tactictoe_thm_172", DB.fetch "words" "word_reverse_word_T", DB.fetch "words" "word_reverse_n2w", DB.fetch "words" "word_reverse_0", DB.fetch "words" "sw2sw_w2w", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "WORD_NEG_MUL", DB.fetch "words" "bit_field_insert", DB.fetch "words" "WORD_LO_word_T"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.224951

bit_count_upto_0
Statistics
  infstep : 340
  nodes   : 82
  maxdepth: 5
Time: 10.102322
  inferstep time: 7.016341
  node_find time: 0.217637
  node_crea time: 2.021833
    pred time: 0.421719
    thmpred time: 0.000014
    mc time: 0.827878
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010032

bit_count_upto_SUC
proof length: 2
proof time: 0.007859
Statistics
  infstep : 16
  nodes   : 8
  maxdepth: 3
Time: 0.962318
  inferstep time: 0.746375
  node_find time: 0.009861
  node_crea time: 0.141932
    pred time: 0.050109
    thmpred time: 0.000001
    mc time: 0.04668
    inst time: 0.0
Proof found: bossLib.SIMP_TAC bossLib.std_ss [(DB.fetch "words" "bit_count_upto_def"), sum_numTheory.SUM_def] THEN bossLib.SRW_TAC [fcpLib.FCP_ss, boolSimps.LET_ss, bossLib.ARITH_ss] [(DB.fetch "words" "bit_field_insert_def"), (DB.fetch "words" "word_modify_def"), (DB.fetch "words" "word_lsl_def"), (DB.fetch "words" "w2w"), (DB.fetch "words" "word_slice_def"), (DB.fetch "words" "word_and_def"), (DB.fetch "words" "word_or_def"), (DB.fetch "words" "word_1comp_def"), (DB.fetch "words" "WORD_NEG_1_T")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015152

bit_count_upto_is_zero
Statistics
  infstep : 391
  nodes   : 126
  maxdepth: 6
Time: 10.018208
  inferstep time: 6.537099
  node_find time: 0.272334
  node_crea time: 2.191374
    pred time: 0.437904
    thmpred time: 0.000011
    mc time: 0.761429
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.502571

bit_count_is_zero
Statistics
  infstep : 328
  nodes   : 84
  maxdepth: 6
Time: 10.037112
  inferstep time: 6.869
  node_find time: 0.219977
  node_crea time: 2.088707
    pred time: 0.33472
    thmpred time: 0.000015
    mc time: 0.951506
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.020834

WORD_FINITE
Statistics
  infstep : 530
  nodes   : 81
  maxdepth: 5
Time: 10.001453
  inferstep time: 6.732653
  node_find time: 0.360282
  node_crea time: 1.591352
    pred time: 0.350283
    thmpred time: 0.000017
    mc time: 0.540392
    inst time: 0.0
Proof status: Time Out
Org tac number: 20
Original proof time: 0.0
Replaying proof: 0.674268

SUC_WORD_PRED
Statistics
  infstep : 278
  nodes   : 88
  maxdepth: 6
Time: 10.022973
  inferstep time: 7.29803
  node_find time: 0.177455
  node_crea time: 1.824239
    pred time: 0.277458
    thmpred time: 0.000017
    mc time: 0.875321
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.265477

WORD_PRED_THM
proof length: 5
proof time: 0.044422
Statistics
  infstep : 43
  nodes   : 21
  maxdepth: 4
Time: 3.02207
  inferstep time: 2.370895
  node_find time: 0.026018
  node_crea time: 0.418866
    pred time: 0.080669
    thmpred time: 0.000003
    mc time: 0.236999
    inst time: 0.0
Proof found: bossLib.Cases THEN bossLib.Cases_on [HolKernel.QUOTE " (*#loc 1 178607*)n"] THENL
  [metisTools.METIS_TAC [DB.fetch "words" "WORD_SUB_LZERO", DB.fetch "words" "SUC_WORD_PRED", DB.fetch "words" "tactictoe_thm_86", DB.fetch "words" "word_bits_mask", DB.fetch "words" "word_extract_mask", DB.fetch "words" "word_extract_w2w_mask", DB.fetch "words" "SHIFT_1_SUB_1", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NOT", DB.fetch "words" "WORD_H_WORD_L", DB.fetch "words" "w2n_plus1", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_1_n2w", DB.fetch "words" "tactictoe_thm_133", DB.fetch "words" "tactictoe_thm_134", DB.fetch "words" "tactictoe_thm_135"],
  bossLib.FULL_SIMP_TAC bossLib.std_ss [arithmeticTheory.ADD1, boolLib.GSYM (DB.fetch "words" "word_add_n2w"), (DB.fetch "words" "WORD_ADD_SUB")] THEN
  bossLib.FULL_SIMP_TAC bossLib.arith_ss [DB.fetch "words" "n2w_SUC", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_add_n2w", DB.fetch "words" "WORD_LITERAL_ADD", DB.fetch "words" "w2n_plus1", DB.fetch "words" "WORD_MULT_CLAUSES", DB.fetch "words" "sw2sw_w2w_add", DB.fetch "words" "SUC_WORD_PRED", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "WORD_NEG", DB.fetch "words" "word_eq_n2w", DB.fetch "words" "w2n_minus1", DB.fetch "words" "word_1_n2w", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_LEFT_LS", DB.fetch "words" "WORD_ADD_RIGHT_LO"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.079023
Replaying proof: 0.004613
Replaying proof: 0.014549

LSR_LESS
Statistics
  infstep : 208
  nodes   : 67
  maxdepth: 5
Time: 10.14008
  inferstep time: 7.600252
  node_find time: 0.139019
  node_crea time: 1.827925
    pred time: 0.380322
    thmpred time: 0.000021
    mc time: 0.744746
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.152676

word_sub_w2n
Statistics
  infstep : 348
  nodes   : 74
  maxdepth: 4
Time: 10.004532
  inferstep time: 7.437144
  node_find time: 0.221582
  node_crea time: 1.478278
    pred time: 0.292416
    thmpred time: 0.000023
    mc time: 0.569484
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.347371
Replaying proof: 0.015934

WORD_LE_EQ_LS
proof length: 2
proof time: 0.091825
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.420583
  inferstep time: 0.301807
  node_find time: 0.003106
  node_crea time: 0.083371
    pred time: 0.020106
    thmpred time: 0.000001
    mc time: 0.035426
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "WORD_LT"), (DB.fetch "words" "WORD_LE"), (DB.fetch "words" "word_msb_word_T"), (DB.fetch "words" "WORD_0_POS")] THEN metisTools.METIS_TAC [DB.fetch "words" "WORD_LS", DB.fetch "words" "WORD_LE", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "ADD_WITH_CARRY_SUB", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_LEFT_LS", DB.fetch "words" "WORD_ADD_RIGHT_LO", DB.fetch "words" "WORD_ADD_RIGHT_LS", DB.fetch "words" "word_sub_w2n", DB.fetch "words" "saturate_sub", DB.fetch "words" "word_ls_def", DB.fetch "words" "WORD_LE_LS", DB.fetch "words" "WORD_LOWER_OR_EQ", DB.fetch "words" "tactictoe_thm_148", DB.fetch "words" "WORD_LOWER_CASES", DB.fetch "words" "WORD_LOWER_EQ_CASES"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.094784

WORD_LT_EQ_LO
proof length: 2
proof time: 0.014039
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.451926
  inferstep time: 0.352627
  node_find time: 0.004294
  node_crea time: 0.059607
    pred time: 0.012409
    thmpred time: 0.0
    mc time: 0.038129
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "words" "WORD_LT"), (DB.fetch "words" "WORD_LE"), (DB.fetch "words" "word_msb_word_T"), (DB.fetch "words" "WORD_0_POS")] THEN BasicProvers.SRW_TAC [] [DB.fetch "words" "WORD_LO", DB.fetch "words" "WORD_LT", DB.fetch "words" "tactictoe_thm_133", DB.fetch "words" "tactictoe_thm_134", DB.fetch "words" "tactictoe_thm_135", DB.fetch "words" "tactictoe_thm_136", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "w2n_lt", DB.fetch "words" "WORD_ADD_LEFT_LO", DB.fetch "words" "WORD_ADD_RIGHT_LO", DB.fetch "words" "tactictoe_thm_144", DB.fetch "words" "WORD_LT_LO", DB.fetch "words" "WORD_LOWER_OR_EQ", DB.fetch "words" "WORD_LOWER_LOWER_CASES", DB.fetch "words" "tactictoe_thm_148"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.098577

WORD_ZERO_LE
proof length: 4
proof time: 0.003202
Statistics
  infstep : 272
  nodes   : 82
  maxdepth: 5
Time: 8.016589
  inferstep time: 5.299863
  node_find time: 0.16763
  node_crea time: 1.758493
    pred time: 0.33797
    thmpred time: 0.00002
    mc time: 0.760186
    inst time: 0.0
Proof found: bossLib.Cases THEN boolLib.REWRITE_TAC [(DB.fetch "words" "WORD_LT"), (DB.fetch "words" "WORD_LE"), (DB.fetch "words" "word_msb_word_T"), (DB.fetch "words" "WORD_0_POS")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "words" "tactictoe_thm_117", DB.fetch "words" "word_msb_n2w_numeric", DB.fetch "words" "w2n_n2w", DB.fetch "words" "word_msb_n2w", DB.fetch "words" "tactictoe_thm_142", DB.fetch "words" "tactictoe_thm_143", DB.fetch "words" "tactictoe_thm_146", DB.fetch "words" "tactictoe_thm_147", DB.fetch "words" "word_0_n2w", DB.fetch "words" "word_L_def", DB.fetch "words" "BOUND_ORDER", DB.fetch "words" "dimindex_int_min_le_iso", DB.fetch "words" "ZERO_LT_INT_MIN", DB.fetch "words" "dimindex_int_min_lt_iso", DB.fetch "words" "INT_MIN_LT_DIMWORD", DB.fetch "words" "tactictoe_thm_163"] THEN
  bossLib.DECIDE_TAC
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.070856
Replaying proof: 0.001476
Replaying proof: 0.00043
Replaying proof: 0.006602

WORD_LT_SUB_UPPER
Statistics
  infstep : 194
  nodes   : 74
  maxdepth: 5
Time: 10.001482
  inferstep time: 7.150423
  node_find time: 0.133674
  node_crea time: 2.169496
    pred time: 0.385911
    thmpred time: 0.000017
    mc time: 0.801593
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.292732
Replaying proof: 0.006854

WORD_SUB_LT
proof length: 3
proof time: 0.183741
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 2
Time: 0.577249
  inferstep time: 0.452888
  node_find time: 0.005894
  node_crea time: 0.06745
    pred time: 0.013621
    thmpred time: 0.0
    mc time: 0.04016
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_185", DB.fetch "words" "WORD_LT_SUB_UPPER", DB.fetch "words" "WORD_LESS_0_word_T", DB.fetch "words" "tactictoe_thm_132", DB.fetch "words" "tactictoe_thm_137", DB.fetch "words" "tactictoe_thm_184", DB.fetch "words" "tactictoe_thm_182", DB.fetch "words" "tactictoe_thm_183", DB.fetch "words" "WORD_EQ_SUB_ZERO", DB.fetch "words" "WORD_SUB_REFL", DB.fetch "words" "saturate_sub", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "FST_ADD_WITH_CARRY", DB.fetch "words" "word_sub_w2n", DB.fetch "words" "ADD_WITH_CARRY_SUB", DB.fetch "words" "tactictoe_thm_133"], metisTools.METIS_TAC [DB.fetch "words" "WORD_LT_SUB_UPPER", DB.fetch "words" "tactictoe_thm_185", DB.fetch "words" "tactictoe_thm_132", DB.fetch "words" "tactictoe_thm_137", DB.fetch "words" "word_sub_w2n", DB.fetch "words" "tactictoe_thm_184", DB.fetch "words" "tactictoe_thm_182", DB.fetch "words" "tactictoe_thm_183", DB.fetch "words" "WORD_SUB_INTRO", DB.fetch "words" "ADD_WITH_CARRY_SUB", DB.fetch "words" "WORD_LCANCEL_SUB", DB.fetch "words" "WORD_EQ_SUB_RADD", DB.fetch "words" "WORD_ADD_EQ_SUB", DB.fetch "words" "WORD_ADD_SUB_ASSOC", DB.fetch "words" "WORD_ADD_SUB_SYM", DB.fetch "words" "WORD_EQ_SUB_LADD"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01332

WORD_SUB_LE
proof length: 1
proof time: 0.119279
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.189626
  inferstep time: 0.154585
  node_find time: 0.001523
  node_crea time: 0.020339
    pred time: 0.00363
    thmpred time: 0.000001
    mc time: 0.013738
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "words" "tactictoe_thm_186" , DB.fetch "words" "tactictoe_thm_183" , DB.fetch "words" "tactictoe_thm_184" , DB.fetch "words" "tactictoe_thm_187" , DB.fetch "words" "tactictoe_thm_182" , DB.fetch "words" "WORD_LE_EQ_LS" , DB.fetch "words" "WORD_LT_EQ_LO" , DB.fetch "words" "WORD_ZERO_LE" , DB.fetch "words" "WORD_LESS_0_word_T" , DB.fetch "words" "tactictoe_thm_179" , DB.fetch "words" "tactictoe_thm_180" , DB.fetch "words" "tactictoe_thm_181" , DB.fetch "words" "WORD_LESS_EQ_TRANS" , DB.fetch "words" "WORD_LESS_EQUAL_ANTISYM" , DB.fetch "words" "WORD_LESS_EQ_LESS_TRANS" , DB.fetch "words" "WORD_LESS_LESS_EQ_TRANS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014644
Bad stac: 13
