Replaying proof: 0.000017

option_Axiom
Statistics
  infstep : 1379
  nodes   : 160
  maxdepth: 5
Time: 10.000184
  inferstep time: 8.002705
  node_find time: 0.130016
  node_crea time: 1.248764
    pred time: 0.198286
    thmpred time: 0.000019
    mc time: 0.475699
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.125294

option_induction
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.281861

FORALL_OPTION
proof length: 3
proof time: 0.112238
Statistics
  infstep : 36
  nodes   : 11
  maxdepth: 3
Time: 0.802486
  inferstep time: 0.740393
  node_find time: 0.002057
  node_crea time: 0.047266
    pred time: 0.015467
    thmpred time: 0.000006
    mc time: 0.021368
    inst time: 0.0
Proof found: boolLib.ONCE_REWRITE_TAC [DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_induction", DB.fetch "option" "option_case_def", DB.fetch "option" "SOME_DEF", DB.fetch "option" "NONE_DEF", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_TY_DEF", sumTheory.sum_Axiom, combinTheory.UPDATE_APPLY, oneTheory.tactictoe_thm_0, sumTheory.FORALL_SUM, sumTheory.SUM_ALL_def, sumTheory.tactictoe_thm_9, sumTheory.sum_case_cong, sumTheory.sum_case_def] THEN boolLib.ONCE_REWRITE_TAC [DB.fetch "option" "NONE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_REP_ABS_DEF", oneTheory.FORALL_ONE, oneTheory.one_induction, DB.fetch "option" "option_TY_DEF", oneTheory.one_case_thm, oneTheory.one, oneTheory.one_Axiom, oneTheory.one_prim_rec, oneTheory.one_DEF, DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "option_induction", oneTheory.tactictoe_thm_0] THEN
  metisTools.METIS_TAC [oneTheory.one_DEF, DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_TY_DEF", DB.fetch "option" "NONE_DEF", combinTheory.MONOID_CONJ_T, satTheory.EQT_Imp1, markerTheory.IfCases_def, DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "option_induction", oneTheory.tactictoe_thm_0, oneTheory.FORALL_ONE, oneTheory.one_induction, oneTheory.one_case_def]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007664

EXISTS_OPTION
proof length: 4
proof time: 0.156598
Statistics
  infstep : 40
  nodes   : 11
  maxdepth: 4
Time: 1.009613
  inferstep time: 0.948711
  node_find time: 0.002139
  node_crea time: 0.046439
    pred time: 0.016564
    thmpred time: 0.000002
    mc time: 0.019463
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_induction", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_case_def", DB.fetch "option" "SOME_DEF", DB.fetch "option" "NONE_DEF", DB.fetch "option" "option_TY_DEF", DB.fetch "option" "option_REP_ABS_DEF", sumTheory.EXISTS_SUM, sumTheory.IS_SUM_REP, sumTheory.sum_CASES, sumTheory.tactictoe_thm_8, sumTheory.sum_Axiom, oneTheory.tactictoe_thm_0, oneTheory.one_prim_rec] THEN boolLib.ONCE_REWRITE_TAC [DB.fetch "option" "NONE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_nchotomy", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "option_REP_ABS_DEF", oneTheory.one_prim_rec, DB.fetch "option" "option_TY_DEF", oneTheory.FORALL_ONE, oneTheory.one_induction, oneTheory.one_case_thm, oneTheory.one, oneTheory.one_Axiom, oneTheory.one_DEF, DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "option_induction"] THEN
  boolLib.STRIP_ASSUME_TAC (boolLib.BETA_RULE (boolLib.ISPECL [Parse.-- [HolKernel.QUOTE " (*#loc 1 1509*)\\x. f x"] Parse.--, Parse.-- [HolKernel.QUOTE " (*#loc 1 1524*)\\x:one.(e:'b)"] Parse.--] (HolKernel.INST_TYPE [Type.beta hhs_infixl0_open HolKernel.|-> hhs_infixl0_close Parse.Type [HolKernel.QUOTE " (*#loc 1 1582*):one"]] sumTheory.sum_Axiom))) THEN
  metisTools.METIS_TAC [oneTheory.one_DEF, DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_nchotomy", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "option_TY_DEF", DB.fetch "option" "NONE_DEF", satTheory.EQT_Imp1, markerTheory.IfCases_def, combinTheory.MONOID_CONJ_T, DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "option_induction", oneTheory.tactictoe_thm_0, oneTheory.one_prim_rec, oneTheory.one_TY_DEF]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.022508

SOME_11
proof length: 1
proof time: 0.068169
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.054906
  inferstep time: 0.049954
  node_find time: 0.000049
  node_crea time: 0.003686
    pred time: 0.001121
    thmpred time: 0.0
    mc time: 0.002512
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "SOME_DEF" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "option_case_def" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "option_induction" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "option_REP_ABS_DEF" , DB.fetch "option" "tactictoe_thm_0" , DB.fetch "option" "NONE_DEF" , DB.fetch "option" "option_TY_DEF" , sumTheory.sum_Axiom , combinTheory.ASSOC_DEF , combinTheory.ASSOC_SYM , combinTheory.COMM_DEF , combinTheory.C_THM])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003252
Replaying proof: 0.000068

OPTION_MAP2_THM
proof length: 1
proof time: 0.000306
Statistics
  infstep : 10
  nodes   : 7
  maxdepth: 3
Time: 0.468006
  inferstep time: 0.435159
  node_find time: 0.000525
  node_crea time: 0.028569
    pred time: 0.011697
    thmpred time: 0.000003
    mc time: 0.009143
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "option_case_def" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "option_induction" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "SOME_11" , DB.fetch "option" "SOME_DEF" , DB.fetch "option" "THE_DEF" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006992
Replaying proof: 0.000012

IS_SOME_EXISTS
proof length: 1
proof time: 0.048894
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.059006
  inferstep time: 0.054395
  node_find time: 0.000046
  node_crea time: 0.003286
    pred time: 0.001158
    thmpred time: 0.0
    mc time: 0.002153
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "SOME_DEF" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "SOME_11" , DB.fetch "option" "THE_DEF" , DB.fetch "option" "option_case_def" , DB.fetch "option" "option_induction"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.079721

IS_NONE_EQ_NONE
proof length: 1
proof time: 0.086709
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.075779
  inferstep time: 0.071244
  node_find time: 0.000046
  node_crea time: 0.003234
    pred time: 0.001203
    thmpred time: 0.0
    mc time: 0.002074
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_case_def" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "option_induction" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "OPTION_MAP2_THM" , DB.fetch "option" "NONE_DEF" , DB.fetch "option" "SOME_DEF"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067027

NOT_IS_SOME_EQ_NONE
proof length: 1
proof time: 0.072397
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.091784
  inferstep time: 0.086465
  node_find time: 0.000048
  node_crea time: 0.003647
    pred time: 0.001334
    thmpred time: 0.0
    mc time: 0.002684
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "IS_SOME_EXISTS" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "IS_NONE_EQ_NONE" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_case_def" , DB.fetch "option" "option_induction" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "OPTION_MAP2_THM"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062549
Replaying proof: 0.000315
Replaying proof: 0.000354

option_case_ID
proof length: 1
proof time: 0.097319
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.10276
  inferstep time: 0.098244
  node_find time: 0.000046
  node_crea time: 0.003209
    pred time: 0.001124
    thmpred time: 0.000001
    mc time: 0.002078
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "option_case_def" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "option_induction" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "OPTION_MAP2_THM" , DB.fetch "option" "IS_NONE_EQ_NONE" , DB.fetch "option" "NOT_IS_SOME_EQ_NONE"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.072092
Replaying proof: 0.000277

option_case_SOME_ID
proof length: 1
proof time: 0.034467
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.077542
  inferstep time: 0.072817
  node_find time: 0.00007
  node_crea time: 0.003325
    pred time: 0.00112
    thmpred time: 0.0
    mc time: 0.00227
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "option_case_ID" , DB.fetch "option" "option_case_def" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "SOME_11" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "IS_SOME_EXISTS" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "SOME_DEF" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "OPTION_JOIN_DEF" , DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "THE_DEF"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065819
Replaying proof: 0.000242
Replaying proof: 0.000226

option_case_compute
proof length: 3
proof time: 0.167279
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.302706
  inferstep time: 0.28748
  node_find time: 0.000204
  node_crea time: 0.010722
    pred time: 0.004809
    thmpred time: 0.000002
    mc time: 0.006291
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 6473*)(x :'a option)"] Parse.--)
end THENL [metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "THE_DEF", DB.fetch "option" "option_case_ID", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "IS_SOME_EXISTS", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, sumTheory.SUM_MAP, sumTheory.cond_sum_expand, satTheory.dc_cond, DB.fetch "option" "option_Axiom", combinTheory.LEFT_ID_DEF], metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", oneTheory.tactictoe_thm_0, DB.fetch "option" "THE_DEF", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_ID", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, sumTheory.SUM_MAP, sumTheory.cond_sum_expand, satTheory.dc_cond, DB.fetch "option" "option_Axiom"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033344

IF_EQUALS_OPTION
proof length: 3
proof time: 0.003278
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.338068
  inferstep time: 0.318019
  node_find time: 0.000329
  node_crea time: 0.011722
    pred time: 0.004194
    thmpred time: 0.000001
    mc time: 0.009268
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 10332*)P"] THEN (simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "sum" "FORALL_SUM")])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007538

IF_NONE_EQUALS_OPTION
proof length: 3
proof time: 0.000809
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.336369
  inferstep time: 0.31934
  node_find time: 0.000276
  node_crea time: 0.011591
    pred time: 0.004291
    thmpred time: 0.0
    mc time: 0.006827
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 10332*)P"] THENL [boolLib.REWRITE_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IF_EQUALS_OPTION", sumTheory.cond_sum_expand, satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, sumTheory.SUM_MAP, DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_TY_DEF"], boolLib.REWRITE_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IF_EQUALS_OPTION", sumTheory.cond_sum_expand, satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, sumTheory.SUM_MAP, satTheory.OR_DUAL2, satTheory.OR_DUAL3]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.025971

OPTION_MAP_EQ_SOME
Statistics
  infstep : 726
  nodes   : 132
  maxdepth: 6
Time: 10.020595
  inferstep time: 9.055619
  node_find time: 0.073985
  node_crea time: 0.74313
    pred time: 0.232751
    thmpred time: 0.000019
    mc time: 0.248314
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.107383

OPTION_MAP_EQ_NONE
proof length: 4
proof time: 0.076477
Statistics
  infstep : 29
  nodes   : 8
  maxdepth: 3
Time: 0.658226
  inferstep time: 0.607526
  node_find time: 0.00186
  node_crea time: 0.036962
    pred time: 0.008825
    thmpred time: 0.000002
    mc time: 0.013407
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 9158*)x:'a option"] Parse.--) THENL
  [metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "option_case_ID"],
  simpLib.SIMP_TAC boolSimps.bool_ss [oneTheory.tactictoe_thm_0, DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "IF_EQUALS_OPTION"]]
end
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058305

OPTION_MAP_EQ_NONE_both_ways
proof length: 4
proof time: 0.154916
Statistics
  infstep : 120
  nodes   : 15
  maxdepth: 3
Time: 1.504226
  inferstep time: 1.4016
  node_find time: 0.00798
  node_crea time: 0.063005
    pred time: 0.023567
    thmpred time: 0.000005
    mc time: 0.024429
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "NOT_IS_SOME_EQ_NONE"], boolLib.SPEC_TAC (Parse.Term [HolKernel.QUOTE " (*#loc 1 2017*)option_REP (x:'a option)"], Parse.Term [HolKernel.QUOTE " (*#loc 1 2049*)s:'a + one"]) THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "NONE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "option_TY_DEF", oneTheory.one_axiom, oneTheory.tactictoe_thm_0, oneTheory.FORALL_ONE, oneTheory.one_case_def, oneTheory.one_case_thm, oneTheory.one_induction]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.043644

OPTION_MAP_COMPOSE
proof length: 3
proof time: 0.099307
Statistics
  infstep : 14
  nodes   : 7
  maxdepth: 3
Time: 0.45828
  inferstep time: 0.424451
  node_find time: 0.00088
  node_crea time: 0.024023
    pred time: 0.010984
    thmpred time: 0.0
    mc time: 0.012188
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 9158*)x:'a option"] Parse.--)
end THENL [metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "OPTION_MAP_EQ_SOME", combinTheory.o_DEF, combinTheory.o_THM, combinTheory.o_ASSOC, combinTheory.GEN_LET_RAND, combinTheory.GEN_literal_case_RAND, combinTheory.o_ABS_R, sumTheory.sum_axiom, combinTheory.I_o_ID, combinTheory.K_o_THM, combinTheory.o_ABS_L, sumTheory.SUM_MAP_CASE], metisTools.METIS_TAC [oneTheory.tactictoe_thm_0, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", combinTheory.o_DEF, combinTheory.o_THM, combinTheory.o_ASSOC, combinTheory.GEN_LET_RAND, combinTheory.GEN_literal_case_RAND, combinTheory.o_ABS_R, sumTheory.sum_axiom, combinTheory.I_o_ID, combinTheory.K_o_THM, combinTheory.o_ABS_L]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032432

OPTION_MAP_CONG
Statistics
  infstep : 806
  nodes   : 182
  maxdepth: 6
Time: 10.045414
  inferstep time: 9.088466
  node_find time: 0.083511
  node_crea time: 0.718153
    pred time: 0.174411
    thmpred time: 0.000027
    mc time: 0.254927
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.138421

IS_SOME_MAP
proof length: 3
proof time: 0.145833
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.328447
  inferstep time: 0.314535
  node_find time: 0.000285
  node_crea time: 0.009118
    pred time: 0.004188
    thmpred time: 0.000001
    mc time: 0.005431
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 6473*)(x :'a option)"] Parse.--)
end THENL [boolLib.REWRITE_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "option_case_compute", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "option_case_def", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP2_THM"], metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", oneTheory.tactictoe_thm_0, DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "option_case_def", DB.fetch "option" "option_Axiom"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029235

OPTION_JOIN_EQ_SOME
Statistics
  infstep : 980
  nodes   : 171
  maxdepth: 6
Time: 10.101435
  inferstep time: 8.98749
  node_find time: 0.108711
  node_crea time: 0.792481
    pred time: 0.205016
    thmpred time: 0.000022
    mc time: 0.279841
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.262528

OPTION_MAP2_SOME
proof length: 6
proof time: 0.124116
Statistics
  infstep : 335
  nodes   : 51
  maxdepth: 4
Time: 3.618325
  inferstep time: 3.266644
  node_find time: 0.027282
  node_crea time: 0.232243
    pred time: 0.070708
    thmpred time: 0.000008
    mc time: 0.081828
    inst time: 0.0
Proof found: boolLib.EQ_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "option_CLAUSES", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_ABS_L, combinTheory.C_THM, combinTheory.C_DEF, combinTheory.FCOMM_DEF, combinTheory.LEFT_ID_DEF, combinTheory.RIGHT_ID_DEF, combinTheory.W_DEF, combinTheory.W_THM, DB.fetch "option" "option_case_def", DB.fetch "option" "option_Axiom"] THEN
  boolLib.ONCE_REWRITE_TAC [boolLib.GSYM (HolKernel.CONJUNCT1 (DB.fetch "option" "option_REP_ABS_DEF"))] THEN
  metisTools.METIS_TAC [DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "THE_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "SOME_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "NONE_DEF", DB.fetch "option" "OPTION_MAP2_THM", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_ABS_L, combinTheory.C_THM, combinTheory.C_DEF], boolLib.REPEAT boolLib.STRIP_TAC THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", combinTheory.K_o_THM, combinTheory.GEN_LET_RAND, combinTheory.GEN_LET_RATOR, combinTheory.GEN_literal_case_RAND, combinTheory.GEN_literal_case_RATOR, combinTheory.LET_FORALL_ELIM, combinTheory.literal_case_FORALL_ELIM, combinTheory.UPD_SAME_KEY_UNWIND, sumTheory.tactictoe_thm_2, sumTheory.tactictoe_thm_4, sumTheory.tactictoe_thm_6, sumTheory.tactictoe_thm_7]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067435

OPTION_MAP2_NONE
proof length: 1
proof time: 0.002111
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.117219
  inferstep time: 0.111125
  node_find time: 0.000133
  node_crea time: 0.004073
    pred time: 0.001517
    thmpred time: 0.0
    mc time: 0.002532
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "option" "OPTION_MAP2_SOME" , DB.fetch "option" "OPTION_MAP2_DEF" , DB.fetch "option" "OPTION_MAP2_THM" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "OPTION_MAP_EQ_NONE" , DB.fetch "option" "option_CLAUSES" , DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways" , DB.fetch "option" "option_case_def" , DB.fetch "option" "NOT_NONE_SOME" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "NOT_SOME_NONE" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "OPTION_JOIN_DEF" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061771

OPTION_MAP2_cong
proof length: 3
proof time: 0.114165
Statistics
  infstep : 205
  nodes   : 54
  maxdepth: 5
Time: 3.740177
  inferstep time: 3.332216
  node_find time: 0.02016
  node_crea time: 0.31937
    pred time: 0.086395
    thmpred time: 0.00001
    mc time: 0.117665
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_NONE", DB.fetch "option" "OPTION_MAP_CONG", combinTheory.UPD_SAME_KEY_UNWIND, DB.fetch "option" "OPTION_MAP2_THM", sumTheory.sum_case_cong, sumTheory.sum_case_def, combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_THM, combinTheory.FCOMM_DEF, combinTheory.C_DEF, combinTheory.C_ABS_L, combinTheory.LEFT_ID_DEF] THEN BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_compute", DB.fetch "option" "OPTION_MAP_CONG", combinTheory.UPD_SAME_KEY_UNWIND, DB.fetch "option" "THE_DEF", sumTheory.sum_case_cong, sumTheory.sum_case_def, DB.fetch "option" "option_nchotomy", DB.fetch "option" "SOME_11", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP2_NONE", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "IS_SOME_DEF"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091259

OPTION_MAP_CASE
proof length: 3
proof time: 0.085624
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.268999
  inferstep time: 0.245482
  node_find time: 0.00039
  node_crea time: 0.017841
    pred time: 0.011057
    thmpred time: 0.000002
    mc time: 0.007206
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 6473*)(x :'a option)"] Parse.--)
end THENL [metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_case_ID", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "option_case_compute", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "IS_SOME_MAP", combinTheory.o_THM, combinTheory.o_ABS_L, combinTheory.o_ABS_R, combinTheory.o_DEF], metisTools.METIS_TAC [DB.fetch "option" "option_CLAUSES", oneTheory.tactictoe_thm_0, DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_case_ID", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "option_case_compute", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "IS_SOME_MAP", combinTheory.o_THM, combinTheory.o_ABS_L, combinTheory.o_ABS_R]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026143

OPTION_BIND_cong
proof length: 5
proof time: 0.163251
Statistics
  infstep : 583
  nodes   : 139
  maxdepth: 6
Time: 9.678336
  inferstep time: 8.790585
  node_find time: 0.067951
  node_crea time: 0.633713
    pred time: 0.179478
    thmpred time: 0.00003
    mc time: 0.249369
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 11382*)o1:'a option"] Parse.--) THENL
  [metisTools.METIS_TAC [DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP2_NONE", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP_CONG", combinTheory.UPD_SAME_KEY_UNWIND, sumTheory.sum_case_cong, sumTheory.sum_case_def, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_induction", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_case_def", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "OPTION_MAP2_THM"],
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP_CONG", combinTheory.UPD_SAME_KEY_UNWIND, DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_induction", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "option_nchotomy", DB.fetch "option" "SOME_11"]]
end
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010003

OPTION_BIND_EQUALS_OPTION
Statistics
  infstep : 1058
  nodes   : 167
  maxdepth: 6
Time: 10.010363
  inferstep time: 8.526283
  node_find time: 0.141548
  node_crea time: 1.028837
    pred time: 0.309371
    thmpred time: 0.000026
    mc time: 0.350626
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029944

IS_SOME_BIND
proof length: 2
proof time: 0.113724
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.22422
  inferstep time: 0.210742
  node_find time: 0.000273
  node_crea time: 0.00897
    pred time: 0.003829
    thmpred time: 0.000001
    mc time: 0.005575
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN metisTools.METIS_TAC [DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "NOT_IS_SOME_EQ_NONE", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "IS_SOME_MAP", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_BIND_cong", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "SOME_11", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_Axiom"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029814

OPTION_IGNORE_BIND_thm
proof length: 5
proof time: 0.109982
Statistics
  infstep : 32
  nodes   : 7
  maxdepth: 3
Time: 0.565893
  inferstep time: 0.511631
  node_find time: 0.002604
  node_crea time: 0.030772
    pred time: 0.011736
    thmpred time: 0.000003
    mc time: 0.017547
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_IGNORE_BIND_def", markerTheory.move_left_conj, markerTheory.move_left_disj, markerTheory.move_right_conj, markerTheory.move_right_disj, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_case_def", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "NOT_IS_SOME_EQ_NONE"] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_IGNORE_BIND_def", combinTheory.K_o_THM, combinTheory.K_THM, markerTheory.move_left_conj, markerTheory.move_left_disj, markerTheory.move_right_conj, markerTheory.move_right_disj, DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_cong", DB.fetch "option" "IS_SOME_BIND", combinTheory.K_DEF, combinTheory.I_DEF, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_nchotomy", DB.fetch "option" "option_case_def"], boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_IGNORE_BIND_def", markerTheory.move_left_conj, markerTheory.move_left_disj, markerTheory.move_right_conj, markerTheory.move_right_disj, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP2_SOME", combinTheory.K_o_THM, combinTheory.UPD_SAME_KEY_UNWIND, sumTheory.tactictoe_thm_2, sumTheory.tactictoe_thm_4, sumTheory.tactictoe_thm_6, sumTheory.tactictoe_thm_7, combinTheory.GEN_LET_RAND, combinTheory.GEN_LET_RATOR] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_IGNORE_BIND_def", combinTheory.K_o_THM, combinTheory.K_THM, markerTheory.move_left_conj, markerTheory.move_left_disj, markerTheory.move_right_conj, markerTheory.move_right_disj, DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_cong", DB.fetch "option" "IS_SOME_BIND", combinTheory.K_DEF, combinTheory.I_DEF, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "OPTION_MAP2_SOME"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002675

OPTION_IGNORE_BIND_EQUALS_OPTION
proof length: 6
proof time: 0.147066
Statistics
  infstep : 175
  nodes   : 39
  maxdepth: 4
Time: 2.774417
  inferstep time: 2.46732
  node_find time: 0.017399
  node_crea time: 0.224424
    pred time: 0.082853
    thmpred time: 0.000007
    mc time: 0.074326
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "option" "OPTION_IGNORE_BIND_def", DB.fetch "option" "OPTION_IGNORE_BIND_thm", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "OPTION_MAP2_NONE", satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, satTheory.dc_neg, sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8, sumTheory.EXISTS_SUM] THENL
  [metisTools.METIS_TAC [DB.fetch "option" "OPTION_IGNORE_BIND_def", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP2_SOME", sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8, DB.fetch "option" "IS_SOME_EXISTS", sumTheory.EXISTS_SUM, sumTheory.sum_CASES, DB.fetch "option" "option_TY_DEF", sumTheory.sum_Axiom, DB.fetch "option" "tactictoe_thm_2", oneTheory.tactictoe_thm_0],
  metisLib.METIS_TAC [(DB.fetch "option" "option_nchotomy")],
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_IGNORE_BIND_def", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "option_case_def", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF"]], BasicProvers.SRW_TAC [] [(DB.fetch "option" "OPTION_IGNORE_BIND_def")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.027278

OPTION_GUARD_COND
proof length: 1
proof time: 0.001013
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.11538
  inferstep time: 0.106534
  node_find time: 0.000307
  node_crea time: 0.004828
    pred time: 0.001741
    thmpred time: 0.000001
    mc time: 0.003846
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033964

OPTION_GUARD_EQ_THM
proof length: 6
proof time: 0.248616
Statistics
  infstep : 141
  nodes   : 30
  maxdepth: 4
Time: 2.212
  inferstep time: 1.949879
  node_find time: 0.013001
  node_crea time: 0.184892
    pred time: 0.092708
    thmpred time: 0.000005
    mc time: 0.061772
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [] THENL [simpLib.SIMP_TAC boolSimps.bool_ss [boolLib.EQ_IMP_THM, (DB.fetch "one" "one_induction")] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_GUARD_def", DB.fetch "option" "OPTION_GUARD_COND", oneTheory.one_DEF, oneTheory.one_induction, DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "NONE_DEF", DB.fetch "option" "option_TY_DEF", oneTheory.FORALL_ONE, oneTheory.one, oneTheory.one_Axiom, oneTheory.one_case_thm, oneTheory.one_prim_rec, satTheory.EQT_Imp1, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF"], simpLib.SIMP_TAC boolSimps.bool_ss [DB.fetch "option" "OPTION_GUARD_COND", DB.fetch "option" "OPTION_GUARD_def", oneTheory.tactictoe_thm_0, oneTheory.one_TY_DEF, DB.fetch "option" "NONE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "option_TY_DEF", oneTheory.FORALL_ONE, oneTheory.one, oneTheory.one_axiom, oneTheory.one_Axiom, oneTheory.one_case_thm, oneTheory.one_case_def] THEN
  boolLib.STRIP_ASSUME_TAC (boolLib.BETA_RULE (boolLib.ISPECL [Parse.-- [HolKernel.QUOTE " (*#loc 1 1509*)\\x. f x"] Parse.--, Parse.-- [HolKernel.QUOTE " (*#loc 1 1524*)\\x:one.(e:'b)"] Parse.--] (HolKernel.INST_TYPE [Type.beta hhs_infixl0_open HolKernel.|-> hhs_infixl0_close Parse.Type [HolKernel.QUOTE " (*#loc 1 1582*):one"]] sumTheory.sum_Axiom))) THEN
  metisTools.METIS_TAC [DB.fetch "option" "NONE_DEF", DB.fetch "option" "OPTION_GUARD_COND", sumTheory.cond_sum_expand, DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", satTheory.dc_cond, DB.fetch "option" "SOME_DEF", DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "OPTION_GUARD_def", oneTheory.FORALL_ONE, oneTheory.one, oneTheory.one_Axiom, oneTheory.one_case_thm, oneTheory.one_prim_rec]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046556

OPTION_CHOICE_EQ_NONE
proof length: 3
proof time: 0.002498
Statistics
  infstep : 12
  nodes   : 4
  maxdepth: 2
Time: 0.387084
  inferstep time: 0.35305
  node_find time: 0.001587
  node_crea time: 0.019175
    pred time: 0.008995
    thmpred time: 0.000002
    mc time: 0.012407
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.Term [HolKernel.QUOTE " (*#loc 1 14250*)m1:'a option"])
end THENL [BasicProvers.SRW_TAC [] [DB.fetch "option" "OPTION_CHOICE_def", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_def", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_IGNORE_BIND_thm", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_GUARD_EQ_THM", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_THM"], BasicProvers.SRW_TAC [] [DB.fetch "option" "OPTION_CHOICE_def", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_def", DB.fetch "option" "option_Axiom", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_JOIN_DEF", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.02714

OPTION_CHOICE_NONE
proof length: 3
proof time: 0.092886
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.261681
  inferstep time: 0.222334
  node_find time: 0.000553
  node_crea time: 0.027475
    pred time: 0.011211
    thmpred time: 0.000001
    mc time: 0.013648
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.Term [HolKernel.QUOTE " (*#loc 1 14250*)m1:'a option"])
end THENL [metisTools.METIS_TAC [DB.fetch "option" "OPTION_CHOICE_def", DB.fetch "option" "OPTION_CHOICE_EQ_NONE", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_thm", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "IS_NONE_EQ_NONE", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "NOT_IS_SOME_EQ_NONE"], metisTools.METIS_TAC [DB.fetch "option" "OPTION_CHOICE_def", DB.fetch "option" "OPTION_CHOICE_EQ_NONE", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_JOIN_DEF"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.028672

OPTION_MCOMP_ASSOC
Statistics
  infstep : 798
  nodes   : 100
  maxdepth: 5
Time: 10.007136
  inferstep time: 8.623176
  node_find time: 0.110721
  node_crea time: 0.997144
    pred time: 0.325866
    thmpred time: 0.000021
    mc time: 0.296517
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.093002

OPTION_MCOMP_ID
Statistics
  infstep : 809
  nodes   : 113
  maxdepth: 5
Time: 10.011068
  inferstep time: 8.796337
  node_find time: 0.116238
  node_crea time: 0.749984
    pred time: 0.244684
    thmpred time: 0.000032
    mc time: 0.321693
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.114589

OPTION_APPLY_MAP2
proof length: 7
proof time: 0.214461
Statistics
  infstep : 252
  nodes   : 71
  maxdepth: 5
Time: 5.029567
  inferstep time: 4.510259
  node_find time: 0.030274
  node_crea time: 0.358605
    pred time: 0.134412
    thmpred time: 0.000012
    mc time: 0.156032
    inst time: 0.0
Proof found: let
  fun OPTION_CASES_TAC t = boolLib.STRUCT_CASES_TAC ( boolLib.ISPEC t ( ( DB.fetch "option" "option_nchotomy" ) ) )
in
  OPTION_CASES_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 9158*)x:'a option"] Parse.--)
end THENL [metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_NONE", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP_CASE", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "IS_SOME_MAP", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION"], boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_APPLY_def", oneTheory.tactictoe_thm_0, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "OPTION_MAP2_NONE", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_MAP_CASE", DB.fetch "option" "IS_SOME_MAP", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "OPTION_MAP_EQ_NONE", DB.fetch "option" "OPTION_MAP_EQ_NONE_both_ways"] THEN
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THENL
  [boolLib.ONCE_REWRITE_TAC [boolLib.GSYM (HolKernel.CONJUNCT1 (DB.fetch "option" "option_REP_ABS_DEF"))] THEN
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP_CASE", DB.fetch "option" "option_REP_ABS_DEF", oneTheory.tactictoe_thm_0, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_compute", DB.fetch "option" "option_case_ID", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "THE_DEF", DB.fetch "option" "NONE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "option_case_def", sumTheory.sum_axiom, sumTheory.SUM_MAP_CASE],
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_MAP_CASE", oneTheory.tactictoe_thm_0, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_ID", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "option_case_compute", DB.fetch "option" "option_case_def", combinTheory.o_THM, DB.fetch "option" "OPTION_MAP_COMPOSE", combinTheory.o_ABS_L, combinTheory.o_ABS_R, combinTheory.o_DEF, combinTheory.K_o_THM, sumTheory.sum_axiom, combinTheory.GEN_LET_RAND, combinTheory.GEN_literal_case_RAND]]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.148373

SOME_SOME_APPLY
proof length: 1
proof time: 0.064026
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.112096
  inferstep time: 0.104093
  node_find time: 0.0001
  node_crea time: 0.005646
    pred time: 0.002126
    thmpred time: 0.000001
    mc time: 0.003466
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "option" "OPTION_APPLY_def" , DB.fetch "option" "OPTION_MAP_DEF" , DB.fetch "option" "option_CLAUSES" , DB.fetch "option" "OPTION_APPLY_MAP2" , DB.fetch "option" "option_Axiom" , DB.fetch "option" "option_case_def" , DB.fetch "option" "OPTION_MAP2_THM" , DB.fetch "option" "OPTION_BIND_EQUALS_OPTION" , DB.fetch "option" "OPTION_BIND_def" , DB.fetch "option" "OPTION_MAP_EQ_SOME" , DB.fetch "option" "OPTION_MAP2_SOME" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "OPTION_BIND_cong" , DB.fetch "option" "OPTION_MAP2_cong" , DB.fetch "option" "OPTION_MAP_CONG"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002752

SOME_APPLY_PERMUTE
proof length: 6
proof time: 0.162862
Statistics
  infstep : 96
  nodes   : 16
  maxdepth: 5
Time: 1.697593
  inferstep time: 1.55584
  node_find time: 0.010511
  node_crea time: 0.08419
    pred time: 0.038095
    thmpred time: 0.000005
    mc time: 0.036533
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "SOME_SOME_APPLY", DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "OPTION_APPLY_MAP2", combinTheory.C_ABS_L, combinTheory.S_ABS_L, combinTheory.S_ABS_R, combinTheory.o_ABS_L, combinTheory.o_ABS_R, DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def"] THEN boolLib.REWRITE_TAC [DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "OPTION_APPLY_MAP2", DB.fetch "option" "SOME_SOME_APPLY", combinTheory.C_ABS_L, combinTheory.S_ABS_L, combinTheory.S_ABS_R, combinTheory.o_ABS_L, combinTheory.o_ABS_R, DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "OPTION_MAP_EQ_SOME", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP_CONG", DB.fetch "option" "OPTION_MAP_CASE", DB.fetch "option" "IS_SOME_MAP", DB.fetch "option" "OPTION_MAP_COMPOSE", DB.fetch "option" "OPTION_MAP_EQ_NONE"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "option" "OPTION_MAP_CASE", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_ID", DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "SOME_SOME_APPLY", DB.fetch "option" "OPTION_APPLY_MAP2", DB.fetch "option" "option_case_SOME_ID", DB.fetch "option" "option_case_compute", combinTheory.o_ABS_L, combinTheory.o_ABS_R, combinTheory.C_ABS_L, combinTheory.S_ABS_L, combinTheory.S_ABS_R, DB.fetch "option" "option_case_def", combinTheory.o_THM, combinTheory.o_DEF] THENL
  [boolLib.ONCE_REWRITE_TAC [boolLib.GSYM (HolKernel.CONJUNCT1 (DB.fetch "option" "option_REP_ABS_DEF"))] THEN
  metisTools.METIS_TAC [DB.fetch "option" "option_REP_ABS_DEF", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "OPTION_MAP2_DEF", DB.fetch "option" "option_case_compute", DB.fetch "option" "SOME_SOME_APPLY", DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "OPTION_APPLY_MAP2", DB.fetch "option" "THE_DEF", DB.fetch "option" "SOME_DEF", DB.fetch "option" "tactictoe_thm_0", DB.fetch "option" "tactictoe_thm_1", DB.fetch "option" "NONE_DEF", DB.fetch "option" "OPTION_GUARD_COND", DB.fetch "option" "OPTION_GUARD_EQ_THM", DB.fetch "option" "OPTION_GUARD_def", DB.fetch "option" "option_TY_DEF"],
  metisTools.METIS_TAC [DB.fetch "option" "OPTION_APPLY_def", DB.fetch "option" "SOME_SOME_APPLY", DB.fetch "option" "OPTION_APPLY_MAP2", DB.fetch "option" "OPTION_MAP_DEF", DB.fetch "option" "option_Axiom", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "option_CLAUSES", DB.fetch "option" "option_case_def", DB.fetch "option" "option_nchotomy", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "IS_NONE_DEF", DB.fetch "option" "OPTION_JOIN_DEF"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037648

OPTION_APPLY_o
Statistics
  infstep : 425
  nodes   : 113
  maxdepth: 6
Time: 10.04783
  inferstep time: 9.103262
  node_find time: 0.063219
  node_crea time: 0.707062
    pred time: 0.269396
    thmpred time: 0.00003
    mc time: 0.255815
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.143958

OPTREL_MONO
proof length: 4
proof time: 0.097886
Statistics
  infstep : 58
  nodes   : 14
  maxdepth: 3
Time: 0.996789
  inferstep time: 0.850336
  node_find time: 0.006915
  node_crea time: 0.102419
    pred time: 0.041722
    thmpred time: 0.000001
    mc time: 0.03566
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "OPTREL_def", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, sumTheory.SUM_ALL_def, DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP2_THM", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_THM, combinTheory.FCOMM_DEF, combinTheory.C_DEF, combinTheory.C_ABS_L, DB.fetch "option" "OPTION_MAP2_SOME", combinTheory.LEFT_ID_DEF, combinTheory.RIGHT_ID_DEF] THEN boolLib.REPEAT boolLib.STRIP_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "option" "OPTREL_def", sumTheory.SUM_ALL_def, sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP2_cong", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_THM, combinTheory.C_DEF, combinTheory.FCOMM_DEF, combinTheory.C_ABS_L, DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", combinTheory.LEFT_ID_DEF],
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038203

OPTREL_refl
proof length: 2
proof time: 0.116202
Statistics
  infstep : 31
  nodes   : 5
  maxdepth: 2
Time: 0.534832
  inferstep time: 0.487768
  node_find time: 0.003958
  node_crea time: 0.02619
    pred time: 0.011634
    thmpred time: 0.000001
    mc time: 0.011565
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "OPTREL_def", DB.fetch "option" "OPTREL_MONO", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP2_SOME", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_THM, combinTheory.FCOMM_DEF, combinTheory.LEFT_ID_DEF, combinTheory.RIGHT_ID_DEF, combinTheory.W_THM, combinTheory.C_DEF, combinTheory.W_DEF, combinTheory.C_ABS_L] THEN metisTools.METIS_TAC [DB.fetch "option" "OPTREL_def", DB.fetch "option" "OPTION_MAP2_SOME", DB.fetch "option" "OPTION_MAP2_THM", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "OPTREL_MONO", combinTheory.ASSOC_DEF, combinTheory.ASSOC_SYM, combinTheory.COMM_DEF, combinTheory.C_THM, combinTheory.FCOMM_DEF, combinTheory.LEFT_ID_DEF, combinTheory.RIGHT_ID_DEF]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.162242

some_intro
proof length: 2
proof time: 0.062015
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.203934
  inferstep time: 0.176585
  node_find time: 0.00031
  node_crea time: 0.021472
    pred time: 0.006452
    thmpred time: 0.000001
    mc time: 0.015029
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "option" "some_def", DB.fetch "option" "option_induction", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "OPTREL_MONO", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, sumTheory.SUM_ALL_def, DB.fetch "option" "option_CLAUSES", DB.fetch "option" "IF_NONE_EQUALS_OPTION", DB.fetch "option" "IF_EQUALS_OPTION", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "NOT_SOME_NONE", DB.fetch "option" "OPTREL_def", DB.fetch "option" "option_case_def"] THEN metisTools.METIS_TAC [DB.fetch "option" "some_def", oneTheory.one_DEF, DB.fetch "option" "option_Axiom", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_induction", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "OPTREL_MONO", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, sumTheory.SUM_ALL_def, DB.fetch "option" "SOME_APPLY_PERMUTE", combinTheory.C_ABS_L, combinTheory.S_ABS_L, combinTheory.S_ABS_R, combinTheory.o_ABS_L, combinTheory.o_ABS_R]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039205

some_elim
proof length: 3
proof time: 0.174307
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.342759
  inferstep time: 0.318168
  node_find time: 0.000415
  node_crea time: 0.016249
    pred time: 0.007295
    thmpred time: 0.000001
    mc time: 0.009855
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "option" "some_intro", DB.fetch "option" "some_def", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_induction", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "OPTREL_MONO", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, sumTheory.SUM_ALL_def, DB.fetch "option" "OPTREL_def", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8] THEN (metisTools.METIS_TAC [DB.fetch "option" "some_intro", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_induction", DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "OPTREL_MONO", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_def, sumTheory.SUM_ALL_CONG, DB.fetch "option" "OPTREL_def", DB.fetch "option" "OPTION_BIND_EQUALS_OPTION", DB.fetch "option" "OPTION_IGNORE_BIND_EQUALS_OPTION", DB.fetch "option" "option_nchotomy", sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8, sumTheory.EXISTS_SUM])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.043563

some_F
proof length: 1
proof time: 0.002595
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.120363
  inferstep time: 0.111409
  node_find time: 0.000235
  node_crea time: 0.005288
    pred time: 0.002039
    thmpred time: 0.000001
    mc time: 0.003511
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "option" "some_def" , DB.fetch "option" "some_elim" , DB.fetch "option" "some_intro" , DB.fetch "option" "IS_NONE_DEF" , DB.fetch "option" "IS_SOME_DEF" , DB.fetch "option" "OPTION_GUARD_def" , DB.fetch "option" "option_CLAUSES" , satTheory.OR_DUAL2 , satTheory.OR_DUAL3 , satTheory.AND_INV , satTheory.EQF_Imp1 , satTheory.NOT_ELIM2 , satTheory.OR_DUAL , satTheory.AND_INV_IMP , satTheory.AND_INV2 , combinTheory.MONOID_DISJ_F ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.027853

some_EQ
proof length: 1
proof time: 0.002457
Statistics
  infstep : 4
  nodes   : 2
  maxdepth: 1
Time: 0.127674
  inferstep time: 0.114853
  node_find time: 0.000604
  node_crea time: 0.006464
    pred time: 0.002308
    thmpred time: 0.0
    mc time: 0.005084
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "option" "some_elim" , DB.fetch "option" "some_intro" , DB.fetch "option" "some_def" , DB.fetch "option" "some_F" , sumTheory.IS_SUM_REP , sumTheory.tactictoe_thm_8 , sumTheory.INR_DEF , sumTheory.tactictoe_thm_4 , sumTheory.tactictoe_thm_7 , sumTheory.INL_DEF , sumTheory.tactictoe_thm_2 , sumTheory.tactictoe_thm_6 , combinTheory.APPLY_UPDATE_THM , combinTheory.UPDATE_def , DB.fetch "option" "IF_EQUALS_OPTION" , DB.fetch "option" "OPTION_BIND_EQUALS_OPTION" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059148

OPTION_ALL_MONO
proof length: 2
proof time: 0.10177
Statistics
  infstep : 10
  nodes   : 4
  maxdepth: 2
Time: 0.334477
  inferstep time: 0.293572
  node_find time: 0.001504
  node_crea time: 0.026561
    pred time: 0.010834
    thmpred time: 0.000001
    mc time: 0.014213
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "option" "OPTION_ALL_def", sumTheory.SUM_ALL_MONO, sumTheory.SUM_ALL_CONG, DB.fetch "option" "FORALL_OPTION", DB.fetch "option" "EXISTS_OPTION", DB.fetch "option" "option_nchotomy", DB.fetch "option" "IS_SOME_EXISTS", DB.fetch "option" "option_Axiom", DB.fetch "option" "option_induction", DB.fetch "option" "SOME_11", DB.fetch "option" "NOT_NONE_SOME", DB.fetch "option" "IS_SOME_DEF", DB.fetch "option" "OPTION_BIND_cong", DB.fetch "option" "OPTION_BIND_def", DB.fetch "option" "OPTION_MAP2_cong", DB.fetch "option" "OPTION_MAP2_THM"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.174411

OPTION_ALL_CONG
proof length: 1
proof time: 0.009962
Statistics
  infstep : 22
  nodes   : 6
  maxdepth: 2
Time: 0.675031
  inferstep time: 0.617973
  node_find time: 0.002821
  node_crea time: 0.041201
    pred time: 0.015316
    thmpred time: 0.000002
    mc time: 0.017053
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC boolSimps.bool_ss [ DB.fetch "option" "OPTION_ALL_MONO" , DB.fetch "option" "OPTION_ALL_def" , sumTheory.SUM_ALL_MONO , sumTheory.SUM_ALL_CONG , DB.fetch "option" "FORALL_OPTION" , DB.fetch "option" "EXISTS_OPTION" , DB.fetch "option" "option_nchotomy" , DB.fetch "option" "IS_SOME_EXISTS" , DB.fetch "option" "OPTION_BIND_cong" , DB.fetch "option" "OPTION_MAP2_cong" , DB.fetch "option" "OPTION_MAP_CONG" , DB.fetch "option" "option_CLAUSES" , DB.fetch "option" "option_case_cong" , DB.fetch "option" "option_induction" , DB.fetch "option" "some_elim" , DB.fetch "option" "some_intro" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011389

datatype_option
proof length: 1
proof time: 0.000149
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.120198
  inferstep time: 0.109369
  node_find time: 0.000314
  node_crea time: 0.005906
    pred time: 0.00209
    thmpred time: 0.000001
    mc time: 0.004667
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ boolLib.DATATYPE_TAG_THM ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006856
Bad stac: 0
