Replaying proof: 0.000483

numeral_suc
proof length: 1
proof time: 0.001671
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.142286
  inferstep time: 0.109542
  node_find time: 0.000065
  node_crea time: 0.020695
    pred time: 0.005101
    thmpred time: 0.0
    mc time: 0.025331
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC BasicProvers.bool_ss [ ( DB.fetch "arithmetic" "NUMERAL_DEF" ) , ( DB.fetch "arithmetic" "BIT1" ) , ( DB.fetch "arithmetic" "BIT2" ) , ( DB.fetch "arithmetic" "ALT_ZERO" ) , ( DB.fetch "arithmetic" "ADD_CLAUSES" ) , ( DB.fetch "arithmetic" "SUB_MONO_EQ" ) , ( DB.fetch "arithmetic" "SUB_0" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008212

numeral_distrib
proof length: 5
proof time: 0.070043
Statistics
  infstep : 108
  nodes   : 62
  maxdepth: 5
Time: 4.245285
  inferstep time: 3.436648
  node_find time: 0.004561
  node_crea time: 0.713166
    pred time: 0.243181
    thmpred time: 0.000014
    mc time: 0.299781
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [arithmeticTheory.MODEQ_NUMERAL, arithmeticTheory.SUB_RIGHT_GREATER_EQ, arithmeticTheory.SUB_0, arithmeticTheory.ZERO_LESS_EQ, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.EVEN, arithmeticTheory.NUMERAL_MULT_EQ_DIV, arithmeticTheory.ODD, arithmeticTheory.SUB, arithmeticTheory.MULT, arithmeticTheory.ADD, arithmeticTheory.EXP, prim_recTheory.PRE, arithmeticTheory.ZERO_EXP, prim_recTheory.NOT_LESS_0] THEN boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "GREATER_EQ")] THEN
  simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0] THEN
  boolLib.REWRITE_TAC [arithmeticTheory.ZERO_LESS_EQ, arithmeticTheory.SUB_LEFT_GREATER, DB.fetch "numeral" "iZ", arithmeticTheory.NOT_GREATER, arithmeticTheory.GREATER_DEF, arithmeticTheory.EXISTS_GREATEST, arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.SUB_RIGHT_GREATER, arithmeticTheory.SUB_RIGHT_EQ, arithmeticTheory.SUB_LEFT_EQ, arithmeticTheory.SUB_LEFT_LESS_EQ, arithmeticTheory.LE, arithmeticTheory.tactictoe_thm_7, arithmeticTheory.tactictoe_thm_6, arithmeticTheory.LESS_EQ_0, arithmeticTheory.tactictoe_thm_17] THEN
  metisTools.METIS_TAC [arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.MOD_MOD, arithmeticTheory.SUB_RIGHT_GREATER_EQ, arithmeticTheory.SUB, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.MULT, arithmeticTheory.ADD, arithmeticTheory.EVEN, prim_recTheory.num_Axiom, arithmeticTheory.ODD, arithmeticTheory.EXP, numTheory.NOT_SUC, prim_recTheory.PRE_DEF, arithmeticTheory.num_CASES, arithmeticTheory.EXP_SUB]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.077017

numeral_iisuc
proof length: 6
proof time: 0.199309
Statistics
  infstep : 53
  nodes   : 14
  maxdepth: 3
Time: 1.022728
  inferstep time: 0.861766
  node_find time: 0.001515
  node_crea time: 0.124662
    pred time: 0.034522
    thmpred time: 0.000002
    mc time: 0.103974
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [boolLib.REWRITE_TAC [DB.fetch "numeral" "iiSUC", arithmeticTheory.TIMES2, arithmeticTheory.EVEN_EXISTS, arithmeticTheory.ODD_EXISTS, arithmeticTheory.TWO, arithmeticTheory.tactictoe_thm_4, arithmeticTheory.tactictoe_thm_5, arithmeticTheory.MOD_2, arithmeticTheory.DOUBLE_LT, arithmeticTheory.EXP2_LT, arithmeticTheory.EVEN_ODD_EXISTS, arithmeticTheory.tactictoe_thm_55, arithmeticTheory.tactictoe_thm_56, arithmeticTheory.tactictoe_thm_57, arithmeticTheory.DIV2_def, arithmeticTheory.findq_def] THEN
  metisTools.METIS_TAC [DB.fetch "numeral" "numeral_suc", arithmeticTheory.ODD_EXISTS, arithmeticTheory.TWO, arithmeticTheory.tactictoe_thm_4, arithmeticTheory.tactictoe_thm_5, arithmeticTheory.EXP2_LT, arithmeticTheory.EVEN_ODD_EXISTS, arithmeticTheory.ODD_DOUBLE, arithmeticTheory.TIMES2, arithmeticTheory.EVEN_EXISTS, arithmeticTheory.MOD_2, arithmeticTheory.DOUBLE_LT, arithmeticTheory.tactictoe_thm_55, arithmeticTheory.tactictoe_thm_56, arithmeticTheory.tactictoe_thm_57, arithmeticTheory.DIV2_def], simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "SUB_0")] THEN
  metisTools.METIS_TAC [DB.fetch "numeral" "iiSUC", arithmeticTheory.tactictoe_thm_45, arithmeticTheory.tactictoe_thm_47, arithmeticTheory.tactictoe_thm_48, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, arithmeticTheory.ADD_SUC, arithmeticTheory.SUC_ADD_SYM, arithmeticTheory.NOT_ODD_EQ_EVEN, arithmeticTheory.NOT_SUC_ADD_LESS_EQ, DB.fetch "numeral" "numeral_distrib", arithmeticTheory.TIMES2, arithmeticTheory.ADD_COMM, arithmeticTheory.LT_ADD_LCANCEL, arithmeticTheory.SUB_LEFT_ADD, arithmeticTheory.SUB_LEFT_LESS], metisTools.METIS_TAC [DB.fetch "numeral" "iiSUC", DB.fetch "numeral" "numeral_suc", arithmeticTheory.SUC_ELIM_NUMERALS, DB.fetch "numeral" "numeral_distrib", arithmeticTheory.BIT2, arithmeticTheory.EXP_SUB_NUMERAL, arithmeticTheory.MODEQ_NUMERAL, arithmeticTheory.NUMERAL_MULT_EQ_DIV, arithmeticTheory.EXP2_LT, arithmeticTheory.ODD_EXISTS, arithmeticTheory.EVEN_ODD_EXISTS, arithmeticTheory.ODD_DOUBLE, arithmeticTheory.TWO, arithmeticTheory.tactictoe_thm_4, arithmeticTheory.tactictoe_thm_5, arithmeticTheory.TIMES2]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004877

numeral_add
Statistics
  infstep : 465
  nodes   : 152
  maxdepth: 6
Time: 10.004717
  inferstep time: 7.602864
  node_find time: 0.032999
  node_crea time: 2.061335
    pred time: 0.664682
    thmpred time: 0.000029
    mc time: 1.067885
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063074
Replaying proof: 0.004457

numeral_eq
Statistics
  infstep : 657
  nodes   : 197
  maxdepth: 5
Time: 10.002702
  inferstep time: 7.734009
  node_find time: 0.064886
  node_crea time: 2.005134
    pred time: 0.484208
    thmpred time: 0.00003
    mc time: 1.241197
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.143095
Replaying proof: 0.001583
Replaying proof: 0.003309
Replaying proof: 0.000184

numeral_lt
Statistics
  infstep : 615
  nodes   : 163
  maxdepth: 5
Time: 10.016979
  inferstep time: 7.745402
  node_find time: 0.056342
  node_crea time: 1.919992
    pred time: 0.459341
    thmpred time: 0.000027
    mc time: 1.166129
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008362

numeral_lte
Statistics
  infstep : 541
  nodes   : 158
  maxdepth: 5
Time: 10.005192
  inferstep time: 7.907551
  node_find time: 0.056644
  node_crea time: 1.818884
    pred time: 0.595565
    thmpred time: 0.000028
    mc time: 0.773627
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046781

numeral_pre
proof length: 1
proof time: 0.007252
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 1
Time: 0.16672
  inferstep time: 0.142432
  node_find time: 0.000215
  node_crea time: 0.019062
    pred time: 0.005509
    thmpred time: 0.0
    mc time: 0.013229
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC boolSimps.bool_ss [ arithmeticTheory.NUMERAL_DEF , arithmeticTheory.GREATER_DEF , ( DB.fetch "numeral" "iZ" ) , arithmeticTheory.GREATER_OR_EQ , arithmeticTheory.LESS_OR_EQ , boolLib.EQ_IMP_THM , boolLib.DISJ_IMP_THM , arithmeticTheory.ADD_CLAUSES , arithmeticTheory.ALT_ZERO , arithmeticTheory.MULT_CLAUSES , arithmeticTheory.EXP , prim_recTheory.PRE , prim_recTheory.NOT_LESS_0 , arithmeticTheory.SUB_0 , arithmeticTheory.BIT1 , arithmeticTheory.BIT2 , arithmeticTheory.ODD , arithmeticTheory.EVEN ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012634
Replaying proof: 0.015015
Replaying proof: 0.001053
Replaying proof: 0.003167
Replaying proof: 0.000794

iSUB_THM
proof length: 3
proof time: 0.009412
Statistics
  infstep : 19
  nodes   : 9
  maxdepth: 3
Time: 0.727063
  inferstep time: 0.518818
  node_find time: 0.000971
  node_crea time: 0.163152
    pred time: 0.036621
    thmpred time: 0.000002
    mc time: 0.102436
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "iDUB", DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "numeral_lt", DB.fetch "numeral" "numeral_lte", DB.fetch "numeral" "numeral_eq", satTheory.EQT_Imp1, arithmeticTheory.EVEN, relationTheory.RUNIV, combinTheory.MONOID_CONJ_T, markerTheory.IfCases_def, DB.fetch "numeral" "numeral_add", arithmeticTheory.EXP_SUB_NUMERAL, DB.fetch "numeral" "bit_initiality", DB.fetch "numeral" "numeral_suc"] THEN boolLib.REWRITE_TAC [DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "iBIT_cases", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "numeral_lt", DB.fetch "numeral" "numeral_lte", DB.fetch "numeral" "numeral_eq", DB.fetch "numeral" "numeral_add", arithmeticTheory.EVEN, combinTheory.MONOID_CONJ_T, satTheory.EQT_Imp1, relationTheory.RUNIV, markerTheory.IfCases_def, DB.fetch "numeral" "bit_initiality", DB.fetch "numeral" "numeral_suc", arithmeticTheory.SUC_ELIM_NUMERALS] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009505
Replaying proof: 0.002833
Replaying proof: 0.000671
Replaying proof: 0.000283
Replaying proof: 0.044706

numeral_sub
proof length: 7
proof time: 0.273139
Statistics
  infstep : 229
  nodes   : 28
  maxdepth: 3
Time: 3.362204
  inferstep time: 2.970303
  node_find time: 0.012442
  node_crea time: 0.293115
    pred time: 0.13407
    thmpred time: 0.000009
    mc time: 0.150628
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "tactictoe_thm_27", DB.fetch "numeral" "iSUB_THM", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "tactictoe_thm_8", DB.fetch "numeral" "numeral_distrib", arithmeticTheory.SUB, arithmeticTheory.SUB_0, arithmeticTheory.EVEN, DB.fetch "numeral" "numeral_lt", DB.fetch "numeral" "numeral_lte", relationTheory.RUNIV, satTheory.EQT_Imp1, markerTheory.IfCases_def, combinTheory.MONOID_CONJ_T, arithmeticTheory.tactictoe_thm_59] THEN
  simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0], metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "tactictoe_thm_27", DB.fetch "numeral" "iSUB_THM", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "tactictoe_thm_8", DB.fetch "numeral" "numeral_distrib", arithmeticTheory.SUB, arithmeticTheory.SUB_0, arithmeticTheory.LESS_MONO_EQ, DB.fetch "numeral" "tactictoe_thm_2", DB.fetch "numeral" "tactictoe_thm_3", arithmeticTheory.LESS_NOT_SUC, prim_recTheory.LESS_MONO_EQ, arithmeticTheory.LESS_SUC_EQ_COR, DB.fetch "numeral" "tactictoe_thm_12"], simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, prim_recTheory.LESS_0, DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "tactictoe_thm_27", DB.fetch "numeral" "iSUB_THM", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "tactictoe_thm_8", DB.fetch "numeral" "numeral_distrib", arithmeticTheory.EVEN, DB.fetch "numeral" "numeral_lt", DB.fetch "numeral" "numeral_lte", relationTheory.RUNIV, satTheory.EQT_Imp1, markerTheory.IfCases_def, combinTheory.MONOID_CONJ_T, arithmeticTheory.tactictoe_thm_54], metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, arithmeticTheory.SUB_MONO_EQ, DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "tactictoe_thm_27", DB.fetch "numeral" "iSUB_THM", DB.fetch "numeral" "tactictoe_thm_7", DB.fetch "numeral" "tactictoe_thm_8", arithmeticTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, arithmeticTheory.LESS_MONO_REV, arithmeticTheory.SUB, arithmeticTheory.SUB_LEFT_SUC, arithmeticTheory.SUC_SUB1, arithmeticTheory.SUC_SUB]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010124

iDUB_removal
proof length: 2
proof time: 0.002066
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.277385
  inferstep time: 0.239279
  node_find time: 0.000254
  node_crea time: 0.027469
    pred time: 0.008066
    thmpred time: 0.000001
    mc time: 0.024264
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "numeral" "numeral_pre", DB.fetch "numeral" "iSUB_DEF", DB.fetch "numeral" "iSUB_THM", DB.fetch "numeral" "iDUB", DB.fetch "numeral" "bit_initiality", DB.fetch "numeral" "iBIT_cases", arithmeticTheory.SUC_ELIM_NUMERALS, DB.fetch "numeral" "numeral_eq", DB.fetch "numeral" "numeral_add", DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "numeral_lt", DB.fetch "numeral" "numeral_lte", DB.fetch "numeral" "numeral_suc", arithmeticTheory.EXP_SUB_NUMERAL, DB.fetch "numeral" "numeral_iisuc", DB.fetch "numeral" "bit_induction"] THEN simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.BIT1, arithmeticTheory.BIT2, (DB.fetch "numeral" "iZ"), (DB.fetch "numeral" "iiSUC"), arithmeticTheory.ADD_CLAUSES, prim_recTheory.INV_SUC_EQ, arithmeticTheory.ALT_ZERO]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007347

numeral_mult
Statistics
  infstep : 388
  nodes   : 171
  maxdepth: 6
Time: 10.086875
  inferstep time: 7.782106
  node_find time: 0.045423
  node_crea time: 1.965012
    pred time: 0.440704
    thmpred time: 0.00004
    mc time: 1.355889
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059788

numeral_exp
proof length: 6
proof time: 0.169887
Statistics
  infstep : 75
  nodes   : 25
  maxdepth: 4
Time: 1.713553
  inferstep time: 1.443633
  node_find time: 0.003913
  node_crea time: 0.203668
    pred time: 0.05538
    thmpred time: 0.000007
    mc time: 0.167193
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0] THEN boolLib.REPEAT boolLib.STRIP_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "numeral" "numeral_distrib", arithmeticTheory.EXP, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD_OR_EVEN, arithmeticTheory.SUB_LEFT_SUC, arithmeticTheory.MOD_ONE, arithmeticTheory.DIV_ONE, DB.fetch "numeral" "tactictoe_thm_14", DB.fetch "numeral" "tactictoe_thm_17", DB.fetch "numeral" "tactictoe_thm_20", DB.fetch "numeral" "tactictoe_thm_23", DB.fetch "numeral" "tactictoe_thm_26", arithmeticTheory.ONE, prim_recTheory.LESS_0_0, arithmeticTheory.EXP_SUB_NUMERAL],
  boolLib.REWRITE_TAC [DB.fetch "numeral" "iSQR", arithmeticTheory.ADD_CLAUSES, DB.fetch "numeral" "numeral_add", DB.fetch "numeral" "tactictoe_thm_0", DB.fetch "numeral" "tactictoe_thm_2", DB.fetch "numeral" "tactictoe_thm_3", arithmeticTheory.ADD, arithmeticTheory.ADD_SUC, DB.fetch "numeral" "tactictoe_thm_12", DB.fetch "numeral" "tactictoe_thm_16", DB.fetch "numeral" "numeral_distrib", arithmeticTheory.EXP, arithmeticTheory.EXP_BASE_MULT, arithmeticTheory.EXP_EXP_MULT, arithmeticTheory.EXP_ADD, arithmeticTheory.EXP_BASE_LE_IFF],
  boolLib.REWRITE_TAC [DB.fetch "numeral" "iSQR", DB.fetch "numeral" "tactictoe_thm_2", DB.fetch "numeral" "tactictoe_thm_3", DB.fetch "numeral" "tactictoe_thm_12", DB.fetch "numeral" "tactictoe_thm_16", arithmeticTheory.ADD_CLAUSES, DB.fetch "numeral" "numeral_add", DB.fetch "numeral" "tactictoe_thm_0", arithmeticTheory.ADD, arithmeticTheory.ADD_SUC, DB.fetch "numeral" "numeral_distrib", arithmeticTheory.EXP_ADD, arithmeticTheory.EXP, arithmeticTheory.EXP_BASE_MULT, arithmeticTheory.EXP_EXP_MULT, arithmeticTheory.EXP_BASE_LE_IFF] THEN
  metisTools.METIS_TAC [arithmeticTheory.EXP_BASE_MULT, arithmeticTheory.EXP_ADD, arithmeticTheory.MULT_ASSOC, DB.fetch "numeral" "numeral_distrib", arithmeticTheory.EXP_EXP_MULT, arithmeticTheory.EXP, arithmeticTheory.EXP_BASE_LE_IFF, arithmeticTheory.EXP_BASE_LE_MONO, arithmeticTheory.EXP_EQ_0, arithmeticTheory.EXP_EQ_1, arithmeticTheory.EXP_BASE_INJECTIVE, arithmeticTheory.EXP_BASE_LT_MONO, arithmeticTheory.EVEN_EXP_IFF, arithmeticTheory.ODD_EXP_IFF, arithmeticTheory.EXP_BASE_LEQ_MONO_IMP, arithmeticTheory.tactictoe_thm_27]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.060565

numeral_evenodd
proof length: 2
proof time: 0.00145
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.336288
  inferstep time: 0.280614
  node_find time: 0.000466
  node_crea time: 0.044788
    pred time: 0.011919
    thmpred time: 0.000001
    mc time: 0.035827
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0] THEN boolLib.REWRITE_TAC [DB.fetch "numeral" "numeral_distrib", arithmeticTheory.ODD, arithmeticTheory.EVEN, DB.fetch "numeral" "tactictoe_thm_2", DB.fetch "numeral" "tactictoe_thm_3", DB.fetch "numeral" "tactictoe_thm_12", DB.fetch "numeral" "tactictoe_thm_16", arithmeticTheory.EVEN_AND_ODD, arithmeticTheory.ODD_EVEN, arithmeticTheory.EVEN_ODD, arithmeticTheory.EVEN_ODD_EXISTS, arithmeticTheory.EVEN_OR_ODD, arithmeticTheory.ODD_ADD, arithmeticTheory.ODD_DOUBLE, arithmeticTheory.ODD_EXISTS, arithmeticTheory.ODD_EXP]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01206

numeral_fact
proof length: 5
proof time: 0.098276
Statistics
  infstep : 154
  nodes   : 36
  maxdepth: 4
Time: 2.548832
  inferstep time: 2.156245
  node_find time: 0.009319
  node_crea time: 0.321647
    pred time: 0.081491
    thmpred time: 0.000004
    mc time: 0.213144
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "FACT"), (DB.fetch "arithmetic" "ONE"), prim_recTheory.LESS_SUC_REFL] THEN
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [arithmeticTheory.FACT, arithmeticTheory.FACT_LESS, DB.fetch "numeral" "numeral_distrib", arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, DB.fetch "numeral" "tactictoe_thm_4", prim_recTheory.PRE, arithmeticTheory.PRE_ELIM_THM, prim_recTheory.PRIM_REC_EQN, prim_recTheory.PRE_DEF, arithmeticTheory.PRE_SUC_EQ, arithmeticTheory.SUC_PRE, arithmeticTheory.INV_PRE_EQ, arithmeticTheory.INV_PRE_LESS, arithmeticTheory.INV_PRE_LESS_EQ, arithmeticTheory.num_case_compute],
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, arithmeticTheory.FACT, arithmeticTheory.FACT_LESS, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "tactictoe_thm_4", arithmeticTheory.PRE_ELIM_THM, prim_recTheory.PRIM_REC_EQN, prim_recTheory.PRE_DEF, arithmeticTheory.PRE_SUC_EQ, prim_recTheory.PRE, arithmeticTheory.SUC_PRE, DB.fetch "numeral" "numeral_pre", arithmeticTheory.INV_PRE_EQ, prim_recTheory.PRIM_REC_FUN]]
end
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.132838

numeral_funpow
proof length: 3
proof time: 0.002105
Statistics
  infstep : 18
  nodes   : 10
  maxdepth: 3
Time: 0.957401
  inferstep time: 0.83036
  node_find time: 0.00108
  node_crea time: 0.079167
    pred time: 0.026891
    thmpred time: 0.000004
    mc time: 0.08104
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [arithmeticTheory.FUNPOW, arithmeticTheory.FUNPOW_0, DB.fetch "numeral" "numeral_fact", DB.fetch "numeral" "numeral_distrib", arithmeticTheory.FUNPOW_1, arithmeticTheory.FUNPOW_ADD, arithmeticTheory.FUNPOW_SUC, arithmeticTheory.SUC_ELIM_NUMERALS, arithmeticTheory.EXP_SUB_NUMERAL, arithmeticTheory.NUMERAL_MULT_EQ_DIV, arithmeticTheory.MODEQ_NUMERAL, DB.fetch "numeral" "numeral_pre", DB.fetch "numeral" "bit_initiality", DB.fetch "numeral" "iBIT_cases", DB.fetch "numeral" "bit_induction", DB.fetch "numeral" "iSUB_DEF"] THEN simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN
  boolLib.REWRITE_TAC [arithmeticTheory.FUNPOW_ADD, arithmeticTheory.FUNPOW, arithmeticTheory.FUNPOW_SUC, arithmeticTheory.FUNPOW_1, arithmeticTheory.FUNPOW_0, DB.fetch "numeral" "tactictoe_thm_2", DB.fetch "numeral" "tactictoe_thm_3", arithmeticTheory.ADD_CLAUSES, DB.fetch "numeral" "numeral_add", DB.fetch "numeral" "tactictoe_thm_0", arithmeticTheory.ADD, arithmeticTheory.DIVMOD_DEF, DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "tactictoe_thm_4", DB.fetch "numeral" "iDUB", arithmeticTheory.SUB_RIGHT_LESS]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.143441

numeral_MIN
proof length: 1
proof time: 0.002575
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.121985
  inferstep time: 0.108434
  node_find time: 0.000116
  node_crea time: 0.008994
    pred time: 0.002628
    thmpred time: 0.0
    mc time: 0.008689
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ arithmeticTheory.MIN_0 , arithmeticTheory.MIN_DEF , arithmeticTheory.MAX_DEF , arithmeticTheory.findq_def , arithmeticTheory.findq_thm , DB.fetch "numeral" "numeral_distrib" , arithmeticTheory.NUMERAL_MULT_EQ_DIV , arithmeticTheory.MODEQ_NUMERAL , arithmeticTheory.NUMERAL_DEF , arithmeticTheory.MIN_LT , arithmeticTheory.MIN_EQ_0 , arithmeticTheory.MIN_MAX_LT , arithmeticTheory.MIN_LE , arithmeticTheory.MIN_MAX_PRED , arithmeticTheory.MIN_ASSOC , arithmeticTheory.MIN_COMM ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026772

numeral_MAX
proof length: 1
proof time: 0.000195
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.269512
  inferstep time: 0.239689
  node_find time: 0.000372
  node_crea time: 0.024073
    pred time: 0.008207
    thmpred time: 0.000002
    mc time: 0.015908
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ arithmeticTheory.MAX_0 , DB.fetch "numeral" "numeral_MIN" , arithmeticTheory.MAX_DEF , arithmeticTheory.MIN_DEF , arithmeticTheory.findq_def , arithmeticTheory.findq_thm , DB.fetch "numeral" "numeral_distrib" , arithmeticTheory.NUMERAL_MULT_EQ_DIV , arithmeticTheory.MODEQ_NUMERAL , arithmeticTheory.NUMERAL_DEF , arithmeticTheory.MAX_LT , arithmeticTheory.MAX_EQ_0 , arithmeticTheory.MIN_MAX_LT , arithmeticTheory.MAX_LE , arithmeticTheory.MIN_MAX_PRED , arithmeticTheory.MAX_ASSOC ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035492

divmod_POS
proof length: 5
proof time: 0.137694
Statistics
  infstep : 36
  nodes   : 15
  maxdepth: 3
Time: 1.240735
  inferstep time: 0.98529
  node_find time: 0.002149
  node_crea time: 0.206463
    pred time: 0.070374
    thmpred time: 0.000002
    mc time: 0.138742
    inst time: 0.0
Proof found: BasicProvers.RW_TAC BasicProvers.bool_ss [] THENL [BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "DIVMOD_CORRECT"), (DB.fetch "arithmetic" "ADD_CLAUSES")] THENL
  [metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, arithmeticTheory.DIVMOD_CORRECT, arithmeticTheory.ADD_DIV_ADD_DIV, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, arithmeticTheory.DIV_LE_X, arithmeticTheory.X_LT_DIV, arithmeticTheory.DIV_P_UNIV, arithmeticTheory.DIVISION, arithmeticTheory.DIV_UNIQUE, arithmeticTheory.tactictoe_thm_15, arithmeticTheory.DIV_P, arithmeticTheory.DIV_SUB, arithmeticTheory.DIVMOD_CALC, arithmeticTheory.DIV_DIV_DIV_MULT, arithmeticTheory.DIV_MOD_MOD_DIV],
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, arithmeticTheory.DIVMOD_CORRECT, arithmeticTheory.MOD_SUB, arithmeticTheory.DIVMOD_CALC, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, arithmeticTheory.MOD_P_UNIV, arithmeticTheory.MOD_MULT_MOD, arithmeticTheory.SUB_MOD, arithmeticTheory.MOD_LESS, arithmeticTheory.LESS_MOD, arithmeticTheory.DIVISION, arithmeticTheory.MOD_UNIQUE, arithmeticTheory.MOD_TIMES, arithmeticTheory.tactictoe_thm_54, arithmeticTheory.MOD_PLUS]], metisTools.METIS_TAC [arithmeticTheory.DIVMOD_THM, arithmeticTheory.DIVMOD_DEF, arithmeticTheory.tactictoe_thm_11, arithmeticTheory.DIVMOD_CORRECT, arithmeticTheory.DIVMOD_CALC, arithmeticTheory.findq_divisor, arithmeticTheory.findq_thm, arithmeticTheory.findq_eq_0, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, arithmeticTheory.MOD_SUB, arithmeticTheory.DIV_SUB, arithmeticTheory.findq_def, arithmeticTheory.tactictoe_thm_58, pairTheory.pair_CASES, pairTheory.ABS_PAIR_THM]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006538

DIVMOD_NUMERAL_CALC
Statistics
  infstep : 1080
  nodes   : 201
  maxdepth: 7
Time: 10.006519
  inferstep time: 7.03788
  node_find time: 0.125357
  node_crea time: 2.643086
    pred time: 0.611934
    thmpred time: 0.000025
    mc time: 1.380948
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.126314

numeral_div2
Statistics
  infstep : 1613
  nodes   : 168
  maxdepth: 5
Time: 10.084994
  inferstep time: 7.338279
  node_find time: 0.204391
  node_crea time: 2.097059
    pred time: 0.512207
    thmpred time: 0.000021
    mc time: 1.260107
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.482043

texp_help_thm
Statistics
  infstep : 769
  nodes   : 161
  maxdepth: 6
Time: 10.053236
  inferstep time: 8.023419
  node_find time: 0.106082
  node_crea time: 1.740095
    pred time: 0.317297
    thmpred time: 0.000027
    mc time: 1.151609
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.222629

texp_help0
proof length: 2
proof time: 0.003689
Statistics
  infstep : 8
  nodes   : 4
  maxdepth: 2
Time: 0.394881
  inferstep time: 0.27495
  node_find time: 0.000751
  node_crea time: 0.082819
    pred time: 0.02752
    thmpred time: 0.000001
    mc time: 0.074252
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "numeral" "texp_help_thm", DB.fetch "numeral" "texp_help_def", arithmeticTheory.EXP2_LT, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, arithmeticTheory.DIV_LE_X, arithmeticTheory.X_LT_DIV, arithmeticTheory.LESS_ADD_1, arithmeticTheory.tactictoe_thm_10, arithmeticTheory.LE_LT1, arithmeticTheory.ADD1, arithmeticTheory.DOUBLE_LT, arithmeticTheory.MOD_2, arithmeticTheory.TWO, arithmeticTheory.tactictoe_thm_4, arithmeticTheory.tactictoe_thm_5] THEN BasicProvers.SRW_TAC [] [arithmeticTheory.EXP, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.ONE, arithmeticTheory.TWO, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.BIT2]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006595

numeral_texp_help
proof length: 5
proof time: 0.004598
Statistics
  infstep : 56
  nodes   : 25
  maxdepth: 4
Time: 2.183169
  inferstep time: 1.807137
  node_find time: 0.004829
  node_crea time: 0.320962
    pred time: 0.123151
    thmpred time: 0.000001
    mc time: 0.178854
    inst time: 0.0
Proof found: simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN BasicProvers.SRW_TAC [] [(DB.fetch "numeral" "texp_help_def")] THENL
  [simpLib.SIMP_TAC boolSimps.bool_ss ((DB.fetch "numeral" "tactictoe_thm_0") :: ([arithmeticTheory.BIT1, arithmeticTheory.BIT2, prim_recTheory.INV_SUC_EQ, arithmeticTheory.NUMERAL_DEF, ((DB.fetch "numeral" "iZ")), ((DB.fetch "numeral" "iiSUC")), arithmeticTheory.ADD_CLAUSES, numTheory.NOT_SUC, arithmeticTheory.SUC_NOT, prim_recTheory.LESS_0, prim_recTheory.NOT_LESS_0, arithmeticTheory.ALT_ZERO])),
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.BIT1, arithmeticTheory.BIT2, (DB.fetch "numeral" "iZ"), (DB.fetch "numeral" "iiSUC"), arithmeticTheory.ADD_CLAUSES, prim_recTheory.INV_SUC_EQ, arithmeticTheory.ALT_ZERO],
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.BIT1, arithmeticTheory.BIT2, (DB.fetch "numeral" "iZ"), (DB.fetch "numeral" "iiSUC"), arithmeticTheory.ADD_CLAUSES, prim_recTheory.INV_SUC_EQ, arithmeticTheory.ALT_ZERO]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006553

TWO_EXP_THM
proof length: 2
proof time: 0.008745
Statistics
  infstep : 304
  nodes   : 106
  maxdepth: 6
Time: 6.576542
  inferstep time: 5.416005
  node_find time: 0.034459
  node_crea time: 0.971778
    pred time: 0.265703
    thmpred time: 0.000017
    mc time: 0.577678
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "numeral" "numeral_texp_help", DB.fetch "numeral" "texp_help0", DB.fetch "numeral" "texp_help_thm", DB.fetch "numeral" "numeral_pre", arithmeticTheory.EXP2_LT, DB.fetch "numeral" "numeral_distrib", DB.fetch "numeral" "numeral_fact", DB.fetch "numeral" "numeral_funpow", DB.fetch "numeral" "texp_help_def", arithmeticTheory.EXP_SUB_NUMERAL, arithmeticTheory.SUC_ELIM_NUMERALS, DB.fetch "numeral" "numeral_div2", arithmeticTheory.NUMERAL_MULT_EQ_DIV, arithmeticTheory.MODEQ_NUMERAL, arithmeticTheory.MOD_2, arithmeticTheory.DOUBLE_LT] THEN simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.09633
Replaying proof: 0.002794
Replaying proof: 0.004187
Replaying proof: 0.00704
Replaying proof: 0.012215
Replaying proof: 0.002654

onecount_characterisation
Statistics
  infstep : 972
  nodes   : 175
  maxdepth: 5
Time: 10.039748
  inferstep time: 7.279165
  node_find time: 0.137399
  node_crea time: 2.186462
    pred time: 0.371825
    thmpred time: 0.000032
    mc time: 1.434361
    inst time: 0.0
Proof status: Time Out
Org tac number: 28
Original proof time: 0.0
Replaying proof: 0.826254
Replaying proof: 0.023049

DIV2_BIT1
Statistics
  infstep : 653
  nodes   : 149
  maxdepth: 6
Time: 10.073414
  inferstep time: 8.068404
  node_find time: 0.087669
  node_crea time: 1.714816
    pred time: 0.392232
    thmpred time: 0.00003
    mc time: 1.0979
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003623
Replaying proof: 0.001457
Replaying proof: 0.010492
Replaying proof: 0.000022
Replaying proof: 0.000022
Bad stac: 0
