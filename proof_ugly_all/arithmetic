
ONE
proof length: 1
proof time: 0.017481
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.046699
  inferstep time: 0.039609
  node_find time: 0.000026
  node_crea time: 0.005253
    pred time: 0.002086
    thmpred time: 0.0
    mc time: 0.004069
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "ALT_ZERO" , DB.fetch "arithmetic" "NUMERAL_DEF" , DB.fetch "arithmetic" "BIT2" , prim_recTheory.LESS_0_0 , prim_recTheory.num_Axiom , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "FUNPOW" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "NRC" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "num_case_def" , numTheory.NOT_SUC])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005524

TWO
proof length: 1
proof time: 0.022096
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.047439
  inferstep time: 0.039901
  node_find time: 0.000023
  node_crea time: 0.005616
    pred time: 0.002256
    thmpred time: 0.0
    mc time: 0.004443
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "NUMERAL_DEF" , DB.fetch "arithmetic" "ALT_ZERO" , prim_recTheory.num_Axiom , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "FUNPOW" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "NRC" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "num_case_def" , numTheory.INV_SUC])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007019

NORM_0
proof length: 1
proof time: 0.028506
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.0484
  inferstep time: 0.039779
  node_find time: 0.000023
  node_crea time: 0.00685
    pred time: 0.002827
    thmpred time: 0.0
    mc time: 0.00482
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "ALT_ZERO" , DB.fetch "arithmetic" "NUMERAL_DEF" , prim_recTheory.num_Axiom , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "FUNPOW" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "NRC" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "num_case_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002792

num_case_compute
proof length: 3
proof time: 0.1352
Statistics
  infstep : 17
  nodes   : 9
  maxdepth: 3
Time: 0.516981
  inferstep time: 0.450444
  node_find time: 0.00037
  node_crea time: 0.048189
    pred time: 0.020826
    thmpred time: 0.000001
    mc time: 0.034678
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "num_case_def", prim_recTheory.PRE, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.PRIM_REC_FUN, prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "SUB", relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18, relationTheory.tactictoe_thm_19, satTheory.dc_cond], metisTools.METIS_TAC [DB.fetch "arithmetic" "num_case_def", prim_recTheory.PRE, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.PRIM_REC_FUN, prim_recTheory.PRIM_REC, relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "SUB", relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18, relationTheory.tactictoe_thm_19]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040771

ADD_0
proof length: 3
proof time: 0.042621
Statistics
  infstep : 74
  nodes   : 20
  maxdepth: 3
Time: 1.080508
  inferstep time: 0.88894
  node_find time: 0.002272
  node_crea time: 0.176231
    pred time: 0.064569
    thmpred time: 0.000004
    mc time: 0.067654
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE, numTheory.NOT_SUC, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRIM_REC_THM, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "FUNPOW"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRIM_REC_THM, prim_recTheory.SIMP_REC_REL, prim_recTheory.num_Axiom, numTheory.NOT_SUC, DB.fetch "arithmetic" "EVEN"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026367

ADD_SUC
proof length: 3
proof time: 0.039126
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 2
Time: 0.342008
  inferstep time: 0.307253
  node_find time: 0.000201
  node_crea time: 0.024317
    pred time: 0.010758
    thmpred time: 0.000002
    mc time: 0.018614
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.NOT_SUC, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "ODD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.INV_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_THM, prim_recTheory.INV_SUC_EQ, prim_recTheory.LESS_DEF, prim_recTheory.LESS_LEMMA1, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.LESS_LEMMA2]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026724

ADD_CLAUSES
proof length: 3
proof time: 0.109751
Statistics
  infstep : 16
  nodes   : 5
  maxdepth: 2
Time: 0.369173
  inferstep time: 0.327064
  node_find time: 0.000365
  node_crea time: 0.026866
    pred time: 0.01272
    thmpred time: 0.000001
    mc time: 0.022271
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.SIMP_REC_REL, prim_recTheory.PRE_DEF, prim_recTheory.PRE, prim_recTheory.PRIM_REC_THM, prim_recTheory.num_Axiom, numTheory.NOT_SUC], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL, prim_recTheory.PRE_DEF, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRE, prim_recTheory.PRIM_REC_THM, prim_recTheory.num_Axiom, DB.fetch "arithmetic" "EVEN"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004374

ADD_SYM
proof length: 3
proof time: 0.066495
Statistics
  infstep : 11
  nodes   : 5
  maxdepth: 2
Time: 0.331434
  inferstep time: 0.302726
  node_find time: 0.000236
  node_crea time: 0.020481
    pred time: 0.008942
    thmpred time: 0.000002
    mc time: 0.014715
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.NOT_SUC, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "FUNPOW"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.INV_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_THM, prim_recTheory.INV_SUC_EQ, prim_recTheory.LESS_DEF, prim_recTheory.LESS_LEMMA1]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035306

ADD_ASSOC
proof length: 3
proof time: 0.067124
Statistics
  infstep : 13
  nodes   : 5
  maxdepth: 2
Time: 0.365625
  inferstep time: 0.335965
  node_find time: 0.000289
  node_crea time: 0.020745
    pred time: 0.009195
    thmpred time: 0.0
    mc time: 0.01493
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "MULT", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.NOT_SUC, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "SUB", numTheory.INV_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_THM, prim_recTheory.INV_SUC_EQ]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.057329

num_CASES
proof length: 3
proof time: 0.126052
Statistics
  infstep : 42
  nodes   : 8
  maxdepth: 2
Time: 0.540658
  inferstep time: 0.479282
  node_find time: 0.001045
  node_crea time: 0.050549
    pred time: 0.020458
    thmpred time: 0.000003
    mc time: 0.024712
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.num_Axiom, DB.fetch "arithmetic" "NRC", prim_recTheory.DC, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.num_Axiom_old, numTheory.NOT_SUC, DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "ODD"], metisTools.METIS_TAC [relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "NRC", prim_recTheory.DC, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_THM, prim_recTheory.SIMP_REC_THM]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.090621

NOT_ZERO_LT_ZERO
proof length: 1
proof time: 0.038318
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.083209
  inferstep time: 0.068383
  node_find time: 0.000033
  node_crea time: 0.006448
    pred time: 0.002309
    thmpred time: 0.0
    mc time: 0.011156
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [prim_recTheory.LESS_0 , prim_recTheory.LESS_0_0 , prim_recTheory.NOT_LESS_0 , DB.fetch "arithmetic" "SUB" , prim_recTheory.SIMP_REC_REL , prim_recTheory.LESS_DEF , prim_recTheory.LESS_NOT_EQ , prim_recTheory.LESS_SUC_IMP , prim_recTheory.NOT_LESS_EQ , prim_recTheory.LESS_REFL , prim_recTheory.LESS_THM , DB.fetch "arithmetic" "GREATER_DEF" , DB.fetch "arithmetic" "LESS_OR_EQ" , prim_recTheory.EQ_LESS , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.05931

NOT_LT_ZERO_EQ_ZERO
proof length: 1
proof time: 0.046924
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.074866
  inferstep time: 0.062296
  node_find time: 0.000044
  node_crea time: 0.009739
    pred time: 0.00402
    thmpred time: 0.000001
    mc time: 0.00673
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO" , prim_recTheory.LESS_0 , prim_recTheory.LESS_0_0 , prim_recTheory.NOT_LESS_0 , DB.fetch "arithmetic" "SUB" , prim_recTheory.SIMP_REC_REL , prim_recTheory.LESS_DEF , prim_recTheory.LESS_NOT_EQ , prim_recTheory.LESS_SUC_IMP , prim_recTheory.NOT_LESS_EQ , prim_recTheory.LESS_REFL , prim_recTheory.LESS_THM , DB.fetch "arithmetic" "GREATER_DEF" , DB.fetch "arithmetic" "LESS_OR_EQ" , prim_recTheory.EQ_LESS , prim_recTheory.LESS_LEMMA1])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00337

LESS_OR_EQ_ALT
proof length: 4
proof time: 0.009758
Statistics
  infstep : 225
  nodes   : 48
  maxdepth: 5
Time: 3.332376
  inferstep time: 2.922457
  node_find time: 0.009632
  node_crea time: 0.359237
    pred time: 0.151356
    thmpred time: 0.000006
    mc time: 0.144475
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [boolLib.FUN_EQ_THM] THEN boolLib.REWRITE_TAC [prim_recTheory.TC_IM_RTC_SUC, DB.fetch "arithmetic" "LESS_OR_EQ", prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.tactictoe_thm_2, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, prim_recTheory.PRE_DEF, prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, prim_recTheory.RTC_IM_TC, DB.fetch "arithmetic" "num_case_compute", pairTheory.ABS_REP_prod, pairTheory.COMMA_DEF, pairTheory.tactictoe_thm_0, pairTheory.prod_TY_DEF, combinTheory.APPLY_UPDATE_THM] THEN
  boolLib.REWRITE_TAC [relationTheory.RTC_CASES_TC, (DB.fetch "prim_rec" "INV_SUC_EQ")] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "relation" "RTC_RULES")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068001

LESS_ADD
proof length: 5
proof time: 0.128402
Statistics
  infstep : 51
  nodes   : 10
  maxdepth: 3
Time: 1.072303
  inferstep time: 0.97122
  node_find time: 0.001928
  node_crea time: 0.076769
    pred time: 0.032868
    thmpred time: 0.000003
    mc time: 0.039889
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "MULT", prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", prim_recTheory.LESS_DEF, prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1], let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_SUC", prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO_EQ, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, prim_recTheory.SUC_LESS]]
end]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.214046

transitive_LESS
proof length: 9
proof time: 0.064163
Statistics
  infstep : 464
  nodes   : 70
  maxdepth: 5
Time: 5.719514
  inferstep time: 5.028877
  node_find time: 0.030802
  node_crea time: 0.571686
    pred time: 0.218529
    thmpred time: 0.00001
    mc time: 0.207787
    inst time: 0.0
Proof found: boolLib.ASSUME_TAC (boolLib.SPEC_ALL (DB.fetch "relation" "TC_TRANSITIVE")) THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "relation" "transitive_def"), (DB.fetch "relation" "RC_DEF"), (DB.fetch "relation" "antisymmetric_def")] THEN
  INDUCT_TAC THENL
  [INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", prim_recTheory.NOT_LESS_0, prim_recTheory.LESS_DEF, prim_recTheory.SIMP_REC_REL_UNIQUE, prim_recTheory.LESS_SUC_SUC, DB.fetch "arithmetic" "LESS_ADD", prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC, prim_recTheory.LESS_MONO],
  metisTools.METIS_TAC [prim_recTheory.LESS_0, prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.LESS_0_0, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO_EQ, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", prim_recTheory.NOT_LESS_0, prim_recTheory.LESS_DEF, prim_recTheory.LESS_ALT, prim_recTheory.LESS_SUC_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1]],
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO_EQ, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", prim_recTheory.NOT_LESS_0, prim_recTheory.LESS_DEF, prim_recTheory.LESS_SUC_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2],
  metisTools.METIS_TAC [prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO_EQ, prim_recTheory.SIMP_REC_REL, prim_recTheory.LESS_ALT, prim_recTheory.LESS_DEF, DB.fetch "arithmetic" "SUB", prim_recTheory.LESS_SUC_SUC, prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC, prim_recTheory.LESS_SUC_IMP, prim_recTheory.LESS_THM, prim_recTheory.LESS_0]]]
end
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002789

LESS_TRANS
proof length: 4
proof time: 0.075853
Statistics
  infstep : 68
  nodes   : 23
  maxdepth: 3
Time: 1.899545
  inferstep time: 1.701228
  node_find time: 0.002909
  node_crea time: 0.152679
    pred time: 0.057712
    thmpred time: 0.000008
    mc time: 0.083629
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "LESS_ADD", prim_recTheory.LESS_DEF, prim_recTheory.EQ_LESS, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_NOT_EQ],
  metisTools.METIS_TAC [prim_recTheory.SUC_LESS, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO_EQ, relationTheory.tactictoe_thm_24, prim_recTheory.LESS_LEMMA1]]
end
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003427

LESS_ANTISYM
proof length: 1
proof time: 0.064043
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.067603
  inferstep time: 0.058832
  node_find time: 0.000034
  node_crea time: 0.006607
    pred time: 0.002567
    thmpred time: 0.000001
    mc time: 0.004576
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [prim_recTheory.LESS_DEF , prim_recTheory.LESS_NOT_EQ , prim_recTheory.LESS_SUC_IMP , prim_recTheory.NOT_LESS_EQ , DB.fetch "arithmetic" "LESS_TRANS" , DB.fetch "arithmetic" "SUB" , prim_recTheory.SIMP_REC_REL , prim_recTheory.LESS_THM , DB.fetch "arithmetic" "GREATER_DEF" , DB.fetch "arithmetic" "LESS_ADD" , DB.fetch "arithmetic" "LESS_OR_EQ" , prim_recTheory.EQ_LESS , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , prim_recTheory.LESS_MONO])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057369

LESS_EQ_MONO
proof length: 1
proof time: 0.000352
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.116878
  inferstep time: 0.108112
  node_find time: 0.00006
  node_crea time: 0.006237
    pred time: 0.002529
    thmpred time: 0.0
    mc time: 0.004757
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_SUC" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "LESS_MONO_EQ" , prim_recTheory.LESS_MONO_EQ , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "num_CASES" , numTheory.INV_SUC , prim_recTheory.EQ_LESS , prim_recTheory.LESS_THM , prim_recTheory.INV_SUC_EQ , prim_recTheory.LESS_DEF , prim_recTheory.LESS_LEMMA1 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008252

LESS_LESS_SUC
proof length: 7
proof time: 0.257247
Statistics
  infstep : 132
  nodes   : 30
  maxdepth: 5
Time: 2.69274
  inferstep time: 2.386969
  node_find time: 0.006642
  node_crea time: 0.252842
    pred time: 0.098897
    thmpred time: 0.000011
    mc time: 0.120515
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "LESS_ALT"), (DB.fetch "prim_rec" "TC_IM_RTC_SUC"), relationTheory.RTC_CASES_TC] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_2, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, pairTheory.LEX_DEF, prim_recTheory.RTC_IM_TC, pairTheory.ABS_REP_prod, pairTheory.COMMA_DEF, pairTheory.tactictoe_thm_0, pairTheory.prod_TY_DEF],
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.tactictoe_thm_1, prim_recTheory.tactictoe_thm_2, prim_recTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.PRE_DEF],
  boolLib.REWRITE_TAC [prim_recTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.PRE_DEF] THEN
  metisTools.METIS_TAC [prim_recTheory.tactictoe_thm_2, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, prim_recTheory.tactictoe_thm_1, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.PRE_DEF]]]
end
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063117

transitive_measure
proof length: 1
proof time: 0.032072
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.032329
  inferstep time: 0.024648
  node_find time: 0.000042
  node_crea time: 0.005641
    pred time: 0.002059
    thmpred time: 0.0
    mc time: 0.00417
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [prim_recTheory.measure_thm , prim_recTheory.WF_measure , prim_recTheory.measure_def , DB.fetch "arithmetic" "transitive_LESS" , relationTheory.RTC_lifts_reflexive_transitive_relations , relationTheory.TC_lifts_transitive_relations , relationTheory.tactictoe_thm_17 , relationTheory.tactictoe_thm_21 , relationTheory.tactictoe_thm_23 , relationTheory.tactictoe_thm_25 , relationTheory.tactictoe_thm_27 , relationTheory.transitive_inv_image , relationTheory.TC_TRANSITIVE , relationTheory.transitive_def , relationTheory.Order , relationTheory.PreOrder])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.054363

LESS_EQ
proof length: 2
proof time: 0.095769
Statistics
  infstep : 18
  nodes   : 7
  maxdepth: 2
Time: 0.736198
  inferstep time: 0.666038
  node_find time: 0.000708
  node_crea time: 0.062585
    pred time: 0.024598
    thmpred time: 0.000002
    mc time: 0.02165
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "SUB", prim_recTheory.EQ_LESS, prim_recTheory.LESS_THM, prim_recTheory.LESS_DEF, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP, prim_recTheory.SIMP_REC_REL, prim_recTheory.LESS_SUC, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00581

LESS_OR
proof length: 1
proof time: 0.030298
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.051185
  inferstep time: 0.031828
  node_find time: 0.000041
  node_crea time: 0.011655
    pred time: 0.002931
    thmpred time: 0.000001
    mc time: 0.010049
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "LESS_MONO_REV" , prim_recTheory.LESS_MONO_REV , prim_recTheory.EQ_LESS , prim_recTheory.LESS_DEF , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , prim_recTheory.LESS_MONO , prim_recTheory.LESS_SUC_IMP , prim_recTheory.SIMP_REC_REL , prim_recTheory.SUC_LESS , DB.fetch "arithmetic" "LESS_MONO_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005448

OR_LESS
proof length: 1
proof time: 0.027282
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.039608
  inferstep time: 0.024738
  node_find time: 0.000074
  node_crea time: 0.011371
    pred time: 0.004997
    thmpred time: 0.0
    mc time: 0.007555
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "LESS_MONO_REV" , prim_recTheory.LESS_MONO_REV , prim_recTheory.EQ_LESS , prim_recTheory.LESS_DEF , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , prim_recTheory.LESS_MONO , prim_recTheory.LESS_SUC_IMP , prim_recTheory.SIMP_REC_REL , prim_recTheory.SUC_LESS])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00499

LESS_EQ_IFF_LESS_SUC
proof length: 1
proof time: 0.050084
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.040568
  inferstep time: 0.032057
  node_find time: 0.000038
  node_crea time: 0.006182
    pred time: 0.002614
    thmpred time: 0.0
    mc time: 0.004558
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC_IMP , prim_recTheory.LESS_THM , prim_recTheory.LESS_SUC , DB.fetch "arithmetic" "LESS_LESS_SUC" , prim_recTheory.LESS_SUC_SUC , prim_recTheory.LESS_SUC_REFL , DB.fetch "arithmetic" "LESS_MONO_EQ" , prim_recTheory.LESS_DEF])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002997

LESS_EQ_IMP_LESS_SUC
proof length: 1
proof time: 0.018669
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.035954
  inferstep time: 0.027814
  node_find time: 0.000039
  node_crea time: 0.005969
    pred time: 0.002243
    thmpred time: 0.0
    mc time: 0.004486
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , prim_recTheory.LESS_SUC_IMP , prim_recTheory.LESS_THM , DB.fetch "arithmetic" "LESS_LESS_SUC" , prim_recTheory.LESS_SUC_SUC , prim_recTheory.LESS_SUC_REFL , prim_recTheory.LESS_DEF])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00486

ZERO_LESS_EQ
proof length: 2
proof time: 0.054121
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.215962
  inferstep time: 0.192298
  node_find time: 0.000137
  node_crea time: 0.011421
    pred time: 0.004782
    thmpred time: 0.000001
    mc time: 0.016277
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "LESS_OR_EQ_ALT"), prim_recTheory.LESS_ALT, prim_recTheory.RTC_IM_TC] THEN metisTools.METIS_TAC [prim_recTheory.TC_IM_RTC_SUC, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.tactictoe_thm_2, prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.RTC_IM_TC, prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, pairTheory.ABS_REP_prod, pairTheory.COMMA_DEF, pairTheory.tactictoe_thm_0, pairTheory.prod_TY_DEF, combinTheory.APPLY_UPDATE_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003171

LESS_SUC_EQ_COR
proof length: 1
proof time: 0.037339
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.069949
  inferstep time: 0.060423
  node_find time: 0.000039
  node_crea time: 0.007061
    pred time: 0.002844
    thmpred time: 0.0
    mc time: 0.005157
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [prim_recTheory.SUC_LESS , DB.fetch "arithmetic" "LESS_MONO_REV" , prim_recTheory.LESS_MONO_REV , prim_recTheory.LESS_MONO , DB.fetch "arithmetic" "LESS_MONO_EQ" , prim_recTheory.LESS_MONO_EQ , prim_recTheory.LESS_DEF , DB.fetch "arithmetic" "LESS_LESS_SUC" , prim_recTheory.LESS_SUC_IMP , prim_recTheory.SIMP_REC_REL , DB.fetch "arithmetic" "SUB" , prim_recTheory.EQ_LESS , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , DB.fetch "arithmetic" "LESS_OR"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.092366

LESS_NOT_SUC
proof length: 1
proof time: 0.042051
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.052851
  inferstep time: 0.043478
  node_find time: 0.000066
  node_crea time: 0.006538
    pred time: 0.002562
    thmpred time: 0.0
    mc time: 0.005378
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_SUC_EQ_COR" , prim_recTheory.SUC_LESS , DB.fetch "arithmetic" "LESS_MONO_REV" , prim_recTheory.LESS_MONO_REV , prim_recTheory.LESS_MONO , DB.fetch "arithmetic" "LESS_MONO_EQ" , prim_recTheory.LESS_MONO_EQ , prim_recTheory.LESS_DEF , DB.fetch "arithmetic" "LESS_LESS_SUC" , prim_recTheory.LESS_SUC_IMP , prim_recTheory.SIMP_REC_REL , DB.fetch "arithmetic" "SUB" , prim_recTheory.EQ_LESS , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.088465

LESS_0_CASES
proof length: 1
proof time: 0.032926
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.037578
  inferstep time: 0.029827
  node_find time: 0.000039
  node_crea time: 0.005787
    pred time: 0.002154
    thmpred time: 0.0
    mc time: 0.004245
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO" , prim_recTheory.LESS_0 , prim_recTheory.LESS_0_0 , DB.fetch "arithmetic" "num_CASES" , DB.fetch "arithmetic" "SUB" , prim_recTheory.SIMP_REC_REL , DB.fetch "arithmetic" "LESS_OR_EQ" , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_THM , prim_recTheory.NOT_LESS_0 , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_0" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "MULT"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.02658

LESS_CASES_IMP
proof length: 5
proof time: 0.120668
Statistics
  infstep : 20
  nodes   : 10
  maxdepth: 3
Time: 0.647692
  inferstep time: 0.550294
  node_find time: 0.000883
  node_crea time: 0.078021
    pred time: 0.03214
    thmpred time: 0.000001
    mc time: 0.045382
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_DEF, DB.fetch "arithmetic" "LESS_ANTISYM", DB.fetch "arithmetic" "LESS_LESS_SUC", prim_recTheory.LESS_NOT_EQ, prim_recTheory.LESS_SUC_IMP, prim_recTheory.NOT_LESS_EQ], let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.LESS_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_0_0, relationTheory.tactictoe_thm_24],
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, relationTheory.tactictoe_thm_24]]
end]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.069529

LESS_CASES
proof length: 3
proof time: 0.047453
Statistics
  infstep : 83
  nodes   : 37
  maxdepth: 4
Time: 2.4267
  inferstep time: 2.158824
  node_find time: 0.004497
  node_crea time: 0.239424
    pred time: 0.107761
    thmpred time: 0.000008
    mc time: 0.092049
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_MONO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "num_CASES", prim_recTheory.NOT_LESS_0], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.LESS_MONO_REV, prim_recTheory.LESS_MONO, DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.056835

ADD_INV_0
Statistics
  infstep : 928
  nodes   : 106
  maxdepth: 5
Time: 10.058626
  inferstep time: 8.995987
  node_find time: 0.075314
  node_crea time: 0.813178
    pred time: 0.296524
    thmpred time: 0.000023
    mc time: 0.317806
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036188

LESS_EQ_ADD
proof length: 3
proof time: 0.052015
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 2
Time: 0.24719
  inferstep time: 0.21738
  node_find time: 0.000392
  node_crea time: 0.020547
    pred time: 0.009338
    thmpred time: 0.000001
    mc time: 0.013937
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ADD_ASSOC"]]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.219033

LESS_EQ_ADD_EXISTS
proof length: 1
proof time: 0.085071
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.060254
  inferstep time: 0.051299
  node_find time: 0.000061
  node_crea time: 0.006219
    pred time: 0.002317
    thmpred time: 0.0
    mc time: 0.005135
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_ADD" , DB.fetch "arithmetic" "ADD_ASSOC" , DB.fetch "arithmetic" "ADD_INV_0" , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_COMM" , DB.fetch "arithmetic" "ADD_SYM" , DB.fetch "arithmetic" "ADD_SUC" , DB.fetch "arithmetic" "ADD_CLAUSES" , DB.fetch "arithmetic" "ADD_0" , DB.fetch "arithmetic" "BIT1"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.094456

LESS_STRONG_ADD
proof length: 3
proof time: 0.118126
Statistics
  infstep : 54
  nodes   : 21
  maxdepth: 4
Time: 1.281455
  inferstep time: 1.148716
  node_find time: 0.002843
  node_crea time: 0.109015
    pred time: 0.040567
    thmpred time: 0.000003
    mc time: 0.056053
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "LESS_EQ_ADD", prim_recTheory.SIMP_REC_REL], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_24, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.129992

LESS_EQ_SUC_REFL
proof length: 1
proof time: 0.019489
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.039563
  inferstep time: 0.030194
  node_find time: 0.000054
  node_crea time: 0.006468
    pred time: 0.002439
    thmpred time: 0.0
    mc time: 0.005289
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "ZERO_LESS_EQ" , prim_recTheory.TC_IM_RTC_SUC , DB.fetch "arithmetic" "LESS_MONO_EQ" , prim_recTheory.INV_SUC_EQ , prim_recTheory.LESS_SUC])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030154

LESS_ADD_NONZERO
proof length: 4
proof time: 0.097758
Statistics
  infstep : 108
  nodes   : 14
  maxdepth: 3
Time: 1.450077
  inferstep time: 1.305775
  node_find time: 0.006607
  node_crea time: 0.099706
    pred time: 0.041873
    thmpred time: 0.000002
    mc time: 0.050014
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_SUC"], boolLib.REPEAT boolLib.STRIP_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_24, prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "LESS_MONO_EQ"]]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.263128

NOT_SUC_LESS_EQ_0
proof length: 2
proof time: 0.043717
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.232517
  inferstep time: 0.208388
  node_find time: 0.000338
  node_crea time: 0.017081
    pred time: 0.007483
    thmpred time: 0.000001
    mc time: 0.011723
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "LESS_OR_EQ_ALT"), prim_recTheory.LESS_ALT, prim_recTheory.RTC_IM_TC] THEN metisTools.METIS_TAC [prim_recTheory.tactictoe_thm_0, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_2, prim_recTheory.tactictoe_thm_1, prim_recTheory.LESS_ALT, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.WF_PRED, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, prim_recTheory.RTC_IM_TC, pairTheory.ABS_REP_prod, pairTheory.COMMA_DEF, pairTheory.tactictoe_thm_0, pairTheory.prod_TY_DEF, combinTheory.UPDATE_def]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004016

NOT_LESS
proof length: 2
proof time: 0.042779
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.227521
  inferstep time: 0.204728
  node_find time: 0.000354
  node_crea time: 0.015313
    pred time: 0.006425
    thmpred time: 0.000001
    mc time: 0.011636
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "LESS_OR_EQ"), boolLib.DISJ_IMP_THM, boolLib.FORALL_AND_THM, (DB.fetch "arithmetic" "LESS_ADD")] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_OR_EQ", prim_recTheory.LESS_THM, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_CASES_IMP", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_DEF, prim_recTheory.LESS_NOT_EQ, prim_recTheory.LESS_SUC_IMP, prim_recTheory.NOT_LESS_EQ, DB.fetch "arithmetic" "LESS_ANTISYM", DB.fetch "arithmetic" "LESS_LESS_SUC", prim_recTheory.LESS_REFL, DB.fetch "arithmetic" "LESS_MONO_EQ"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.079382

NOT_LESS_EQUAL
proof length: 1
proof time: 0.045775
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.052845
  inferstep time: 0.043753
  node_find time: 0.000051
  node_crea time: 0.006583
    pred time: 0.002601
    thmpred time: 0.0
    mc time: 0.004793
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "ZERO_LESS_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "LESS_CASES_IMP"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003867

LESS_EQ_ANTISYM
proof length: 1
proof time: 0.018806
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.03351
  inferstep time: 0.024539
  node_find time: 0.000066
  node_crea time: 0.006405
    pred time: 0.002453
    thmpred time: 0.0
    mc time: 0.004996
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "ZERO_LESS_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059566

LESS_EQ_0
proof length: 1
proof time: 0.038355
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.052306
  inferstep time: 0.043801
  node_find time: 0.000059
  node_crea time: 0.00622
    pred time: 0.002464
    thmpred time: 0.000001
    mc time: 0.004314
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" , DB.fetch "arithmetic" "ZERO_LESS_EQ" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003168

SUB_0
proof length: 5
proof time: 0.0904
Statistics
  infstep : 514
  nodes   : 107
  maxdepth: 5
Time: 6.141102
  inferstep time: 5.160711
  node_find time: 0.043072
  node_crea time: 0.796514
    pred time: 0.254962
    thmpred time: 0.000009
    mc time: 0.321333
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", prim_recTheory.PRE, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRIM_REC_THM, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "num_CASES"] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", prim_recTheory.PRE, numTheory.NOT_SUC, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRIM_REC_THM, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_0_CASES"],
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", prim_recTheory.PRE, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", prim_recTheory.NOT_LESS_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM]]
end
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044868

SUB_MONO_EQ
proof length: 5
proof time: 0.065779
Statistics
  infstep : 18
  nodes   : 9
  maxdepth: 3
Time: 0.782713
  inferstep time: 0.691018
  node_find time: 0.00114
  node_crea time: 0.068693
    pred time: 0.036332
    thmpred time: 0.000002
    mc time: 0.036511
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "num_CASES", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.SIMP_REC_REL, prim_recTheory.PRE, prim_recTheory.PRIM_REC_THM] THEN
  metisTools.METIS_TAC [prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB"), prim_recTheory.NOT_LESS_0] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.103476

SUB_EQ_0
proof length: 4
proof time: 0.094927
Statistics
  infstep : 26
  nodes   : 8
  maxdepth: 3
Time: 0.868587
  inferstep time: 0.792891
  node_find time: 0.001737
  node_crea time: 0.049889
    pred time: 0.022468
    thmpred time: 0.000001
    mc time: 0.033983
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "NOT_LESS_EQUAL", DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_EQ_ANTISYM", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_SUC_REFL", DB.fetch "arithmetic" "ZERO_LESS_EQ"] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB_MONO_EQ", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "LESS_OR_EQ", prim_recTheory.LESS_THM, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_ADD_NONZERO", prim_recTheory.SIMP_REC_REL],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_THM, prim_recTheory.LESS_LEMMA1]]
end
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034634

ADD1
proof length: 1
proof time: 0.0229
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.039617
  inferstep time: 0.029818
  node_find time: 0.000059
  node_crea time: 0.007264
    pred time: 0.002987
    thmpred time: 0.0
    mc time: 0.005066
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "NORM_0" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "NUMERAL_DEF" , DB.fetch "arithmetic" "ALT_ZERO" , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_SUC" , DB.fetch "arithmetic" "ADD_CLAUSES" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "ADD_0" , DB.fetch "arithmetic" "ADD_ASSOC" , DB.fetch "arithmetic" "ADD_COMM" , DB.fetch "arithmetic" "ADD_SYM" , DB.fetch "arithmetic" "ADD_INV_0"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091039

SUC_SUB1
proof length: 1
proof time: 0.028363
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.046545
  inferstep time: 0.037813
  node_find time: 0.000058
  node_crea time: 0.006245
    pred time: 0.002532
    thmpred time: 0.000001
    mc time: 0.004639
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD1" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "SUB_MONO_EQ" , DB.fetch "arithmetic" "NORM_0" , DB.fetch "arithmetic" "SUB_0" , DB.fetch "arithmetic" "SUB_EQ_0" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "NUMERAL_DEF" , DB.fetch "arithmetic" "ALT_ZERO" , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "LESS_MONO_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "ADD_SUC"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.086971

PRE_SUB1
proof length: 3
proof time: 0.050288
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.230297
  inferstep time: 0.199488
  node_find time: 0.000379
  node_crea time: 0.021443
    pred time: 0.009656
    thmpred time: 0.000001
    mc time: 0.014691
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "BIT1", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUC_SUB1", prim_recTheory.PRE, DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "NORM_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "BIT1", prim_recTheory.PRIM_REC]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.066501

MULT_0
proof length: 3
proof time: 0.066708
Statistics
  infstep : 90
  nodes   : 13
  maxdepth: 3
Time: 1.115311
  inferstep time: 0.976324
  node_find time: 0.00613
  node_crea time: 0.094947
    pred time: 0.0344
    thmpred time: 0.000003
    mc time: 0.050834
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "LESS_ADD_NONZERO", numTheory.NOT_SUC, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "num_CASES", prim_recTheory.PRE], metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "num_CASES", prim_recTheory.PRE, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, prim_recTheory.SIMP_REC_THM, prim_recTheory.PRIM_REC_THM, prim_recTheory.SIMP_REC_REL, prim_recTheory.num_Axiom, numTheory.NOT_SUC, DB.fetch "arithmetic" "EVEN"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033598

MULT_SUC
Statistics
  infstep : 673
  nodes   : 108
  maxdepth: 5
Time: 10.0165
  inferstep time: 8.891796
  node_find time: 0.068725
  node_crea time: 0.863839
    pred time: 0.315432
    thmpred time: 0.000024
    mc time: 0.349633
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032156

MULT_LEFT_1
proof length: 2
proof time: 0.018284
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.155831
  inferstep time: 0.139021
  node_find time: 0.000211
  node_crea time: 0.011756
    pred time: 0.005075
    thmpred time: 0.0
    mc time: 0.008313
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "NUMERAL_DEF", DB.fetch "arithmetic" "ALT_ZERO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "num_CASES"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.042147

MULT_RIGHT_1
proof length: 3
proof time: 0.054572
Statistics
  infstep : 5
  nodes   : 5
  maxdepth: 2
Time: 0.201407
  inferstep time: 0.164736
  node_find time: 0.000369
  node_crea time: 0.027069
    pred time: 0.012875
    thmpred time: 0.0
    mc time: 0.016648
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ALT_ZERO", DB.fetch "arithmetic" "NUMERAL_DEF", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES"], metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "MULT_SUC", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "NUMERAL_DEF", DB.fetch "arithmetic" "ALT_ZERO", DB.fetch "arithmetic" "ADD_CLAUSES"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.073806

MULT_CLAUSES
proof length: 1
proof time: 0.000317
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.144411
  inferstep time: 0.113581
  node_find time: 0.000258
  node_crea time: 0.025617
    pred time: 0.010106
    thmpred time: 0.0
    mc time: 0.012186
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "MULT_SUC" , DB.fetch "arithmetic" "MULT_LEFT_1" , DB.fetch "arithmetic" "MULT_RIGHT_1" , DB.fetch "arithmetic" "MULT_0" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "ADD1" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "SUC_SUB1" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "PRE_SUB1" , DB.fetch "arithmetic" "BIT1" , DB.fetch "arithmetic" "NORM_0" , DB.fetch "arithmetic" "ALT_ZERO" , DB.fetch "arithmetic" "NUMERAL_DEF" , DB.fetch "arithmetic" "ADD" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007908

MULT_SYM
proof length: 4
proof time: 0.052124
Statistics
  infstep : 54
  nodes   : 15
  maxdepth: 3
Time: 1.153162
  inferstep time: 1.022877
  node_find time: 0.003623
  node_crea time: 0.094691
    pred time: 0.043352
    thmpred time: 0.000003
    mc time: 0.049914
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "MULT_LEFT_1", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", numTheory.NOT_SUC, DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_SUC", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", prim_recTheory.TC_IM_RTC_SUC] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_NONZERO"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.053433

RIGHT_ADD_DISTRIB
proof length: 5
proof time: 0.069964
Statistics
  infstep : 52
  nodes   : 10
  maxdepth: 4
Time: 1.086292
  inferstep time: 0.979729
  node_find time: 0.004001
  node_crea time: 0.067963
    pred time: 0.02614
    thmpred time: 0.000001
    mc time: 0.048189
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_INV_0"], boolLib.REPEAT boolLib.STRIP_TAC THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), boolLib.SPECL [(Parse.Term [HolKernel.QUOTE " (*#loc 1 16967*)m*n"]), (Parse.Term [HolKernel.QUOTE " (*#loc 1 16977*)n:num"])] (DB.fetch "arithmetic" "ADD_COMM")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"]]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.259749

LEFT_ADD_DISTRIB
proof length: 1
proof time: 0.041834
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.059822
  inferstep time: 0.049795
  node_find time: 0.000094
  node_crea time: 0.00672
    pred time: 0.00257
    thmpred time: 0.0
    mc time: 0.004869
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "MULT_SUC" , DB.fetch "arithmetic" "MULT_COMM" , DB.fetch "arithmetic" "MULT_SYM" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "MULT_0" , DB.fetch "arithmetic" "MULT_RIGHT_1" , DB.fetch "arithmetic" "ADD_ASSOC" , DB.fetch "arithmetic" "LESS_ADD" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "ADD_COMM" , DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_SYM" , DB.fetch "arithmetic" "ADD_INV_0"])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.204788

MULT_ASSOC
proof length: 3
proof time: 0.127348
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.257051
  inferstep time: 0.229424
  node_find time: 0.00027
  node_crea time: 0.01825
    pred time: 0.007969
    thmpred time: 0.000001
    mc time: 0.013608
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_TRANS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046352

SUB_ADD
proof length: 8
proof time: 0.210921
Statistics
  infstep : 350
  nodes   : 65
  maxdepth: 5
Time: 5.893964
  inferstep time: 4.999018
  node_find time: 0.040472
  node_crea time: 0.715031
    pred time: 0.278963
    thmpred time: 0.000024
    mc time: 0.277896
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_OR_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_0"), (DB.fetch "arithmetic" "ZERO_LESS_EQ")] THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT"], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS"] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ADD_ASSOC")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", relationTheory.tactictoe_thm_24]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034851

PRE_SUB
proof length: 6
proof time: 0.086943
Statistics
  infstep : 496
  nodes   : 91
  maxdepth: 5
Time: 8.025749
  inferstep time: 7.092252
  node_find time: 0.055564
  node_crea time: 0.6729
    pred time: 0.261111
    thmpred time: 0.000021
    mc time: 0.318083
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB_EQ_0", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_FUN, prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "num_CASES", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES"], metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", relationTheory.tactictoe_thm_24, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "num_case_compute", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", prim_recTheory.PRIM_REC_FUN, DB.fetch "arithmetic" "SUB_ADD", prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "num_CASES", prim_recTheory.num_Axiom], metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "PRE_SUB1", relationTheory.tactictoe_thm_24, prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "SUB_ADD", prim_recTheory.PRIM_REC_FUN, DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "ADD_CLAUSES"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB"), prim_recTheory.NOT_LESS_0] THEN
  metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB_ADD", relationTheory.tactictoe_thm_24, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "SUC_SUB1", prim_recTheory.PRIM_REC, prim_recTheory.PRIM_REC_FUN, prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.157325

ADD_EQ_0
proof length: 4
proof time: 0.083836
Statistics
  infstep : 56
  nodes   : 14
  maxdepth: 3
Time: 1.520978
  inferstep time: 1.397617
  node_find time: 0.004604
  node_crea time: 0.085208
    pred time: 0.034578
    thmpred time: 0.000008
    mc time: 0.048509
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB"],
  boolLib.REWRITE_TAC [numTheory.NOT_SUC, (DB.fetch "arithmetic" "ADD_CLAUSES")]]
end
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059043

ADD_EQ_1
Statistics
  infstep : 621
  nodes   : 119
  maxdepth: 5
Time: 10.012017
  inferstep time: 8.651792
  node_find time: 0.077601
  node_crea time: 1.061442
    pred time: 0.342699
    thmpred time: 0.000027
    mc time: 0.431447
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.044391

ADD_INV_0_EQ
proof length: 3
proof time: 0.221502
Statistics
  infstep : 5
  nodes   : 5
  maxdepth: 2
Time: 0.349956
  inferstep time: 0.302015
  node_find time: 0.000446
  node_crea time: 0.030448
    pred time: 0.016634
    thmpred time: 0.000001
    mc time: 0.023122
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "ADD1"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.126629

PRE_SUC_EQ
proof length: 5
proof time: 0.288154
Statistics
  infstep : 56
  nodes   : 19
  maxdepth: 3
Time: 1.272479
  inferstep time: 1.042365
  node_find time: 0.005279
  node_crea time: 0.177623
    pred time: 0.075372
    thmpred time: 0.000008
    mc time: 0.085989
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.PRE, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_FUN, DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", prim_recTheory.PRIM_REC], metisTools.METIS_TAC [prim_recTheory.LESS_0, prim_recTheory.PRE, prim_recTheory.LESS_0_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE"], metisTools.METIS_TAC [prim_recTheory.PRE, prim_recTheory.LESS_SUC_SUC, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO"], metisTools.METIS_TAC [prim_recTheory.LESS_0, prim_recTheory.PRE, prim_recTheory.LESS_SUC_SUC, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059719

INV_PRE_EQ
proof length: 1
proof time: 0.082869
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.105283
  inferstep time: 0.092769
  node_find time: 0.000084
  node_crea time: 0.008436
    pred time: 0.002855
    thmpred time: 0.0
    mc time: 0.007224
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "PRE_SUC_EQ" , DB.fetch "arithmetic" "LESS_0_CASES" , DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO" , prim_recTheory.PRIM_REC_EQN , prim_recTheory.PRE_DEF , DB.fetch "arithmetic" "num_case_compute" , DB.fetch "arithmetic" "PRE_SUB" , DB.fetch "arithmetic" "PRE_SUB1" , prim_recTheory.PRIM_REC , prim_recTheory.PRIM_REC_FUN , prim_recTheory.LESS_0 , prim_recTheory.LESS_0_0 , prim_recTheory.PRE , prim_recTheory.SIMP_REC_REL , DB.fetch "arithmetic" "SUB"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065692

LESS_SUC_NOT
proof length: 1
proof time: 0.022792
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.047017
  inferstep time: 0.032216
  node_find time: 0.000084
  node_crea time: 0.008602
    pred time: 0.002956
    thmpred time: 0.0
    mc time: 0.008689
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [prim_recTheory.LESS_SUC_IMP , DB.fetch "arithmetic" "LESS_LESS_SUC" , prim_recTheory.LESS_LEMMA1 , prim_recTheory.LESS_LEMMA2 , prim_recTheory.LESS_SUC , prim_recTheory.LESS_THM , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , prim_recTheory.LESS_SUC_SUC , prim_recTheory.LESS_SUC_REFL , prim_recTheory.LESS_DEF , DB.fetch "arithmetic" "LESS_NOT_SUC" , DB.fetch "arithmetic" "LESS_SUC_EQ_COR" , prim_recTheory.LESS_MONO , DB.fetch "arithmetic" "LESS_MONO_REV" , prim_recTheory.LESS_MONO_REV])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.118681

ADD_EQ_SUB
proof length: 12
proof time: 0.51318
Statistics
  infstep : 51
  nodes   : 22
  maxdepth: 3
Time: 2.0103
  inferstep time: 1.745695
  node_find time: 0.005107
  node_crea time: 0.193462
    pred time: 0.075477
    thmpred time: 0.000007
    mc time: 0.100671
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", prim_recTheory.NOT_LESS_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB_ADD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", prim_recTheory.NOT_LESS_0, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB_ADD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065426

LESS_MONO_ADD
Statistics
  infstep : 575
  nodes   : 122
  maxdepth: 5
Time: 10.013043
  inferstep time: 8.587893
  node_find time: 0.080399
  node_crea time: 1.103722
    pred time: 0.411849
    thmpred time: 0.000029
    mc time: 0.428465
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.155849

LESS_MONO_ADD_INV
Statistics
  infstep : 489
  nodes   : 114
  maxdepth: 5
Time: 10.009424
  inferstep time: 8.691343
  node_find time: 0.067242
  node_crea time: 1.068291
    pred time: 0.414236
    thmpred time: 0.000026
    mc time: 0.404774
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.118113

LESS_MONO_ADD_EQ
proof length: 3
proof time: 0.083835
Statistics
  infstep : 59
  nodes   : 20
  maxdepth: 4
Time: 1.570376
  inferstep time: 1.351972
  node_find time: 0.006145
  node_crea time: 0.1791
    pred time: 0.084591
    thmpred time: 0.000003
    mc time: 0.06862
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN boolLib.GEN_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_MONO_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD_INV", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.055145

EQ_MONO_ADD_EQ
proof length: 11
proof time: 0.319422
Statistics
  infstep : 345
  nodes   : 57
  maxdepth: 4
Time: 6.396662
  inferstep time: 5.732123
  node_find time: 0.041336
  node_crea time: 0.437748
    pred time: 0.172948
    thmpred time: 0.00002
    mc time: 0.208774
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "ADD_COMM"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "LT_ADD_LCANCEL", DB.fetch "arithmetic" "LT_ADD_RCANCEL"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "LT_ADD_LCANCEL", DB.fetch "arithmetic" "LT_ADD_RCANCEL", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_MONO_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD_INV", DB.fetch "arithmetic" "ADD_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "LT_ADD_LCANCEL", DB.fetch "arithmetic" "LT_ADD_RCANCEL", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_MONO_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD_INV", DB.fetch "arithmetic" "ADD_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.086106

LESS_EQ_MONO_ADD_EQ
proof length: 9
proof time: 0.31907
Statistics
  infstep : 12
  nodes   : 11
  maxdepth: 2
Time: 0.777016
  inferstep time: 0.644194
  node_find time: 0.001283
  node_crea time: 0.071763
    pred time: 0.037695
    thmpred time: 0.000004
    mc time: 0.067464
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "NOT_LESS_EQUAL"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_OR_EQ_ALT", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_SUC_REFL"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.093292

LESS_EQ_TRANS
proof length: 9
proof time: 0.239474
Statistics
  infstep : 12
  nodes   : 11
  maxdepth: 2
Time: 0.625645
  inferstep time: 0.504807
  node_find time: 0.001317
  node_crea time: 0.073256
    pred time: 0.034034
    thmpred time: 0.000007
    mc time: 0.052406
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_ANTISYM", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_CASES"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004376

LESS_EQ_LESS_TRANS
proof length: 1
proof time: 0.006065
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.134054
  inferstep time: 0.123397
  node_find time: 0.00019
  node_crea time: 0.00714
    pred time: 0.002748
    thmpred time: 0.000001
    mc time: 0.005044
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "SUB_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.121619

LESS_LESS_EQ_TRANS
proof length: 1
proof time: 0.01234
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.137925
  inferstep time: 0.126529
  node_find time: 0.000212
  node_crea time: 0.007568
    pred time: 0.002888
    thmpred time: 0.0
    mc time: 0.005052
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "SUB_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_ADD" ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.109975
Replaying proof: 0.000335

LESS_EQ_REFL
proof length: 1
proof time: 0.03748
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.056442
  inferstep time: 0.047527
  node_find time: 0.00009
  node_crea time: 0.006296
    pred time: 0.002474
    thmpred time: 0.000001
    mc time: 0.004099
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_LESS_EQ_TRANS" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "SUB_ADD"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040536

LESS_IMP_LESS_OR_EQ
proof length: 1
proof time: 0.041176
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.062825
  inferstep time: 0.053001
  node_find time: 0.000109
  node_crea time: 0.006835
    pred time: 0.002454
    thmpred time: 0.0
    mc time: 0.004972
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.042777

LESS_MONO_MULT
Statistics
  infstep : 572
  nodes   : 106
  maxdepth: 5
Time: 10.002168
  inferstep time: 8.817867
  node_find time: 0.081425
  node_crea time: 0.847834
    pred time: 0.321447
    thmpred time: 0.000032
    mc time: 0.327313
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.186935

LESS_MONO_MULT2
Statistics
  infstep : 448
  nodes   : 125
  maxdepth: 5
Time: 10.013133
  inferstep time: 8.470615
  node_find time: 0.068804
  node_crea time: 1.147544
    pred time: 0.365548
    thmpred time: 0.000029
    mc time: 0.530209
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007962
Replaying proof: 0.000413

LEFT_SUB_DISTRIB
proof length: 3
proof time: 0.081047
Statistics
  infstep : 73
  nodes   : 30
  maxdepth: 4
Time: 1.974951
  inferstep time: 1.614712
  node_find time: 0.008704
  node_crea time: 0.2375
    pred time: 0.102954
    thmpred time: 0.00001
    mc time: 0.126094
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_RIGHT_1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "EXP"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.042381

LESS_ADD_1
proof length: 4
proof time: 0.074673
Statistics
  infstep : 16
  nodes   : 9
  maxdepth: 3
Time: 0.58753
  inferstep time: 0.497532
  node_find time: 0.001854
  node_crea time: 0.059293
    pred time: 0.024211
    thmpred time: 0.000001
    mc time: 0.041181
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD1", prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ALT_ZERO", DB.fetch "arithmetic" "NUMERAL_DEF", DB.fetch "arithmetic" "LESS_ADD"], boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "ONE"), (DB.fetch "arithmetic" "ADD_CLAUSES")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_24, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP, prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_SUC_NOT", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_LESS_SUC", prim_recTheory.LESS_SUC_SUC, prim_recTheory.LESS_SUC_REFL, DB.fetch "arithmetic" "LESS_ADD"]]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.232828

EXP_ADD
proof length: 10
proof time: 0.247068
Statistics
  infstep : 346
  nodes   : 49
  maxdepth: 4
Time: 4.736044
  inferstep time: 4.177157
  node_find time: 0.040741
  node_crea time: 0.335295
    pred time: 0.131855
    thmpred time: 0.000005
    mc time: 0.162039
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "MULT_SYM"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "LESS_MONO_MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "MULT_SYM", DB.fetch "arithmetic" "LESS_MONO_MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_LEFT_1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_COMM"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_LEFT_1"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "ADD_ASSOC"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.03285

NOT_ODD_EQ_EVEN
proof length: 5
proof time: 0.089641
Statistics
  infstep : 395
  nodes   : 64
  maxdepth: 4
Time: 6.140222
  inferstep time: 5.346307
  node_find time: 0.053107
  node_crea time: 0.536762
    pred time: 0.208308
    thmpred time: 0.00002
    mc time: 0.208434
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [numTheory.NOT_SUC, (DB.fetch "arithmetic" "ADD_CLAUSES")], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.08716

LESS_EQUAL_ANTISYM
proof length: 1
proof time: 0.067584
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.088437
  inferstep time: 0.077614
  node_find time: 0.000117
  node_crea time: 0.007713
    pred time: 0.002723
    thmpred time: 0.0
    mc time: 0.005
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_MONO_MULT2" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "LESS_MONO_MULT" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_IMP_LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.072392

LESS_ADD_SUC
proof length: 3
proof time: 0.084429
Statistics
  infstep : 31
  nodes   : 9
  maxdepth: 2
Time: 0.694912
  inferstep time: 0.622136
  node_find time: 0.003329
  node_crea time: 0.047501
    pred time: 0.019405
    thmpred time: 0.000002
    mc time: 0.026612
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.LESS_0, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ADD_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_MONO, prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "ADD1"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.101764

LESS_OR_EQ_ADD
proof length: 7
proof time: 0.202758
Statistics
  infstep : 71
  nodes   : 17
  maxdepth: 3
Time: 1.473369
  inferstep time: 1.247709
  node_find time: 0.010678
  node_crea time: 0.149123
    pred time: 0.059975
    thmpred time: 0.000004
    mc time: 0.083225
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "LT_ADD_LCANCEL"],
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"]]
end, let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ"]]
end]
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.273661
Replaying proof: 0.000394

WOP
proof length: 1
proof time: 0.030078
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.067436
  inferstep time: 0.055857
  node_find time: 0.000113
  node_crea time: 0.008048
    pred time: 0.002735
    thmpred time: 0.0
    mc time: 0.005915
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_1" , prim_recTheory.LESS_DEF , DB.fetch "arithmetic" "LESS_ADD" , DB.fetch "arithmetic" "LESS_ADD_1" , DB.fetch "arithmetic" "LESS_STRONG_ADD" , DB.fetch "arithmetic" "LESS_OR_EQ_ADD" , DB.fetch "arithmetic" "LESS_CASES_IMP" , DB.fetch "arithmetic" "LESS_NOT_SUC" , DB.fetch "arithmetic" "LESS_SUC_EQ_COR" , DB.fetch "arithmetic" "LESS_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_LESS_SUC" , DB.fetch "arithmetic" "LESS_SUC_NOT" , prim_recTheory.LESS_NOT_EQ , prim_recTheory.LESS_SUC_IMP , prim_recTheory.NOT_LESS_EQ])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.196266
Replaying proof: 0.000256

FORALL_NUM_THM
proof length: 4
proof time: 0.169612
Statistics
  infstep : 467
  nodes   : 61
  maxdepth: 4
Time: 5.136748
  inferstep time: 4.258501
  node_find time: 0.063844
  node_crea time: 0.596797
    pred time: 0.207145
    thmpred time: 0.000025
    mc time: 0.196185
    inst time: 0.0
Proof found: boolLib.EQ_TAC THENL [metisTools.METIS_TAC [prim_recTheory.DC, numTheory.INDUCTION, prim_recTheory.SIMP_REC_REL, prim_recTheory.num_Axiom, prim_recTheory.num_Axiom_old, prim_recTheory.LESS_DEF, prim_recTheory.wellfounded_def, DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "num_case_def", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ODD"], boolLib.STRIP_TAC THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, prim_recTheory.DC, numTheory.INDUCTION, prim_recTheory.SIMP_REC_REL, numTheory.tactictoe_thm_17, prim_recTheory.num_Axiom, prim_recTheory.num_Axiom_old]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.021692

SUC_SUB
proof length: 3
proof time: 0.126646
Statistics
  infstep : 53
  nodes   : 17
  maxdepth: 3
Time: 1.576261
  inferstep time: 1.403404
  node_find time: 0.006337
  node_crea time: 0.132408
    pred time: 0.05322
    thmpred time: 0.000004
    mc time: 0.057414
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "BIT2", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "SUB"], metisTools.METIS_TAC [prim_recTheory.LESS_SUC_SUC, DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_ADD_1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "NORM_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.038044

SUB_PLUS
proof length: 9
proof time: 0.251292
Statistics
  infstep : 20
  nodes   : 12
  maxdepth: 2
Time: 0.841758
  inferstep time: 0.693995
  node_find time: 0.003094
  node_crea time: 0.077243
    pred time: 0.031847
    thmpred time: 0.000006
    mc time: 0.074449
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", relationTheory.tactictoe_thm_24, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPD11_SAME_BASE, combinTheory.UPD11_SAME_KEY_AND_BASE, combinTheory.UPDATE_COMMUTES, combinTheory.UPDATE_EQ, combinTheory.UPD_SAME_KEY_UNWIND, pairTheory.LEX_CONG, pairTheory.LEX_DEF_THM, DB.fetch "arithmetic" "ADD_EQ_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", relationTheory.tactictoe_thm_24, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPD11_SAME_BASE, combinTheory.UPD11_SAME_KEY_AND_BASE, combinTheory.UPDATE_COMMUTES, combinTheory.UPDATE_EQ, combinTheory.UPD_SAME_KEY_UNWIND, pairTheory.LEX_CONG, pairTheory.LEX_DEF_THM], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "MULT_CLAUSES"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_24, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPD11_SAME_BASE, combinTheory.UPD11_SAME_KEY_AND_BASE, combinTheory.UPDATE_COMMUTES, combinTheory.UPDATE_EQ, combinTheory.UPD_SAME_KEY_UNWIND]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.118592

INV_PRE_LESS
proof length: 2
proof time: 0.094806
Statistics
  infstep : 12
  nodes   : 8
  maxdepth: 2
Time: 0.51187
  inferstep time: 0.437135
  node_find time: 0.00169
  node_crea time: 0.056522
    pred time: 0.021159
    thmpred time: 0.000001
    mc time: 0.027516
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", prim_recTheory.PRIM_REC, prim_recTheory.PRIM_REC_FUN, prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, prim_recTheory.PRE, prim_recTheory.SIMP_REC_REL] THEN metisTools.METIS_TAC [prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", relationTheory.the_fun_def, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.LESS_ALT, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_2, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.WF_PRED, prim_recTheory.LESS_0]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.100046

INV_PRE_LESS_EQ
proof length: 5
proof time: 0.291669
Statistics
  infstep : 6
  nodes   : 6
  maxdepth: 2
Time: 0.509687
  inferstep time: 0.446828
  node_find time: 0.000733
  node_crea time: 0.041447
    pred time: 0.018597
    thmpred time: 0.0
    mc time: 0.02585
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT (INDUCT_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.TRY boolLib.DISCH_TAC)
end THENL [metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_24, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "PRE_SUC_EQ"], metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", prim_recTheory.PRE, relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.130036

PRE_LESS_EQ
Statistics
  infstep : 450
  nodes   : 100
  maxdepth: 5
Time: 10.052402
  inferstep time: 8.737424
  node_find time: 0.081745
  node_crea time: 0.95684
    pred time: 0.34696
    thmpred time: 0.000033
    mc time: 0.416357
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.183126

SUB_LESS_EQ
proof length: 5
proof time: 0.117663
Statistics
  infstep : 7
  nodes   : 7
  maxdepth: 2
Time: 0.42035
  inferstep time: 0.337408
  node_find time: 0.001096
  node_crea time: 0.059473
    pred time: 0.030076
    thmpred time: 0.000001
    mc time: 0.032119
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065719

SUB_EQ_EQ_0
Statistics
  infstep : 677
  nodes   : 84
  maxdepth: 5
Time: 10.019015
  inferstep time: 8.648159
  node_find time: 0.14379
  node_crea time: 0.852005
    pred time: 0.292502
    thmpred time: 0.000024
    mc time: 0.332609
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.275101

SUB_LESS_0
proof length: 5
proof time: 0.167534
Statistics
  infstep : 63
  nodes   : 20
  maxdepth: 3
Time: 1.882578
  inferstep time: 1.654584
  node_find time: 0.008489
  node_crea time: 0.159477
    pred time: 0.074997
    thmpred time: 0.000008
    mc time: 0.077544
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_EQ"], metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0]]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.187332

SUB_LESS_OR
proof length: 4
proof time: 0.087839
Statistics
  infstep : 56
  nodes   : 15
  maxdepth: 3
Time: 1.288345
  inferstep time: 1.080138
  node_find time: 0.008025
  node_crea time: 0.156208
    pred time: 0.071579
    thmpred time: 0.000004
    mc time: 0.063705
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "NORM_0"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_ADD_1"] THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_SUC_NOT", prim_recTheory.LESS_LEMMA1]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.088836
Replaying proof: 0.000806

TIMES2
proof length: 1
proof time: 0.0404
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.066918
  inferstep time: 0.05617
  node_find time: 0.000127
  node_crea time: 0.007262
    pred time: 0.002598
    thmpred time: 0.0
    mc time: 0.00508
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "MULT_LEFT_1" , DB.fetch "arithmetic" "MULT_RIGHT_1" , DB.fetch "arithmetic" "ADD_EQ_1" , DB.fetch "arithmetic" "LESS_ADD_1" , DB.fetch "arithmetic" "ADD1" , DB.fetch "arithmetic" "SUB_LESS_OR" , DB.fetch "arithmetic" "PRE_SUB1" , DB.fetch "arithmetic" "SUC_SUB1" , DB.fetch "arithmetic" "SUC_SUB" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "NORM_0" , DB.fetch "arithmetic" "EXP_ADD"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005438
Replaying proof: 0.000728
Replaying proof: 0.001167

MULT_SUC_EQ
Statistics
  infstep : 650
  nodes   : 95
  maxdepth: 5
Time: 10.075888
  inferstep time: 8.887392
  node_find time: 0.112195
  node_crea time: 0.70784
    pred time: 0.249115
    thmpred time: 0.000019
    mc time: 0.310805
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033127

MULT_EXP_MONO
Statistics
  infstep : 618
  nodes   : 89
  maxdepth: 5
Time: 10.011255
  inferstep time: 8.272056
  node_find time: 0.117042
  node_crea time: 1.161791
    pred time: 0.415086
    thmpred time: 0.000024
    mc time: 0.460069
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.048468

EQ_ADD_LCANCEL
proof length: 4
proof time: 0.091716
Statistics
  infstep : 98
  nodes   : 25
  maxdepth: 3
Time: 2.760092
  inferstep time: 2.400991
  node_find time: 0.015632
  node_crea time: 0.247981
    pred time: 0.110559
    thmpred time: 0.000009
    mc time: 0.112884
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES")] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029813

EQ_ADD_RCANCEL
proof length: 1
proof time: 0.009635
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.145145
  inferstep time: 0.130872
  node_find time: 0.000346
  node_crea time: 0.008088
    pred time: 0.002527
    thmpred time: 0.0
    mc time: 0.006519
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "arithmetic" "ADD_ASSOC" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "EQ_ADD_LCANCEL" , DB.fetch "arithmetic" "EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LEFT_ADD_DISTRIB" , DB.fetch "arithmetic" "LESS_ADD" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LT_ADD_RCANCEL" , DB.fetch "arithmetic" "LESS_MONO_ADD_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ADD" , DB.fetch "arithmetic" "LT_ADD_LCANCEL" , DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB" , DB.fetch "arithmetic" "LESS_MONO_ADD" , DB.fetch "arithmetic" "LESS_MONO_ADD_INV" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035094

EQ_MULT_LCANCEL
proof length: 5
proof time: 0.002959
Statistics
  infstep : 470
  nodes   : 51
  maxdepth: 4
Time: 7.013155
  inferstep time: 6.144635
  node_find time: 0.084999
  node_crea time: 0.474472
    pred time: 0.175254
    thmpred time: 0.000015
    mc time: 0.210968
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SYM"], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "EXP_ADD"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_OR_EQ_ADD", markerTheory.move_left_disj, markerTheory.move_right_disj, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, satTheory.dc_neg, satTheory.dc_cond] THEN
  boolLib.REWRITE_TAC [numTheory.NOT_SUC, (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ONE"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "ADD_EQ_0")]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.137962

EQ_MULT_RCANCEL
proof length: 1
proof time: 0.001349
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.144387
  inferstep time: 0.119927
  node_find time: 0.000465
  node_crea time: 0.019317
    pred time: 0.008241
    thmpred time: 0.0
    mc time: 0.008172
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "arithmetic" "EQ_MULT_LCANCEL" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "LEFT_ADD_DISTRIB" , DB.fetch "arithmetic" "LEFT_SUB_DISTRIB" , DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB" , DB.fetch "arithmetic" "MULT_ASSOC" , DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB" , DB.fetch "arithmetic" "LESS_MONO_MULT" , DB.fetch "arithmetic" "MULT_SUC" , DB.fetch "arithmetic" "MULT_COMM" , DB.fetch "arithmetic" "MULT_SYM" , DB.fetch "arithmetic" "LESS_MONO_MULT2" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "MULT_0" , DB.fetch "arithmetic" "MULT_EXP_MONO" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.023708

ADD_SUB
proof length: 7
proof time: 0.22544
Statistics
  infstep : 49
  nodes   : 12
  maxdepth: 3
Time: 0.976121
  inferstep time: 0.825421
  node_find time: 0.009734
  node_crea time: 0.082592
    pred time: 0.034515
    thmpred time: 0.000004
    mc time: 0.049162
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUB_LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN", DB.fetch "arithmetic" "SUB_PLUS", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPD11_SAME_BASE, combinTheory.UPD11_SAME_KEY_AND_BASE, combinTheory.UPDATE_COMMUTES, combinTheory.UPDATE_EQ, combinTheory.UPD_SAME_KEY_UNWIND, pairTheory.LEX_CONG, pairTheory.LEX_DEF_THM, DB.fetch "arithmetic" "ADD_EQ_SUB"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.066286

LESS_EQ_ADD_SUB
proof length: 5
proof time: 0.132155
Statistics
  infstep : 14
  nodes   : 10
  maxdepth: 3
Time: 0.677224
  inferstep time: 0.529033
  node_find time: 0.002768
  node_crea time: 0.097652
    pred time: 0.043642
    thmpred time: 0.000003
    mc time: 0.057742
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_SUB", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB"], let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_SUB", DB.fetch "arithmetic" "SUB_PLUS", combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPDATE_COMMUTES, combinTheory.UPD_SAME_KEY_UNWIND, pairTheory.LEX_CONG],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "ADD_SUB", combinTheory.SAME_KEY_UPDATE_DIFFER]]
end]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040215

LESS_EQ_SUB_LESS
proof length: 5
proof time: 0.179361
Statistics
  infstep : 47
  nodes   : 20
  maxdepth: 3
Time: 1.889759
  inferstep time: 1.681568
  node_find time: 0.007465
  node_crea time: 0.143846
    pred time: 0.057425
    thmpred time: 0.000007
    mc time: 0.07264
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", prim_recTheory.LESS_0, prim_recTheory.LESS_0_0], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "PRE_SUC_EQ"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038222

NOT_SUC_LESS_EQ
proof length: 1
proof time: 0.027393
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.068292
  inferstep time: 0.056257
  node_find time: 0.000222
  node_crea time: 0.008234
    pred time: 0.003008
    thmpred time: 0.000001
    mc time: 0.005301
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "INV_PRE_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005233

SUB_SUB
proof length: 5
proof time: 0.146746
Statistics
  infstep : 7
  nodes   : 7
  maxdepth: 2
Time: 0.427917
  inferstep time: 0.309136
  node_find time: 0.001433
  node_crea time: 0.082126
    pred time: 0.041061
    thmpred time: 0.000001
    mc time: 0.045067
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "LESS_ADD_SUC", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "SUB_EQUAL_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_PLUS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUC_SUB1", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.082673

LESS_IMP_LESS_ADD
proof length: 4
proof time: 0.067762
Statistics
  infstep : 44
  nodes   : 16
  maxdepth: 3
Time: 1.247684
  inferstep time: 1.035891
  node_find time: 0.008145
  node_crea time: 0.150276
    pred time: 0.061558
    thmpred time: 0.000003
    mc time: 0.070242
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD_INV", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_OR_EQ_ADD", DB.fetch "arithmetic" "LT_ADD_LCANCEL", DB.fetch "arithmetic" "LT_ADD_RCANCEL", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_24, prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_SUC_NOT", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP, DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", prim_recTheory.LESS_SUC_SUC, prim_recTheory.LESS_SUC_REFL, DB.fetch "arithmetic" "LESS_ADD_SUC"]]
end
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.217625

SUB_LESS_EQ_ADD
proof length: 1
proof time: 0.00025
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.168674
  inferstep time: 0.116399
  node_find time: 0.00047
  node_crea time: 0.038587
    pred time: 0.018328
    thmpred time: 0.0
    mc time: 0.02014
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ HolKernel.SYM ( boolLib.SPEC_ALL ( DB.fetch "arithmetic" "SUB_EQ_0" ) ) , HolKernel.SYM ( boolLib.SPEC_ALL ( DB.fetch "arithmetic" "SUB_PLUS" ) ) ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036458

SUB_LESS_SUC
proof length: 6
proof time: 0.124356
Statistics
  infstep : 16
  nodes   : 9
  maxdepth: 3
Time: 0.689704
  inferstep time: 0.583182
  node_find time: 0.003115
  node_crea time: 0.06521
    pred time: 0.025992
    thmpred time: 0.000003
    mc time: 0.045338
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], metisTools.METIS_TAC [prim_recTheory.LESS_SUC_SUC, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", prim_recTheory.LESS_SUC_SUC, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB_PLUS"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.141671

SUB_CANCEL
proof length: 16
proof time: 0.49171
Statistics
  infstep : 133
  nodes   : 58
  maxdepth: 5
Time: 5.486438
  inferstep time: 4.468097
  node_find time: 0.03069
  node_crea time: 0.776534
    pred time: 0.295963
    thmpred time: 0.000016
    mc time: 0.335313
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB"] THEN
  BasicProvers.SRW_TAC [] [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ"] THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "SUB_LESS_SUC", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQUAL_0"], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "OR_LESS"] THENL
  [boolLib.ASM_REWRITE_TAC [prim_recTheory.INV_SUC_EQ, numTheory.NOT_SUC] THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "ADD_EQ_SUB"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "SUB_LESS_SUC", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LESS_0"]], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ"] THEN
  boolLib.ASM_REWRITE_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "SUB", prim_recTheory.LESS_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.058559

CANCEL_SUB
proof length: 1
proof time: 0.10334
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.122491
  inferstep time: 0.10667
  node_find time: 0.000201
  node_crea time: 0.009972
    pred time: 0.003743
    thmpred time: 0.0
    mc time: 0.007336
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_CANCEL" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "SUB_LESS_EQ_ADD" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "SUB_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_ADD_SUB" , DB.fetch "arithmetic" "LESS_EQ_SUB_LESS" , DB.fetch "arithmetic" "SUB_SUB" , DB.fetch "arithmetic" "SUB_LESS_EQ" , DB.fetch "arithmetic" "LEFT_SUB_DISTRIB" , DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB" , DB.fetch "arithmetic" "tactictoe_thm_2" , DB.fetch "arithmetic" "tactictoe_thm_3" , DB.fetch "arithmetic" "SUB_LESS_SUC" , DB.fetch "arithmetic" "SUB" , DB.fetch "arithmetic" "LESS_SUB_ADD_LESS"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041848
Replaying proof: 0.000375
Replaying proof: 0.000115

ODD_OR_EVEN
proof length: 5
proof time: 0.129225
Statistics
  infstep : 41
  nodes   : 16
  maxdepth: 4
Time: 1.571741
  inferstep time: 1.373753
  node_find time: 0.006879
  node_crea time: 0.137391
    pred time: 0.056343
    thmpred time: 0.000005
    mc time: 0.070494
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "SUB"), prim_recTheory.LESS_0, (DB.fetch "arithmetic" "ONE")] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "TIMES2", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LESS_MULT_MONO"],
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "TIMES2", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "LESS_MULT_MONO"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "LESS_OR_EQ_ADD", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", relationTheory.RTC_CASES1, relationTheory.RTC_CASES2, relationTheory.TC_CASES1, relationTheory.TC_CASES2]]
end
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.184652

LESS_EXP_SUC_MONO
Statistics
  infstep : 534
  nodes   : 93
  maxdepth: 5
Time: 10.087898
  inferstep time: 8.685462
  node_find time: 0.108169
  node_crea time: 0.949981
    pred time: 0.321812
    thmpred time: 0.00002
    mc time: 0.389009
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.151145
Replaying proof: 0.000204

GREATER_EQ
proof length: 3
proof time: 0.080292
Statistics
  infstep : 34
  nodes   : 16
  maxdepth: 3
Time: 1.492735
  inferstep time: 1.268885
  node_find time: 0.005531
  node_crea time: 0.17618
    pred time: 0.063449
    thmpred time: 0.000003
    mc time: 0.080288
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "LESS_OR_EQ"), boolLib.DISJ_IMP_THM, boolLib.FORALL_AND_THM, (DB.fetch "arithmetic" "LESS_ADD")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "GREATER_OR_EQ", DB.fetch "arithmetic" "LESS_OR_EQ", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_LESS_CASES", DB.fetch "arithmetic" "LESS_OR_EQ_ADD", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LT_ADD_RCANCEL", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "NOT_LESS_EQUAL", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "GREATER_DEF"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.100939

LESS_EQ_CASES
proof length: 1
proof time: 0.052099
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.08551
  inferstep time: 0.074346
  node_find time: 0.000168
  node_crea time: 0.007707
    pred time: 0.002746
    thmpred time: 0.000001
    mc time: 0.004671
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "CANCEL_SUB" , DB.fetch "arithmetic" "GREATER_EQ" , DB.fetch "arithmetic" "INV_PRE_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.053174

LESS_EQUAL_ADD
proof length: 5
proof time: 0.120261
Statistics
  infstep : 14
  nodes   : 9
  maxdepth: 2
Time: 0.599263
  inferstep time: 0.511514
  node_find time: 0.002252
  node_crea time: 0.058318
    pred time: 0.027034
    thmpred time: 0.000003
    mc time: 0.032103
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "LESS_ADD", DB.fetch "arithmetic" "LESS_ADD_1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ODD_OR_EVEN"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "SUB_ADD"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.157779

LESS_EQ_EXISTS
proof length: 1
proof time: 0.093407
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.123871
  inferstep time: 0.110505
  node_find time: 0.000165
  node_crea time: 0.008386
    pred time: 0.003104
    thmpred time: 0.000001
    mc time: 0.006356
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQUAL_ADD" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "SUB_LESS_EQ_ADD" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_ADD_SUB" , DB.fetch "arithmetic" "LESS_EQ_SUB_LESS" , DB.fetch "arithmetic" "SUB_SUB" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "CANCEL_SUB" , DB.fetch "arithmetic" "SUB_CANCEL" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_LESS_EQ_TRANS"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.113072

MULT_EQ_0
proof length: 6
proof time: 0.177993
Statistics
  infstep : 183
  nodes   : 28
  maxdepth: 4
Time: 3.275353
  inferstep time: 2.860091
  node_find time: 0.035315
  node_crea time: 0.232327
    pred time: 0.087228
    thmpred time: 0.000005
    mc time: 0.104811
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "MULT_ASSOC", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_LEFT_1", DB.fetch "arithmetic" "MULT_RIGHT_1", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ADD_ASSOC")] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ADD_CLAUSES"), boolLib.GSYM numTheory.NOT_SUC, numTheory.NOT_SUC]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058985

MULT_EQ_1
Statistics
  infstep : 659
  nodes   : 95
  maxdepth: 5
Time: 10.000472
  inferstep time: 8.750016
  node_find time: 0.133312
  node_crea time: 0.680437
    pred time: 0.226688
    thmpred time: 0.000019
    mc time: 0.289413
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.209152

MULT_EQ_ID
Statistics
  infstep : 593
  nodes   : 118
  maxdepth: 5
Time: 10.000573
  inferstep time: 8.710437
  node_find time: 0.11999
  node_crea time: 0.751694
    pred time: 0.241057
    thmpred time: 0.000026
    mc time: 0.3528
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.171807

LESS_MULT2
proof length: 1
proof time: 0.052769
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.10784
  inferstep time: 0.095634
  node_find time: 0.000168
  node_crea time: 0.008031
    pred time: 0.002635
    thmpred time: 0.000001
    mc time: 0.005733
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "INV_PRE_EQ" , DB.fetch "arithmetic" "INV_PRE_LESS" , DB.fetch "arithmetic" "INV_PRE_LESS_EQ" , DB.fetch "arithmetic" "PRE_SUC_EQ" , DB.fetch "arithmetic" "LESS_0_CASES" , DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "EQ_MULT_LCANCEL" , DB.fetch "arithmetic" "EQ_MULT_RCANCEL" , DB.fetch "arithmetic" "MULT_EQ_0" , DB.fetch "arithmetic" "MULT_EQ_ID" , DB.fetch "arithmetic" "LESS_MONO_MULT2" , DB.fetch "arithmetic" "LESS_MONO_MULT" , DB.fetch "arithmetic" "MULT_SUC"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068531

ZERO_LESS_MULT
proof length: 2
proof time: 0.113887
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.246046
  inferstep time: 0.217208
  node_find time: 0.000482
  node_crea time: 0.014802
    pred time: 0.005532
    thmpred time: 0.000001
    mc time: 0.015946
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_EQ_0", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_ID", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "MULT_SUC"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.128761

ZERO_LESS_ADD
proof length: 5
proof time: 0.261244
Statistics
  infstep : 18
  nodes   : 10
  maxdepth: 2
Time: 0.848457
  inferstep time: 0.748163
  node_find time: 0.003168
  node_crea time: 0.065494
    pred time: 0.026965
    thmpred time: 0.000002
    mc time: 0.035174
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT (INDUCT_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.TRY boolLib.DISCH_TAC)
end THENL [BasicProvers.PROVE_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB_LESS_0", prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "ADD_EQ_1"], metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "ODD_OR_EVEN"], metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"], metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.050763

FACT_LESS
proof length: 6
proof time: 0.211583
Statistics
  infstep : 134
  nodes   : 20
  maxdepth: 5
Time: 2.112995
  inferstep time: 1.863708
  node_find time: 0.024346
  node_crea time: 0.119732
    pred time: 0.046169
    thmpred time: 0.000004
    mc time: 0.057525
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT (INDUCT_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.TRY boolLib.DISCH_TAC)
end THENL [boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "LESS_DEF"), boolLib.NOT_AND] THEN
  boolLib.EXISTS_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 2004*)\\x.x = 0"] Parse.--) THEN
  boolLib.CONV_TAC (boolLib.DEPTH_CONV HolKernel.BETA_CONV) THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "ODD", numTheory.NOT_SUC, DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "SUC_NOT", prim_recTheory.tactictoe_thm_0, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "FORALL_NUM_THM", prim_recTheory.DC, numTheory.INDUCTION, DB.fetch "arithmetic" "LESS_ADD_NONZERO", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "MULT_CLAUSES"], metisTools.METIS_TAC [DB.fetch "arithmetic" "FACT", prim_recTheory.LESS_0, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "SUB"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.11651

EVEN_ODD
proof length: 3
proof time: 0.079584
Statistics
  infstep : 10
  nodes   : 5
  maxdepth: 2
Time: 0.32854
  inferstep time: 0.282496
  node_find time: 0.001713
  node_crea time: 0.027723
    pred time: 0.010462
    thmpred time: 0.000001
    mc time: 0.018538
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "ODD", DB.fetch "arithmetic" "LESS_ADD_NONZERO", numTheory.NOT_SUC, DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "SUC_NOT", prim_recTheory.tactictoe_thm_0, prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_CASES_IMP", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "ODD", numTheory.NOT_SUC, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "SUC_NOT", prim_recTheory.LESS_DEF, prim_recTheory.LESS_SUC_IMP, prim_recTheory.SUC_ID, prim_recTheory.tactictoe_thm_0, prim_recTheory.wellfounded_def, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_LESS_SUC", DB.fetch "arithmetic" "LESS_SUC_NOT"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.045098

ODD_EVEN
proof length: 1
proof time: 0.045031
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.078179
  inferstep time: 0.066015
  node_find time: 0.000178
  node_crea time: 0.008198
    pred time: 0.002637
    thmpred time: 0.0
    mc time: 0.005639
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "LESS_ADD_NONZERO" , numTheory.NOT_SUC , DB.fetch "arithmetic" "LESS_CASES_IMP" , DB.fetch "arithmetic" "LESS_NOT_SUC" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO" , DB.fetch "arithmetic" "LESS_SUC_EQ_COR" , DB.fetch "arithmetic" "NOT_EXP_0" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO" , DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "SUC_NOT"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004263

EVEN_OR_ODD
proof length: 1
proof time: 0.0497
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.045966
  inferstep time: 0.033446
  node_find time: 0.000185
  node_crea time: 0.008275
    pred time: 0.002668
    thmpred time: 0.0
    mc time: 0.005754
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "ADD_EQ_1" , DB.fetch "arithmetic" "EQ_MULT_LCANCEL" , DB.fetch "arithmetic" "EQ_MULT_RCANCEL" , DB.fetch "arithmetic" "GREATER_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_CASES" , DB.fetch "arithmetic" "LESS_LESS_CASES" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ_ADD" , DB.fetch "arithmetic" "MULT_EQ_0" , DB.fetch "arithmetic" "num_CASES" , DB.fetch "arithmetic" "MULT_EQ_ID"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004537

EVEN_AND_ODD
proof length: 1
proof time: 0.026777
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.046568
  inferstep time: 0.034962
  node_find time: 0.000197
  node_crea time: 0.007642
    pred time: 0.002498
    thmpred time: 0.000001
    mc time: 0.004892
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "LESS_ANTISYM" , DB.fetch "arithmetic" "LESS_CASES_IMP" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_LESS_SUC" , DB.fetch "arithmetic" "LESS_NOT_SUC" , DB.fetch "arithmetic" "LESS_SUC_EQ_COR" , DB.fetch "arithmetic" "WOP" , DB.fetch "arithmetic" "tactictoe_thm_1" , prim_recTheory.LESS_DEF , prim_recTheory.LESS_REFL , prim_recTheory.NOT_LESS_0])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006619

EVEN_ADD
proof length: 3
proof time: 0.206186
Statistics
  infstep : 11
  nodes   : 5
  maxdepth: 2
Time: 0.453403
  inferstep time: 0.405272
  node_find time: 0.001935
  node_crea time: 0.028376
    pred time: 0.011293
    thmpred time: 0.000001
    mc time: 0.018347
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN", DB.fetch "arithmetic" "ODD_OR_EVEN"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.108747

EVEN_MULT
Statistics
  infstep : 460
  nodes   : 114
  maxdepth: 5
Time: 10.008719
  inferstep time: 8.672828
  node_find time: 0.099962
  node_crea time: 0.896198
    pred time: 0.318137
    thmpred time: 0.000024
    mc time: 0.36317
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.108407

ODD_ADD
proof length: 5
proof time: 0.223624
Statistics
  infstep : 19
  nodes   : 10
  maxdepth: 3
Time: 0.919985
  inferstep time: 0.79899
  node_find time: 0.003377
  node_crea time: 0.086597
    pred time: 0.040355
    thmpred time: 0.000002
    mc time: 0.037253
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ODD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MULT"], let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ODD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN", DB.fetch "arithmetic" "ADD_EQ_0"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ODD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "LESS_ADD_NONZERO"]]
end]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.101745

ODD_MULT
proof length: 3
proof time: 0.015151
Statistics
  infstep : 15
  nodes   : 8
  maxdepth: 3
Time: 0.714329
  inferstep time: 0.627154
  node_find time: 0.002983
  node_crea time: 0.056497
    pred time: 0.02291
    thmpred time: 0.000001
    mc time: 0.031913
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "ODD_EVEN"), (DB.fetch "arithmetic" "EVEN_ADD")] THEN
  BasicProvers.PROVE_TAC [DB.fetch "arithmetic" "EVEN_MULT", DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "EVEN_AND_ODD", DB.fetch "arithmetic" "ODD_EVEN", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "EVEN_ADD", DB.fetch "arithmetic" "EVEN_OR_ODD", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_COMM", DB.fetch "arithmetic" "MULT_EQ_0", DB.fetch "arithmetic" "EQ_MULT_LCANCEL"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.024005
Replaying proof: 0.000088

EVEN_DOUBLE
proof length: 1
proof time: 0.048852
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.083367
  inferstep time: 0.070631
  node_find time: 0.00017
  node_crea time: 0.008524
    pred time: 0.002823
    thmpred time: 0.0
    mc time: 0.005998
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "TIMES2" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "tactictoe_thm_4" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "EVEN_MULT" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "EVEN_ADD" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "FACT" , DB.fetch "arithmetic" "MULT_EQ_ID" , DB.fetch "arithmetic" "ODD_OR_EVEN"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.127462

ODD_DOUBLE
proof length: 1
proof time: 0.043213
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.066312
  inferstep time: 0.053453
  node_find time: 0.000197
  node_crea time: 0.008361
    pred time: 0.002632
    thmpred time: 0.0
    mc time: 0.006167
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_DOUBLE" , DB.fetch "arithmetic" "TIMES2" , DB.fetch "arithmetic" "tactictoe_thm_4" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "ODD_MULT" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "ODD_ADD" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "FACT" , DB.fetch "arithmetic" "ODD_OR_EVEN"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033229
Replaying proof: 0.000911

EVEN_EXISTS
proof length: 1
proof time: 0.057566
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.091867
  inferstep time: 0.078856
  node_find time: 0.000199
  node_crea time: 0.008428
    pred time: 0.002575
    thmpred time: 0.0
    mc time: 0.006196
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_ODD_EXISTS" , DB.fetch "arithmetic" "EVEN_DOUBLE" , DB.fetch "arithmetic" "TIMES2" , DB.fetch "arithmetic" "ODD_DOUBLE" , DB.fetch "arithmetic" "tactictoe_thm_4" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "tactictoe_thm_5" , DB.fetch "arithmetic" "EVEN_MULT" , DB.fetch "arithmetic" "EVEN_ADD" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "BIT2" , DB.fetch "arithmetic" "ODD_OR_EVEN"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.109276

ODD_EXISTS
proof length: 1
proof time: 0.058591
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.09447
  inferstep time: 0.075734
  node_find time: 0.000248
  node_crea time: 0.010667
    pred time: 0.002941
    thmpred time: 0.000001
    mc time: 0.009636
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_ODD_EXISTS" , DB.fetch "arithmetic" "ODD_DOUBLE" , DB.fetch "arithmetic" "EVEN_EXISTS" , DB.fetch "arithmetic" "TIMES2" , DB.fetch "arithmetic" "EVEN_DOUBLE" , DB.fetch "arithmetic" "tactictoe_thm_4" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "tactictoe_thm_5" , DB.fetch "arithmetic" "ODD_MULT" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "ODD_ADD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "BIT2"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.103941

EVEN_EXP_IFF
Statistics
  infstep : 538
  nodes   : 108
  maxdepth: 5
Time: 10.035741
  inferstep time: 8.638532
  node_find time: 0.122152
  node_crea time: 0.866603
    pred time: 0.320924
    thmpred time: 0.000029
    mc time: 0.32027
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.154501

EVEN_EXP
proof length: 1
proof time: 0.06001
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.093206
  inferstep time: 0.080461
  node_find time: 0.000223
  node_crea time: 0.00851
    pred time: 0.002984
    thmpred time: 0.000001
    mc time: 0.005446
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_EXP_IFF" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "EXP_ADD" , DB.fetch "arithmetic" "ZERO_LESS_EXP" , DB.fetch "arithmetic" "EVEN" , DB.fetch "arithmetic" "EVEN_ODD_EXISTS" , DB.fetch "arithmetic" "EVEN_MULT" , DB.fetch "arithmetic" "EVEN_ADD" , DB.fetch "arithmetic" "EVEN_EXISTS" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "NOT_EXP_0" , DB.fetch "arithmetic" "LESS_EXP_SUC_MONO" , DB.fetch "arithmetic" "MULT_EXP_MONO"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015468

ODD_EXP_IFF
Statistics
  infstep : 492
  nodes   : 118
  maxdepth: 5
Time: 10.052775
  inferstep time: 8.53526
  node_find time: 0.116938
  node_crea time: 1.008096
    pred time: 0.339818
    thmpred time: 0.00002
    mc time: 0.392049
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00581

ODD_EXP
proof length: 1
proof time: 0.038151
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.081833
  inferstep time: 0.069527
  node_find time: 0.000239
  node_crea time: 0.008039
    pred time: 0.002631
    thmpred time: 0.0
    mc time: 0.005278
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ODD_EXP_IFF" , DB.fetch "arithmetic" "EVEN_EXP" , DB.fetch "arithmetic" "EVEN_EXP_IFF" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "EXP_ADD" , DB.fetch "arithmetic" "ODD" , DB.fetch "arithmetic" "EVEN_ODD_EXISTS" , DB.fetch "arithmetic" "ODD_MULT" , DB.fetch "arithmetic" "ODD_ADD" , DB.fetch "arithmetic" "ODD_EXISTS" , DB.fetch "arithmetic" "EVEN_AND_ODD" , DB.fetch "arithmetic" "ODD_EVEN" , DB.fetch "arithmetic" "EVEN_ODD" , DB.fetch "arithmetic" "EVEN_OR_ODD" , DB.fetch "arithmetic" "ZERO_LESS_EXP" , DB.fetch "arithmetic" "INV_PRE_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015853

EQ_LESS_EQ
proof length: 1
proof time: 0.028422
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.15297
  inferstep time: 0.140088
  node_find time: 0.000351
  node_crea time: 0.007719
    pred time: 0.002821
    thmpred time: 0.0
    mc time: 0.004693
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "arithmetic" "CANCEL_SUB" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "SUB_CANCEL" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_EQ_LESS_TRANS" , DB.fetch "arithmetic" "LESS_LESS_EQ_TRANS" , DB.fetch "arithmetic" "LESS_MONO_MULT2" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "GREATER_EQ" , DB.fetch "arithmetic" "INV_PRE_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQUAL_ADD" ])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.119769

ADD_MONO_LESS_EQ
proof length: 9
proof time: 0.411382
Statistics
  infstep : 16
  nodes   : 14
  maxdepth: 3
Time: 1.085371
  inferstep time: 0.942946
  node_find time: 0.002972
  node_crea time: 0.087034
    pred time: 0.03937
    thmpred time: 0.000005
    mc time: 0.054938
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_ADD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_ADD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034425

NOT_LEQ
proof length: 1
proof time: 0.04491
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.072253
  inferstep time: 0.05864
  node_find time: 0.000215
  node_crea time: 0.009549
    pred time: 0.003629
    thmpred time: 0.0
    mc time: 0.005357
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "ADD_MONO_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "CANCEL_SUB"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034986

NOT_NUM_EQ
proof length: 1
proof time: 0.067076
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.088517
  inferstep time: 0.076589
  node_find time: 0.000203
  node_crea time: 0.008031
    pred time: 0.002801
    thmpred time: 0.0
    mc time: 0.004758
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_LEQ" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_CASES" , DB.fetch "arithmetic" "LESS_EQ_CASES" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031573

NOT_GREATER
proof length: 1
proof time: 0.075934
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.105933
  inferstep time: 0.094323
  node_find time: 0.000194
  node_crea time: 0.007783
    pred time: 0.002777
    thmpred time: 0.0
    mc time: 0.004592
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "GREATER_DEF" , DB.fetch "arithmetic" "GREATER_OR_EQ" , DB.fetch "arithmetic" "NOT_LEQ" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_LESS_EQUAL" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_ANTISYM" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "ADD_MONO_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ" , DB.fetch "arithmetic" "CANCEL_SUB" , DB.fetch "arithmetic" "EQ_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "GREATER_EQ" , DB.fetch "arithmetic" "LESS_OR_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005905

NOT_GREATER_EQ
proof length: 1
proof time: 0.047367
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.067144
  inferstep time: 0.055278
  node_find time: 0.000222
  node_crea time: 0.007864
    pred time: 0.002702
    thmpred time: 0.000001
    mc time: 0.004863
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "GREATER_EQ" , DB.fetch "arithmetic" "GREATER_OR_EQ" , DB.fetch "arithmetic" "NOT_LEQ" , DB.fetch "arithmetic" "NOT_NUM_EQ" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC" , DB.fetch "arithmetic" "LESS_EQ_SUC_REFL" , DB.fetch "arithmetic" "LESS_OR_EQ_ALT" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "NOT_GREATER"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006938

SUC_ONE_ADD
proof length: 1
proof time: 0.048163
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.080451
  inferstep time: 0.067035
  node_find time: 0.000187
  node_crea time: 0.009324
    pred time: 0.003114
    thmpred time: 0.0
    mc time: 0.005788
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "ADD1" , DB.fetch "arithmetic" "ODD_OR_EVEN" , DB.fetch "arithmetic" "ADD_EQ_1" , DB.fetch "arithmetic" "LESS_ADD_1" , DB.fetch "arithmetic" "EXP" , DB.fetch "arithmetic" "FACT" , DB.fetch "arithmetic" "SUC_SUB" , DB.fetch "arithmetic" "SUC_SUB1" , DB.fetch "arithmetic" "ONE" , DB.fetch "arithmetic" "TWO" , DB.fetch "arithmetic" "tactictoe_thm_4" , DB.fetch "arithmetic" "tactictoe_thm_5" , DB.fetch "arithmetic" "MULT_EQ_ID" , DB.fetch "arithmetic" "SUB_LESS_OR" , DB.fetch "arithmetic" "MULT_LEFT_1"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065973

SUC_ADD_SYM
proof length: 1
proof time: 0.04132
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.078817
  inferstep time: 0.064905
  node_find time: 0.000208
  node_crea time: 0.009196
    pred time: 0.003161
    thmpred time: 0.0
    mc time: 0.006395
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD" , DB.fetch "arithmetic" "ADD_CLAUSES" , DB.fetch "arithmetic" "LESS_STRONG_ADD" , DB.fetch "arithmetic" "ADD_SUC" , DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN" , DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS" , DB.fetch "arithmetic" "ADD_ASSOC" , DB.fetch "arithmetic" "ADD_COMM" , DB.fetch "arithmetic" "ADD_SYM" , DB.fetch "arithmetic" "ADD_EQ_0" , DB.fetch "arithmetic" "ADD_EQ_1" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "ADD_INV_0" , DB.fetch "arithmetic" "ADD_INV_0_EQ" , DB.fetch "arithmetic" "ADD_MONO_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.088787

NOT_SUC_ADD_LESS_EQ
proof length: 5
proof time: 0.122766
Statistics
  infstep : 23
  nodes   : 12
  maxdepth: 2
Time: 0.814763
  inferstep time: 0.675313
  node_find time: 0.00521
  node_crea time: 0.084294
    pred time: 0.034981
    thmpred time: 0.000004
    mc time: 0.047943
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LE_ADD_LCANCEL", DB.fetch "arithmetic" "LE_ADD_RCANCEL", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS", DB.fetch "arithmetic" "LESS_EQ_LESS_EQ_MONO", DB.fetch "arithmetic" "LE_ADD_LCANCEL"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.087414

MULT_LESS_EQ_SUC
proof length: 10
proof time: 0.385544
Statistics
  infstep : 181
  nodes   : 45
  maxdepth: 4
Time: 4.335188
  inferstep time: 3.682579
  node_find time: 0.042338
  node_crea time: 0.36999
    pred time: 0.153796
    thmpred time: 0.000011
    mc time: 0.197538
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), numTheory.NOT_SUC] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "TIMES2", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "TIMES2", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL"],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ADD_CLAUSES"), boolLib.GSYM numTheory.NOT_SUC, numTheory.NOT_SUC],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "LESS_MONO_MULT"],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ADD_ASSOC")],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "MULT_SUC"]]
end
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.416756

LE_MULT_LCANCEL
proof length: 3
proof time: 0.210115
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.344251
  inferstep time: 0.305717
  node_find time: 0.000734
  node_crea time: 0.02333
    pred time: 0.009224
    thmpred time: 0.000001
    mc time: 0.016934
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_LESS_EQ_SUC", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_EQ_CASES", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "CANCEL_SUB", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_LESS_EQ_SUC", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_MONO_EQ", DB.fetch "arithmetic" "LESS_MULT_MONO", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "LESS_EQ_CASES", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "NOT_LEQ"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.111411

LE_MULT_RCANCEL
proof length: 4
proof time: 0.133314
Statistics
  infstep : 291
  nodes   : 92
  maxdepth: 5
Time: 8.318373
  inferstep time: 7.204181
  node_find time: 0.065126
  node_crea time: 0.701027
    pred time: 0.264758
    thmpred time: 0.000032
    mc time: 0.325175
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0", DB.fetch "arithmetic" "MULT_EQ_ID", DB.fetch "arithmetic" "LESS_MONO_MULT", DB.fetch "arithmetic" "LESS_MONO_MULT2", DB.fetch "arithmetic" "EVEN_MULT", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "LEFT_ADD_DISTRIB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB"], boolLib.ONCE_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_COMM")] THEN
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033514

LT_MULT_LCANCEL
proof length: 3
proof time: 0.095061
Statistics
  infstep : 223
  nodes   : 61
  maxdepth: 4
Time: 5.505941
  inferstep time: 4.709887
  node_find time: 0.047848
  node_crea time: 0.508681
    pred time: 0.198378
    thmpred time: 0.000015
    mc time: 0.225591
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0"] THEN boolLib.ONCE_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_COMM")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "LE_MULT_RCANCEL"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.088274

LT_MULT_RCANCEL
proof length: 2
proof time: 0.126382
Statistics
  infstep : 16
  nodes   : 7
  maxdepth: 3
Time: 0.573445
  inferstep time: 0.491488
  node_find time: 0.003302
  node_crea time: 0.058258
    pred time: 0.024432
    thmpred time: 0.000004
    mc time: 0.025838
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0"] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "LE_MULT_RCANCEL"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041501
Replaying proof: 0.000263
Replaying proof: 0.000062

SUB_LEFT_ADD
proof length: 10
proof time: 0.27097
Statistics
  infstep : 30
  nodes   : 16
  maxdepth: 3
Time: 1.241123
  inferstep time: 1.013189
  node_find time: 0.006198
  node_crea time: 0.135223
    pred time: 0.059187
    thmpred time: 0.000001
    mc time: 0.088874
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18, relationTheory.tactictoe_thm_19], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18, relationTheory.tactictoe_thm_19], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", prim_recTheory.PRE_DEF], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", prim_recTheory.PRE_DEF], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "ADD_SUB", DB.fetch "arithmetic" "NOT_SUC_ADD_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "NOT_ODD_EQ_EVEN", DB.fetch "arithmetic" "SUB", prim_recTheory.PRE_DEF, satTheory.dc_cond, DB.fetch "arithmetic" "num_case_compute", combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.087852

SUB_RIGHT_ADD
proof length: 10
proof time: 0.264805
Statistics
  infstep : 123
  nodes   : 36
  maxdepth: 3
Time: 4.065229
  inferstep time: 3.450857
  node_find time: 0.027264
  node_crea time: 0.402665
    pred time: 0.172448
    thmpred time: 0.00001
    mc time: 0.178838
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16, relationTheory.tactictoe_thm_18], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_0"), (DB.fetch "arithmetic" "ZERO_LESS_EQ")] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.075225

SUB_LEFT_SUB
proof length: 9
proof time: 0.202945
Statistics
  infstep : 12
  nodes   : 11
  maxdepth: 2
Time: 0.73309
  inferstep time: 0.55456
  node_find time: 0.002602
  node_crea time: 0.113102
    pred time: 0.035756
    thmpred time: 0.000003
    mc time: 0.069778
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, relationTheory.tactictoe_thm_14, relationTheory.tactictoe_thm_15, relationTheory.tactictoe_thm_16], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", satTheory.dc_cond, combinTheory.APPLY_UPDATE_THM], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.073908

SUB_RIGHT_SUB
proof length: 1
proof time: 0.037986
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.081453
  inferstep time: 0.067606
  node_find time: 0.000324
  node_crea time: 0.009002
    pred time: 0.00313
    thmpred time: 0.000001
    mc time: 0.005558
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_PLUS" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "SUB_LEFT_ADD" , DB.fetch "arithmetic" "SUB_LEFT_SUB" , DB.fetch "arithmetic" "SUB_LESS_EQ_ADD" , DB.fetch "arithmetic" "SUB_RIGHT_ADD" , DB.fetch "arithmetic" "LESS_SUB_ADD_LESS" , DB.fetch "arithmetic" "LESS_EQ_ADD_SUB" , DB.fetch "arithmetic" "LESS_EQ_SUB_LESS" , DB.fetch "arithmetic" "SUB_SUB" , DB.fetch "arithmetic" "SUB_ADD" , DB.fetch "arithmetic" "CANCEL_SUB" , DB.fetch "arithmetic" "LEFT_SUB_DISTRIB" , DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB" , DB.fetch "arithmetic" "SUB_CANCEL" , DB.fetch "arithmetic" "tactictoe_thm_2"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061822
Replaying proof: 0.000345
Replaying proof: 0.000188

SUB_LEFT_LESS_EQ
proof length: 9
proof time: 0.301002
Statistics
  infstep : 45
  nodes   : 19
  maxdepth: 3
Time: 1.994747
  inferstep time: 1.681326
  node_find time: 0.01009
  node_crea time: 0.212724
    pred time: 0.10435
    thmpred time: 0.000005
    mc time: 0.092239
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "SUB_EQ_EQ_0"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "SUB_LEFT_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "ADD_EQ_SUB"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.087948

SUB_RIGHT_LESS_EQ
proof length: 1
proof time: 0.000203
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.178368
  inferstep time: 0.116386
  node_find time: 0.000593
  node_crea time: 0.055008
    pred time: 0.031401
    thmpred time: 0.0
    mc time: 0.010681
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ HolKernel.SYM ( boolLib.SPEC_ALL ( DB.fetch "arithmetic" "SUB_EQ_0" ) ) , HolKernel.SYM ( boolLib.SPEC_ALL ( DB.fetch "arithmetic" "SUB_PLUS" ) ) ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06519

SUB_LEFT_LESS
proof length: 10
proof time: 0.376739
Statistics
  infstep : 341
  nodes   : 78
  maxdepth: 5
Time: 7.408773
  inferstep time: 6.312853
  node_find time: 0.080543
  node_crea time: 0.64111
    pred time: 0.249256
    thmpred time: 0.000033
    mc time: 0.29833
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [BasicProvers.PROVE_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "INV_PRE_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "INV_PRE_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LESS_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), prim_recTheory.LESS_SUC_REFL] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.129766
Replaying proof: 0.000065

SUB_RIGHT_LESS
proof length: 11
proof time: 0.433033
Statistics
  infstep : 33
  nodes   : 15
  maxdepth: 3
Time: 1.561166
  inferstep time: 1.326184
  node_find time: 0.007242
  node_crea time: 0.124089
    pred time: 0.057106
    thmpred time: 0.000004
    mc time: 0.097909
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "LT_MULT_CANCEL_RBARE", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "LESS_MULT2"], metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB"), prim_recTheory.NOT_LESS_0] THEN
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_LESS_0"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "EVEN_EXP_IFF"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")]]
Org tac number: 4
Replaying proof: 0.000172

SUB_LEFT_GREATER_EQ
proof length: 4
proof time: 0.193592
Statistics
  infstep : 341
  nodes   : 93
  maxdepth: 5
Time: 8.814826
  inferstep time: 7.438939
  node_find time: 0.095384
  node_crea time: 0.863848
    pred time: 0.344867
    thmpred time: 0.000012
    mc time: 0.3648
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REPEAT boolLib.GEN_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "GREATER_EQ", DB.fetch "arithmetic" "GREATER_OR_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_SUB", DB.fetch "arithmetic" "SUB_ADD"], metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "GREATER_EQ", DB.fetch "arithmetic" "GREATER_OR_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.114376

SUB_RIGHT_GREATER_EQ
proof length: 10
proof time: 0.375627
Statistics
  infstep : 61
  nodes   : 34
  maxdepth: 4
Time: 3.410042
  inferstep time: 2.904412
  node_find time: 0.014186
  node_crea time: 0.360559
    pred time: 0.162978
    thmpred time: 0.000014
    mc time: 0.151442
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "GREATER_EQ")] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD"],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_ADD"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
end
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.093601

SUB_LEFT_GREATER
proof length: 10
proof time: 0.31794
Statistics
  infstep : 38
  nodes   : 24
  maxdepth: 3
Time: 2.164104
  inferstep time: 1.810058
  node_find time: 0.008163
  node_crea time: 0.23425
    pred time: 0.119249
    thmpred time: 0.000005
    mc time: 0.117549
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "GREATER_DEF", DB.fetch "arithmetic" "GREATER_OR_EQ", DB.fetch "arithmetic" "NOT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_GREATER_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_SUB", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS"] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "LT_MULT_CANCEL_RBARE", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "LESS_MULT2", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "SUB_LESS_0"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.LESS_0],
  boolLib.REWRITE_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE"],
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "LT_MULT_LCANCEL", DB.fetch "arithmetic" "LT_MULT_RCANCEL", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "ZERO_LESS_MULT", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE"],
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ"],
  metisTools.METIS_TAC [prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ZERO_LESS_ADD", DB.fetch "arithmetic" "PRE_SUC_EQ"]]
end
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.093174

SUB_RIGHT_GREATER
proof length: 4
proof time: 0.09408
Statistics
  infstep : 81
  nodes   : 27
  maxdepth: 4
Time: 1.969133
  inferstep time: 1.526133
  node_find time: 0.02109
  node_crea time: 0.318405
    pred time: 0.158229
    thmpred time: 0.000006
    mc time: 0.098416
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "GREATER_DEF", DB.fetch "arithmetic" "GREATER_OR_EQ", DB.fetch "arithmetic" "NOT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_GREATER_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_SUB"] THEN boolLib.REPEAT boolLib.STRIP_TAC THEN
  boolLib.PURE_REWRITE_TAC [(DB.fetch "arithmetic" "LESS_EQ"), HolKernel.SYM (boolLib.SPEC_ALL (HolKernel.CONJUNCT2 (DB.fetch "arithmetic" "ADD")))] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "ADD_MONO_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LESS_EQUAL_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_EXISTS", DB.fetch "arithmetic" "LESS_EQ_EXISTS"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.095921

SUB_LEFT_EQ
proof length: 9
proof time: 0.331502
Statistics
  infstep : 14
  nodes   : 11
  maxdepth: 2
Time: 1.127159
  inferstep time: 0.983208
  node_find time: 0.003026
  node_crea time: 0.080354
    pred time: 0.036387
    thmpred time: 0.000003
    mc time: 0.059566
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")], metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.069031

SUB_RIGHT_EQ
proof length: 9
proof time: 0.263853
Statistics
  infstep : 17
  nodes   : 11
  maxdepth: 2
Time: 1.129104
  inferstep time: 0.959606
  node_find time: 0.004412
  node_crea time: 0.085696
    pred time: 0.037813
    thmpred time: 0.000003
    mc time: 0.072691
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "ADD_CLAUSES"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "LESS_EQ_0"), numTheory.NOT_SUC], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")]]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.226517
Replaying proof: 0.000115
Replaying proof: 0.000063
Replaying proof: 0.000262
Replaying proof: 0.000092
Replaying proof: 0.000132

DA
Statistics
  infstep : 517
  nodes   : 92
  maxdepth: 5
Time: 10.016817
  inferstep time: 8.568614
  node_find time: 0.142088
  node_crea time: 0.839286
    pred time: 0.272327
    thmpred time: 0.000027
    mc time: 0.337381
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.270348
Replaying proof: 0.000132
Replaying proof: 0.000405

MOD_ONE
Statistics
  infstep : 735
  nodes   : 90
  maxdepth: 5
Time: 10.000672
  inferstep time: 8.164781
  node_find time: 0.186823
  node_crea time: 1.064958
    pred time: 0.379713
    thmpred time: 0.000017
    mc time: 0.345832
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061112
Replaying proof: 0.000275
Replaying proof: 0.000268
Replaying proof: 0.001341
Replaying proof: 0.000134
Replaying proof: 0.000375

DIV_MULT
proof length: 1
proof time: 0.049399
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.097522
  inferstep time: 0.081553
  node_find time: 0.000336
  node_crea time: 0.010148
    pred time: 0.002947
    thmpred time: 0.0
    mc time: 0.007187
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "DIV_UNIQUE" , DB.fetch "arithmetic" "tactictoe_thm_15" , DB.fetch "arithmetic" "DA" , DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "tactictoe_thm_8" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "DIV_LESS_EQ" , DB.fetch "arithmetic" "DIV2_def" , DB.fetch "arithmetic" "tactictoe_thm_12" , DB.fetch "arithmetic" "tactictoe_thm_10" , DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB" , DB.fetch "arithmetic" "LEFT_ADD_DISTRIB" , satTheory.dc_imp , pairTheory.ABS_PAIR_THM])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.169876

LESS_MOD
proof length: 4
proof time: 0.054376
Statistics
  infstep : 211
  nodes   : 66
  maxdepth: 5
Time: 6.297906
  inferstep time: 5.402663
  node_find time: 0.053961
  node_crea time: 0.629206
    pred time: 0.24192
    thmpred time: 0.000021
    mc time: 0.223521
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.STRIP_ASSUME_TAC (DB.fetch "arithmetic" "tactictoe_thm_8") THEN
  boolLib.ASM_REWRITE_TAC [] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "tactictoe_thm_8", DB.fetch "arithmetic" "MOD_UNIQUE", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "MOD_1", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "DIV_UNIQUE", DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "tactictoe_thm_15", DB.fetch "arithmetic" "DIV_MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "tactictoe_thm_10", DB.fetch "arithmetic" "tactictoe_thm_12", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.101547

MOD_EQ_0
proof length: 2
proof time: 0.040428
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.195737
  inferstep time: 0.166368
  node_find time: 0.00101
  node_crea time: 0.017158
    pred time: 0.006017
    thmpred time: 0.000001
    mc time: 0.012077
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MOD_UNIQUE", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "MOD_1", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "LESS_MOD", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "tactictoe_thm_12", DB.fetch "arithmetic" "DIV_UNIQUE", DB.fetch "arithmetic" "tactictoe_thm_8", DB.fetch "arithmetic" "tactictoe_thm_10", DB.fetch "arithmetic" "tactictoe_thm_15", DB.fetch "arithmetic" "DIV_LESS_EQ", relationTheory.IN_RDOM_DELETE, DB.fetch "arithmetic" "MULT_CLAUSES"]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.232928

ZERO_MOD
proof length: 1
proof time: 0.049903
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.083241
  inferstep time: 0.069748
  node_find time: 0.000267
  node_crea time: 0.008674
    pred time: 0.002692
    thmpred time: 0.0
    mc time: 0.00547
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "MOD_EQ_0" , DB.fetch "arithmetic" "MOD_1" , DB.fetch "arithmetic" "MOD_ONE" , DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "LESS_MOD" , DB.fetch "arithmetic" "DA" , DB.fetch "arithmetic" "INV_PRE_EQ" , DB.fetch "arithmetic" "INV_PRE_LESS" , DB.fetch "arithmetic" "INV_PRE_LESS_EQ" , DB.fetch "arithmetic" "PRE_SUC_EQ" , DB.fetch "arithmetic" "tactictoe_thm_12" , DB.fetch "arithmetic" "DIV_LESS_EQ" , DB.fetch "arithmetic" "EVEN_EXP" , DB.fetch "arithmetic" "LESS_MULT2" , DB.fetch "arithmetic" "ODD_EXP"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067538

ZERO_DIV
proof length: 2
proof time: 0.040615
Statistics
  infstep : 11
  nodes   : 5
  maxdepth: 2
Time: 0.48644
  inferstep time: 0.436035
  node_find time: 0.002421
  node_crea time: 0.032061
    pred time: 0.013791
    thmpred time: 0.000001
    mc time: 0.014125
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "DIV_LESS_EQ", DB.fetch "arithmetic" "DIV_MULT", DB.fetch "arithmetic" "DIV_UNIQUE", DB.fetch "arithmetic" "tactictoe_thm_15", DB.fetch "arithmetic" "DIV2_def", DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "MOD_EQ_0"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.087365

MOD_MULT
proof length: 1
proof time: 0.078423
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.116942
  inferstep time: 0.095379
  node_find time: 0.000231
  node_crea time: 0.015847
    pred time: 0.008892
    thmpred time: 0.0
    mc time: 0.006836
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "DIV_UNIQUE" , DB.fetch "arithmetic" "DA" , DB.fetch "arithmetic" "DIV_MULT" , DB.fetch "arithmetic" "tactictoe_thm_15" , DB.fetch "arithmetic" "tactictoe_thm_8" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "MULT" , DB.fetch "arithmetic" "MOD_EQ_0" , DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "LESS_MOD" , DB.fetch "arithmetic" "ZERO_MOD" , DB.fetch "arithmetic" "MOD_1" , DB.fetch "arithmetic" "MOD_ONE" , DB.fetch "arithmetic" "tactictoe_thm_12" , DB.fetch "arithmetic" "tactictoe_thm_10"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091113
Replaying proof: 0.000239

MOD_TIMES_SUB
Statistics
  infstep : 430
  nodes   : 80
  maxdepth: 5
Time: 10.112638
  inferstep time: 8.579719
  node_find time: 0.119745
  node_crea time: 1.019238
    pred time: 0.354647
    thmpred time: 0.00002
    mc time: 0.350229
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.140256
Replaying proof: 0.000314

MOD_MOD
proof length: 1
proof time: 0.078056
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.106421
  inferstep time: 0.086156
  node_find time: 0.000241
  node_crea time: 0.015503
    pred time: 0.009377
    thmpred time: 0.0
    mc time: 0.005587
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "MOD_PLUS" , DB.fetch "arithmetic" "LESS_MOD" , DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "MOD_TIMES" , DB.fetch "arithmetic" "MOD_1" , DB.fetch "arithmetic" "MOD_ONE" , DB.fetch "arithmetic" "MOD_EQ_0" , DB.fetch "arithmetic" "MOD_TIMES_SUB" , DB.fetch "arithmetic" "ZERO_MOD" , DB.fetch "arithmetic" "DA" , DB.fetch "arithmetic" "tactictoe_thm_12" , DB.fetch "arithmetic" "DIV_LESS_EQ" , DB.fetch "arithmetic" "MOD_MULT" , DB.fetch "arithmetic" "DIV_UNIQUE" , DB.fetch "arithmetic" "tactictoe_thm_8"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071869
Replaying proof: 0.000367
Replaying proof: 0.002184
Replaying proof: 0.000371

MOD_MULT_MOD
Statistics
  infstep : 347
  nodes   : 94
  maxdepth: 5
Time: 10.037052
  inferstep time: 7.187173
  node_find time: 0.105425
  node_crea time: 2.418066
    pred time: 0.766307
    thmpred time: 0.00002
    mc time: 0.910643
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.402209

DIVMOD_ID
Statistics
  infstep : 531
  nodes   : 120
  maxdepth: 5
Time: 10.035759
  inferstep time: 8.203646
  node_find time: 0.151566
  node_crea time: 1.210886
    pred time: 0.388368
    thmpred time: 0.00002
    mc time: 0.435712
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.165003
Replaying proof: 0.000329
Replaying proof: 0.000494
Replaying proof: 0.000348
Replaying proof: 0.002852
Replaying proof: 0.000365
Replaying proof: 0.000417

SUC_PRE
proof length: 3
proof time: 0.102166
Statistics
  infstep : 44
  nodes   : 8
  maxdepth: 2
Time: 0.811557
  inferstep time: 0.678619
  node_find time: 0.010374
  node_crea time: 0.066374
    pred time: 0.024883
    thmpred time: 0.000003
    mc time: 0.031934
    inst time: 0.0
Proof found: boolLib.STRUCT_CASES_TAC (HolKernel.SPEC ((Parse.Term [HolKernel.QUOTE " (*#loc 1 15871*)m:num"])) (DB.fetch "arithmetic" "num_CASES")) THENL [metisTools.METIS_TAC [prim_recTheory.PRE, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_FUN, DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_SUB1", prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "PRE_LESS_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0], metisTools.METIS_TAC [prim_recTheory.PRE, prim_recTheory.LESS_0, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", prim_recTheory.PRE_DEF, prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_FUN, DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_LESS_EQ", DB.fetch "arithmetic" "PRE_SUB1", prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "ZERO_LESS_EXP", prim_recTheory.LESS_0_0]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.051255
Replaying proof: 0.000596

MOD_LESS
proof length: 1
proof time: 0.024482
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.109891
  inferstep time: 0.092392
  node_find time: 0.000224
  node_crea time: 0.008996
    pred time: 0.002421
    thmpred time: 0.0
    mc time: 0.008383
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "ADD_DIV_RWT" , DB.fetch "arithmetic" "MOD_MULT_MOD" , DB.fetch "arithmetic" "MOD_TIMES" , DB.fetch "arithmetic" "DIVMOD_ID" , DB.fetch "arithmetic" "MOD_MOD" , DB.fetch "arithmetic" "MOD_PLUS" , DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "LESS_MOD" , DB.fetch "arithmetic" "MOD_1" , DB.fetch "arithmetic" "MOD_ONE" , DB.fetch "arithmetic" "MOD_EQ_0" , DB.fetch "arithmetic" "MOD_TIMES_SUB" , DB.fetch "arithmetic" "ZERO_MOD" , DB.fetch "arithmetic" "MOD_MULT" , DB.fetch "arithmetic" "tactictoe_thm_16"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016767

ADD_MODULUS
Statistics
  infstep : 672
  nodes   : 114
  maxdepth: 5
Time: 10.000566
  inferstep time: 8.11267
  node_find time: 0.183787
  node_crea time: 1.171713
    pred time: 0.419007
    thmpred time: 0.000028
    mc time: 0.337204
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.079167
Replaying proof: 0.000731

DIV_P_UNIV
proof length: 1
proof time: 0.100943
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.132997
  inferstep time: 0.117308
  node_find time: 0.000303
  node_crea time: 0.010116
    pred time: 0.00314
    thmpred time: 0.000001
    mc time: 0.006894
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "DIV_P" , DB.fetch "arithmetic" "DIV_UNIQUE" , DB.fetch "arithmetic" "tactictoe_thm_15" , DB.fetch "arithmetic" "ADD_DIV_ADD_DIV" , DB.fetch "arithmetic" "DIV_DIV_DIV_MULT" , DB.fetch "arithmetic" "LESS_DIV_EQ_ZERO" , DB.fetch "arithmetic" "DIV_MULT" , DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "ADD_DIV_RWT" , DB.fetch "arithmetic" "DIVMOD_ID" , DB.fetch "arithmetic" "DIV_LESS" , DB.fetch "arithmetic" "DIV_LESS_EQ" , DB.fetch "arithmetic" "DA" , DB.fetch "arithmetic" "MOD_TIMES" , DB.fetch "arithmetic" "MOD_UNIQUE" , DB.fetch "arithmetic" "MOD_MULT"])
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.402362
Replaying proof: 0.000644

MOD_P_UNIV
proof length: 2
proof time: 0.100572
Statistics
  infstep : 17
  nodes   : 7
  maxdepth: 2
Time: 0.451827
  inferstep time: 0.357586
  node_find time: 0.004406
  node_crea time: 0.054222
    pred time: 0.018961
    thmpred time: 0.000001
    mc time: 0.026684
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "MOD_P", DB.fetch "arithmetic" "MOD_TIMES", DB.fetch "arithmetic" "MOD_UNIQUE", DB.fetch "arithmetic" "MOD_MULT", DB.fetch "arithmetic" "MOD_MULT_MOD", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "MOD_PLUS", DB.fetch "arithmetic" "ADD_MODULUS_LEFT", DB.fetch "arithmetic" "ADD_MODULUS_RIGHT", DB.fetch "arithmetic" "MOD_LESS", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "MOD_MOD", DB.fetch "arithmetic" "LESS_MOD", DB.fetch "arithmetic" "DIV_P_UNIV"]
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.391053
Replaying proof: 0.00172

MOD_COMMON_FACTOR
Statistics
  infstep : 570
  nodes   : 103
  maxdepth: 5
Time: 10.004411
  inferstep time: 8.158773
  node_find time: 0.178105
  node_crea time: 1.177926
    pred time: 0.317428
    thmpred time: 0.000023
    mc time: 0.382872
    inst time: 0.0
Proof status: Time Out
Org tac number: 19
Original proof time: 0.0
Replaying proof: 0.91708

X_MOD_Y_EQ_X
proof length: 1
proof time: 0.087014
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.113928
  inferstep time: 0.09978
  node_find time: 0.00025
  node_crea time: 0.009104
    pred time: 0.002768
    thmpred time: 0.000001
    mc time: 0.005787
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MOD_P" , DB.fetch "arithmetic" "MOD_P_UNIV" , DB.fetch "arithmetic" "ADD_MODULUS" , DB.fetch "arithmetic" "ADD_MODULUS_LEFT" , DB.fetch "arithmetic" "ADD_MODULUS_RIGHT" , DB.fetch "arithmetic" "MOD_MULT_MOD" , DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "MOD_PLUS" , DB.fetch "arithmetic" "MOD_MOD" , DB.fetch "arithmetic" "DIVMOD_ID" , DB.fetch "arithmetic" "MOD_TIMES" , DB.fetch "arithmetic" "ADD_DIV_RWT" , DB.fetch "arithmetic" "MOD_COMMON_FACTOR" , DB.fetch "arithmetic" "MOD_TIMES2" , DB.fetch "arithmetic" "MOD_LESS" , DB.fetch "arithmetic" "MOD_UNIQUE"])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.172454
Replaying proof: 0.00321

LE_LT1
proof length: 2
proof time: 0.074492
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.267046
  inferstep time: 0.218959
  node_find time: 0.001094
  node_crea time: 0.023801
    pred time: 0.009179
    thmpred time: 0.000001
    mc time: 0.023604
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [prim_recTheory.PRE, (DB.fetch "arithmetic" "ONE"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "LESS_EQ_ADD")] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", prim_recTheory.LESS_THM, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP, prim_recTheory.LESS_SUC_REFL, prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_LESS_SUC", DB.fetch "arithmetic" "LESS_SUC_NOT", prim_recTheory.LESS_SUC_SUC, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "MULT_LESS_EQ_SUC", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.1227

X_LE_DIV
Statistics
  infstep : 546
  nodes   : 96
  maxdepth: 5
Time: 10.105367
  inferstep time: 8.475142
  node_find time: 0.168192
  node_crea time: 0.946351
    pred time: 0.306941
    thmpred time: 0.000031
    mc time: 0.358114
    inst time: 0.0
Proof status: Time Out
Org tac number: 20
Original proof time: 0.0
Replaying proof: 0.584127

X_LT_DIV
Statistics
  infstep : 516
  nodes   : 134
  maxdepth: 5
Time: 10.000803
  inferstep time: 7.973117
  node_find time: 0.18048
  node_crea time: 1.355519
    pred time: 0.392337
    thmpred time: 0.000019
    mc time: 0.543289
    inst time: 0.0
Proof status: Time Out
Org tac number: 22
Original proof time: 0.0
Replaying proof: 0.621154

DIV_LT_X
Statistics
  infstep : 476
  nodes   : 134
  maxdepth: 7
Time: 10.01519
  inferstep time: 7.899303
  node_find time: 0.148496
  node_crea time: 1.514768
    pred time: 0.437101
    thmpred time: 0.000026
    mc time: 0.628947
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.129406

DIV_LE_X
proof length: 1
proof time: 0.002248
Statistics
  infstep : 86
  nodes   : 32
  maxdepth: 4
Time: 3.109046
  inferstep time: 2.613917
  node_find time: 0.024016
  node_crea time: 0.367751
    pred time: 0.106941
    thmpred time: 0.000009
    mc time: 0.15247
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "arithmetic" "DIV_LESS_EQ" , DB.fetch "arithmetic" "X_LT_DIV" , DB.fetch "arithmetic" "tactictoe_thm_10" , DB.fetch "arithmetic" "DIV_LE_MONOTONE" , DB.fetch "arithmetic" "LE_LT1" , DB.fetch "arithmetic" "LESS_ADD_1" , DB.fetch "arithmetic" "ADD1" , DB.fetch "arithmetic" "DIVMOD_ID" , DB.fetch "arithmetic" "DIV_LESS" , DB.fetch "arithmetic" "DIV_1" , DB.fetch "arithmetic" "X_LE_DIV" , DB.fetch "arithmetic" "DIV_LT_X" , DB.fetch "arithmetic" "ADD_DIV_ADD_DIV" , DB.fetch "arithmetic" "DIV_P" , DB.fetch "arithmetic" "DIV_P_UNIV" , DB.fetch "arithmetic" "DIVISION" ])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.129032

DIV_EQ_X
Statistics
  infstep : 479
  nodes   : 146
  maxdepth: 6
Time: 10.000147
  inferstep time: 7.645929
  node_find time: 0.159003
  node_crea time: 1.722738
    pred time: 0.447583
    thmpred time: 0.000029
    mc time: 0.76175
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009139

DIV_MOD_MOD_DIV
Statistics
  infstep : 662
  nodes   : 133
  maxdepth: 6
Time: 10.088866
  inferstep time: 7.703932
  node_find time: 0.214056
  node_crea time: 1.544013
    pred time: 0.368813
    thmpred time: 0.000032
    mc time: 0.67063
    inst time: 0.0
Proof status: Time Out
Org tac number: 18
Original proof time: 0.0
Replaying proof: 0.52894

MULT_EQ_DIV
Statistics
  infstep : 442
  nodes   : 137
  maxdepth: 6
Time: 10.015785
  inferstep time: 7.725892
  node_find time: 0.147308
  node_crea time: 1.706748
    pred time: 0.468582
    thmpred time: 0.000016
    mc time: 0.747315
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.329511

NUMERAL_MULT_EQ_DIV
Statistics
  infstep : 554
  nodes   : 129
  maxdepth: 6
Time: 10.005117
  inferstep time: 7.862799
  node_find time: 0.18466
  node_crea time: 1.411855
    pred time: 0.373778
    thmpred time: 0.000028
    mc time: 0.603965
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.078888

MOD_EQ_0_DIVISOR
Statistics
  infstep : 432
  nodes   : 120
  maxdepth: 7
Time: 10.089236
  inferstep time: 7.971489
  node_find time: 0.144712
  node_crea time: 1.523643
    pred time: 0.431156
    thmpred time: 0.000025
    mc time: 0.639392
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.271406

MOD_SUC
Statistics
  infstep : 431
  nodes   : 135
  maxdepth: 5
Time: 10.049021
  inferstep time: 7.746847
  node_find time: 0.153156
  node_crea time: 1.688694
    pred time: 0.456038
    thmpred time: 0.000024
    mc time: 0.726741
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.765645

MOD_SUC_IFF
Statistics
  infstep : 487
  nodes   : 112
  maxdepth: 5
Time: 10.042795
  inferstep time: 8.019815
  node_find time: 0.170591
  node_crea time: 1.343454
    pred time: 0.322062
    thmpred time: 0.000038
    mc time: 0.639981
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010376

ONE_MOD
proof length: 2
proof time: 0.001058
Statistics
  infstep : 71
  nodes   : 10
  maxdepth: 3
Time: 1.10036
  inferstep time: 0.867791
  node_find time: 0.025672
  node_crea time: 0.10817
    pred time: 0.040338
    thmpred time: 0.000003
    mc time: 0.049868
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "EXP"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ONE"), prim_recTheory.LESS_0, (DB.fetch "arithmetic" "LESS_MONO_EQ")] THEN mesonLib.MESON_TAC [(DB.fetch "arithmetic" "LESS_MOD")]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.348264

ONE_MOD_IFF
Statistics
  infstep : 558
  nodes   : 81
  maxdepth: 5
Time: 10.013004
  inferstep time: 8.159433
  node_find time: 0.19932
  node_crea time: 1.020567
    pred time: 0.328198
    thmpred time: 0.00003
    mc time: 0.436661
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.413858

MOD_LESS_EQ
Statistics
  infstep : 504
  nodes   : 115
  maxdepth: 6
Time: 10.025566
  inferstep time: 7.484668
  node_find time: 0.217155
  node_crea time: 1.716554
    pred time: 0.451495
    thmpred time: 0.000035
    mc time: 0.812047
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.383408

MOD_LIFT_PLUS
Statistics
  infstep : 338
  nodes   : 85
  maxdepth: 5
Time: 10.11708
  inferstep time: 7.343625
  node_find time: 0.156634
  node_crea time: 2.17421
    pred time: 0.665636
    thmpred time: 0.000038
    mc time: 0.96326
    inst time: 0.0
Proof status: Time Out
Org tac number: 23
Original proof time: 0.0
Replaying proof: 0.957542

MOD_LIFT_PLUS_IFF
Statistics
  infstep : 462
  nodes   : 113
  maxdepth: 5
Time: 10.023097
  inferstep time: 7.806007
  node_find time: 0.181127
  node_crea time: 1.488971
    pred time: 0.398177
    thmpred time: 0.000028
    mc time: 0.681172
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016349

SUC_ELIM_THM
Statistics
  infstep : 740
  nodes   : 116
  maxdepth: 6
Time: 10.076445
  inferstep time: 7.498775
  node_find time: 0.29748
  node_crea time: 1.34749
    pred time: 0.263938
    thmpred time: 0.000025
    mc time: 0.711381
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.479734

SUC_ELIM_NUMERALS
Statistics
  infstep : 701
  nodes   : 101
  maxdepth: 5
Time: 10.000414
  inferstep time: 7.763645
  node_find time: 0.266089
  node_crea time: 1.165621
    pred time: 0.294311
    thmpred time: 0.000025
    mc time: 0.455637
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.224003
Replaying proof: 0.000077
Replaying proof: 0.000732

PRE_ELIM_THM
proof length: 7
proof time: 0.06235
Statistics
  infstep : 562
  nodes   : 71
  maxdepth: 5
Time: 8.270039
  inferstep time: 6.321604
  node_find time: 0.217572
  node_crea time: 0.983114
    pred time: 0.323209
    thmpred time: 0.000023
    mc time: 0.367884
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRIM_REC_FUN, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "FORALL_NUM_THM", prim_recTheory.DC, numTheory.INDUCTION, prim_recTheory.num_Axiom, prim_recTheory.num_Axiom_old, DB.fetch "arithmetic" "SUB_ELIM_THM", prim_recTheory.PRIM_REC_EQN, DB.fetch "arithmetic" "PRE_SUC_EQ", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "SUC_PRE", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ"] THEN Q.SPEC_THEN [HolKernel.QUOTE " (*#loc 1 40273*)n"] boolLib.STRUCT_CASES_TAC (DB.fetch "arithmetic" "num_CASES") THENL
  [boolLib.REWRITE_TAC [prim_recTheory.PRE_DEF, prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "FORALL_NUM_THM", prim_recTheory.DC, numTheory.INDUCTION, prim_recTheory.num_Axiom, prim_recTheory.num_Axiom_old, DB.fetch "arithmetic" "SUB_ELIM_THM", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "num_case_compute", combinTheory.UPDATE_def, relationTheory.RESTRICT_DEF, satTheory.dc_cond, DB.fetch "arithmetic" "num_case_cong", DB.fetch "arithmetic" "num_case_def"] THEN
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "INV_SUC_EQ"), boolLib.GSYM numTheory.NOT_SUC],
  boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "num_case_def"), numTheory.NOT_SUC, prim_recTheory.PRE] THEN
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "INV_SUC_EQ"), boolLib.GSYM numTheory.NOT_SUC] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_8", prim_recTheory.PRE_DEF, combinTheory.UPDATE_def, pairTheory.LEX_DEF, prim_recTheory.RTC_IM_TC, prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_2, DB.fetch "arithmetic" "num_case_compute", prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.LESS_ALT, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.WF_PRED, prim_recTheory.SIMP_REC_REL, prim_recTheory.LESS_DEF]]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.238898

MULT_INCREASES
proof length: 1
proof time: 0.056904
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.1397
  inferstep time: 0.117506
  node_find time: 0.000683
  node_crea time: 0.013837
    pred time: 0.003281
    thmpred time: 0.0
    mc time: 0.010493
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE" , DB.fetch "arithmetic" "DIV_LESS" , DB.fetch "arithmetic" "ONE_MOD_IFF" , DB.fetch "arithmetic" "ONE_MOD" , DB.fetch "arithmetic" "LESS_OR" , DB.fetch "arithmetic" "OR_LESS" , DB.fetch "arithmetic" "LESS_EQ" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "NOT_GREATER_EQ" , DB.fetch "arithmetic" "NOT_LEQ" , DB.fetch "arithmetic" "NOT_NUM_EQ" , DB.fetch "arithmetic" "NOT_SUC_LESS_EQ" , DB.fetch "arithmetic" "LE_MULT_CANCEL_RBARE" , DB.fetch "arithmetic" "MULT_CLAUSES" , DB.fetch "arithmetic" "MULT_EQ_ID"])
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.284304

EXP_ALWAYS_BIG_ENOUGH
Statistics
  infstep : 532
  nodes   : 111
  maxdepth: 5
Time: 10.002807
  inferstep time: 7.733582
  node_find time: 0.223606
  node_crea time: 1.360137
    pred time: 0.356299
    thmpred time: 0.000028
    mc time: 0.597437
    inst time: 0.0
Proof status: Time Out
Org tac number: 20
Original proof time: 0.0
Replaying proof: 0.515242

EXP_EQ_0
proof length: 9
proof time: 0.100644
Statistics
  infstep : 418
  nodes   : 72
  maxdepth: 4
Time: 6.228934
  inferstep time: 4.81741
  node_find time: 0.14918
  node_crea time: 0.693638
    pred time: 0.195717
    thmpred time: 0.000009
    mc time: 0.354098
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "EXP"), (DB.fetch "arithmetic" "ONE"), (DB.fetch "arithmetic" "EVEN"), (DB.fetch "arithmetic" "EVEN_MULT"), prim_recTheory.LESS_0, prim_recTheory.LESS_REFL] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "DIV_ONE", prim_recTheory.LESS_0_0, DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "NOT_EXP_0", numTheory.NOT_SUC, DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "SUC_NOT", DB.fetch "arithmetic" "MOD_SUC_IFF", DB.fetch "arithmetic" "ODD", prim_recTheory.tactictoe_thm_0],
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", prim_recTheory.LESS_0, DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "MOD_SUC"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", DB.fetch "arithmetic" "DIV_DIV_DIV_MULT", DB.fetch "arithmetic" "DIV_MOD_MOD_DIV"]]
end, boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "MOD_SUC"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "MOD_SUC_IFF", DB.fetch "arithmetic" "NOT_LT_ZERO_EQ_ZERO", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "SUC_PRE", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "DIV_DIV_DIV_MULT", DB.fetch "arithmetic" "DIV_MOD_MOD_DIV", DB.fetch "arithmetic" "tactictoe_thm_25", DB.fetch "arithmetic" "DIV_P_UNIV", DB.fetch "arithmetic" "INV_PRE_EQ"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", prim_recTheory.PRE, DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "PRE_ELIM_THM", prim_recTheory.PRIM_REC_EQN, prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "SUC_PRE", DB.fetch "arithmetic" "INV_PRE_EQ", DB.fetch "arithmetic" "INV_PRE_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "num_case_compute", DB.fetch "arithmetic" "PRE_SUB", DB.fetch "arithmetic" "PRE_LESS_EQ", prim_recTheory.PRIM_REC, DB.fetch "arithmetic" "PRE_SUB1", prim_recTheory.PRIM_REC_FUN]]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.224801

ZERO_LT_EXP
proof length: 4
proof time: 0.153105
Statistics
  infstep : 324
  nodes   : 52
  maxdepth: 4
Time: 5.592959
  inferstep time: 4.460304
  node_find time: 0.118919
  node_crea time: 0.566937
    pred time: 0.190165
    thmpred time: 0.000013
    mc time: 0.250556
    inst time: 0.0
Proof found: boolLib.EQ_TAC THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EXP_EQ_0", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "LESS_0_CASES", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "ZERO_LESS_ADD"], boolLib.REWRITE_TAC [(DB.fetch "arithmetic" "EXP"), boolLib.GSYM (DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"), (DB.fetch "arithmetic" "ONE"), numTheory.NOT_SUC, (DB.fetch "arithmetic" "MULT_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_EQ_0", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.dc_imp, satTheory.OR_DUAL]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.046913

EXP_1
proof length: 4
proof time: 0.130365
Statistics
  infstep : 78
  nodes   : 17
  maxdepth: 3
Time: 1.709412
  inferstep time: 1.328356
  node_find time: 0.036447
  node_crea time: 0.195773
    pred time: 0.06405
    thmpred time: 0.000004
    mc time: 0.10628
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "EXP"), (DB.fetch "arithmetic" "ONE"), (DB.fetch "arithmetic" "EVEN"), (DB.fetch "arithmetic" "EVEN_MULT"), prim_recTheory.LESS_0, prim_recTheory.LESS_REFL] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "DIV_ONE", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "FACT", DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "MULT_SUC_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "MULT_EXP_MONO", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH", DB.fetch "arithmetic" "LESS_EXP_SUC_MONO", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EXP_EQ_0", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "ZERO_LT_EXP", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "FACT"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.113601

EXP_EQ_1
Statistics
  infstep : 610
  nodes   : 136
  maxdepth: 5
Time: 10.015458
  inferstep time: 7.635341
  node_find time: 0.239864
  node_crea time: 1.326557
    pred time: 0.360723
    thmpred time: 0.000028
    mc time: 0.608042
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.265032
Replaying proof: 0.012489
Replaying proof: 0.023792

EXP_BASE_LE_MONO
Statistics
  infstep : 455
  nodes   : 144
  maxdepth: 6
Time: 10.009083
  inferstep time: 7.515589
  node_find time: 0.179147
  node_crea time: 1.716723
    pred time: 0.420649
    thmpred time: 0.000018
    mc time: 0.764686
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.044419

EXP_BASE_LT_MONO
proof length: 2
proof time: 0.023517
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.353667
  inferstep time: 0.292164
  node_find time: 0.002668
  node_crea time: 0.037945
    pred time: 0.015743
    thmpred time: 0.000002
    mc time: 0.018913
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN metisLib.METIS_TAC [(DB.fetch "arithmetic" "tactictoe_thm_27"), (DB.fetch "arithmetic" "tactictoe_thm_28"), (DB.fetch "arithmetic" "NOT_LESS_EQUAL")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.047095

EXP_BASE_INJECTIVE
Statistics
  infstep : 424
  nodes   : 132
  maxdepth: 6
Time: 10.048835
  inferstep time: 7.864702
  node_find time: 0.163392
  node_crea time: 1.465827
    pred time: 0.381582
    thmpred time: 0.000025
    mc time: 0.65236
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.027365

EXP_BASE_LEQ_MONO_IMP
Statistics
  infstep : 354
  nodes   : 109
  maxdepth: 6
Time: 10.018682
  inferstep time: 7.962412
  node_find time: 0.14174
  node_crea time: 1.417322
    pred time: 0.520282
    thmpred time: 0.000032
    mc time: 0.467242
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.156731

EXP_BASE_LE_IFF
Statistics
  infstep : 389
  nodes   : 109
  maxdepth: 6
Time: 10.095612
  inferstep time: 8.055089
  node_find time: 0.159982
  node_crea time: 1.344648
    pred time: 0.382978
    thmpred time: 0.000028
    mc time: 0.55137
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.394799

X_LE_X_EXP
Statistics
  infstep : 557
  nodes   : 116
  maxdepth: 6
Time: 10.030349
  inferstep time: 7.703031
  node_find time: 0.22433
  node_crea time: 1.424231
    pred time: 0.431799
    thmpred time: 0.000025
    mc time: 0.632282
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.098012

X_LT_EXP_X
Statistics
  infstep : 446
  nodes   : 104
  maxdepth: 5
Time: 10.009421
  inferstep time: 7.980078
  node_find time: 0.183917
  node_crea time: 1.254554
    pred time: 0.374928
    thmpred time: 0.000018
    mc time: 0.501349
    inst time: 0.0
Proof status: Time Out
Org tac number: 29
Original proof time: 0.0
Replaying proof: 0.941195

ZERO_EXP
proof length: 3
proof time: 0.002502
Statistics
  infstep : 80
  nodes   : 13
  maxdepth: 3
Time: 1.191775
  inferstep time: 0.921828
  node_find time: 0.029475
  node_crea time: 0.114108
    pred time: 0.028995
    thmpred time: 0.000001
    mc time: 0.066653
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "num_case_compute", prim_recTheory.PRE_DEF, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_BASE_LE_IFF", DB.fetch "arithmetic" "EXP_EQ_1", DB.fetch "arithmetic" "X_LT_EXP_X", DB.fetch "arithmetic" "EXP_1", DB.fetch "arithmetic" "EXP_BASE_LE_MONO", DB.fetch "arithmetic" "EXP_BASE_INJECTIVE", DB.fetch "arithmetic" "EXP_BASE_LT_MONO", DB.fetch "arithmetic" "tactictoe_thm_27", DB.fetch "arithmetic" "tactictoe_thm_28", DB.fetch "arithmetic" "tactictoe_thm_29", DB.fetch "arithmetic" "tactictoe_thm_30"] THEN boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LT_EXP", DB.fetch "arithmetic" "X_LE_X_EXP", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_BASE_LE_IFF", DB.fetch "arithmetic" "EXP_EQ_1", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "EXP_EQ_0", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "ODD_EXP_IFF", DB.fetch "arithmetic" "EXP_BASE_LEQ_MONO_IMP", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "ODD_EXP", DB.fetch "arithmetic" "ZERO_LESS_EXP", DB.fetch "arithmetic" "X_LT_EXP_X", DB.fetch "arithmetic" "EXP_1"] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038122

X_LT_EXP_X_IFF
Statistics
  infstep : 390
  nodes   : 107
  maxdepth: 5
Time: 10.03122
  inferstep time: 8.090756
  node_find time: 0.158409
  node_crea time: 1.217984
    pred time: 0.331507
    thmpred time: 0.000032
    mc time: 0.576995
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.438964
Replaying proof: 0.03165
Replaying proof: 0.022423
Replaying proof: 0.004158
Replaying proof: 0.003388

EXP_EXP_LT_MONO
Statistics
  infstep : 544
  nodes   : 138
  maxdepth: 6
Time: 10.000862
  inferstep time: 7.68621
  node_find time: 0.231324
  node_crea time: 1.294782
    pred time: 0.311309
    thmpred time: 0.000025
    mc time: 0.662879
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.051023

EXP_EXP_LE_MONO
Statistics
  infstep : 414
  nodes   : 134
  maxdepth: 6
Time: 10.001087
  inferstep time: 7.941099
  node_find time: 0.182445
  node_crea time: 1.282875
    pred time: 0.411219
    thmpred time: 0.000031
    mc time: 0.515428
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.087899

EXP_EXP_INJECTIVE
Statistics
  infstep : 492
  nodes   : 98
  maxdepth: 5
Time: 10.078113
  inferstep time: 8.118008
  node_find time: 0.203928
  node_crea time: 1.013671
    pred time: 0.313063
    thmpred time: 0.00002
    mc time: 0.404696
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.057846

EXP_SUB
Statistics
  infstep : 376
  nodes   : 96
  maxdepth: 5
Time: 10.096629
  inferstep time: 7.771415
  node_find time: 0.165051
  node_crea time: 1.568913
    pred time: 0.468401
    thmpred time: 0.000021
    mc time: 0.646494
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.315725

EXP_SUB_NUMERAL
Statistics
  infstep : 467
  nodes   : 97
  maxdepth: 5
Time: 10.017743
  inferstep time: 7.880791
  node_find time: 0.195732
  node_crea time: 1.281058
    pred time: 0.32285
    thmpred time: 0.000039
    mc time: 0.600896
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.414315

EXP_BASE_MULT
Statistics
  infstep : 418
  nodes   : 109
  maxdepth: 5
Time: 10.079294
  inferstep time: 7.738572
  node_find time: 0.181436
  node_crea time: 1.421233
    pred time: 0.340162
    thmpred time: 0.000015
    mc time: 0.720564
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.069948

EXP_EXP_MULT
proof length: 4
proof time: 0.10712
Statistics
  infstep : 8
  nodes   : 6
  maxdepth: 3
Time: 0.499907
  inferstep time: 0.403942
  node_find time: 0.003109
  node_crea time: 0.052138
    pred time: 0.014457
    thmpred time: 0.000001
    mc time: 0.044249
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_0", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_BASE_MULT", DB.fetch "arithmetic" "EXP_ADD", DB.fetch "arithmetic" "ZERO_LT_EXP", DB.fetch "arithmetic" "EXP_EXP_INJECTIVE", DB.fetch "arithmetic" "X_LT_EXP_X_IFF", DB.fetch "arithmetic" "X_LE_X_EXP", DB.fetch "arithmetic" "EXP_EQ_0", DB.fetch "arithmetic" "EXP_EXP_LE_MONO", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EXP_EQ_1", DB.fetch "arithmetic" "EXP_EXP_LT_MONO", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "ODD_EXP_IFF"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "MULT_SUC_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "EXP_BASE_MULT", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_ADD"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041051

MAX_COMM
proof length: 9
proof time: 0.16168
Statistics
  infstep : 162
  nodes   : 33
  maxdepth: 3
Time: 3.497356
  inferstep time: 2.786252
  node_find time: 0.067781
  node_crea time: 0.325841
    pred time: 0.097266
    thmpred time: 0.000008
    mc time: 0.150081
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "ADD_EQ_0", numTheory.NOT_SUC, DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "ADD_INV_0", DB.fetch "arithmetic" "ADD_INV_0_EQ", DB.fetch "arithmetic" "DIV_DIV_DIV_MULT", DB.fetch "arithmetic" "MULT"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES", numTheory.NOT_SUC, DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "PRE_ELIM_THM", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "PRE_SUC_EQ"] THEN
  boolLib.REWRITE_TAC [prim_recTheory.LESS_REFL, (DB.fetch "arithmetic" "SUB"), prim_recTheory.LESS_0, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", prim_recTheory.PRE, DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "PRE_ELIM_THM", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", prim_recTheory.PRE_DEF] THEN
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "NOT_LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_0"), (DB.fetch "prim_rec" "LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_1"), (DB.fetch "prim_rec" "tactictoe_thm_2"), (DB.fetch "prim_rec" "LESS_MONO_EQ")], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LE"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.115039

MIN_COMM
proof length: 5
proof time: 0.002574
Statistics
  infstep : 151
  nodes   : 33
  maxdepth: 4
Time: 2.947474
  inferstep time: 2.352953
  node_find time: 0.058251
  node_crea time: 0.283018
    pred time: 0.088097
    thmpred time: 0.000007
    mc time: 0.112962
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LE"] THEN BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ"] THENL
  [boolLib.IMP_RES_TAC (DB.fetch "arithmetic" "LESS_ANTISYM"),
  simpLib.FULL_SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "NOT_LESS")] THEN
  boolLib.IMP_RES_TAC (DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM")]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.092469

MAX_ASSOC
Statistics
  infstep : 503
  nodes   : 67
  maxdepth: 4
Time: 10.038431
  inferstep time: 8.098616
  node_find time: 0.213915
  node_crea time: 0.889968
    pred time: 0.319584
    thmpred time: 0.000021
    mc time: 0.247945
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.093898

MIN_ASSOC
Statistics
  infstep : 641
  nodes   : 78
  maxdepth: 4
Time: 10.045817
  inferstep time: 7.901193
  node_find time: 0.272821
  node_crea time: 0.925518
    pred time: 0.292291
    thmpred time: 0.000015
    mc time: 0.268146
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.095907

MIN_MAX_EQ
proof length: 3
proof time: 0.129441
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.418128
  inferstep time: 0.36503
  node_find time: 0.002057
  node_crea time: 0.028221
    pred time: 0.008463
    thmpred time: 0.000001
    mc time: 0.017561
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LE"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "MAX_ASSOC", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "MAX_COMM", DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.097549

MIN_MAX_LT
proof length: 3
proof time: 0.101161
Statistics
  infstep : 5
  nodes   : 5
  maxdepth: 2
Time: 0.377399
  inferstep time: 0.311247
  node_find time: 0.001936
  node_crea time: 0.042218
    pred time: 0.010781
    thmpred time: 0.000001
    mc time: 0.028138
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LE"] THEN (metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "LESS_ADD_NONZERO", DB.fetch "arithmetic" "LESS_CASES_IMP", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "NOT_LESS_EQUAL", DB.fetch "arithmetic" "tactictoe_thm_8", prim_recTheory.LESS_DEF, prim_recTheory.LESS_NOT_EQ, prim_recTheory.LESS_SUC_IMP, prim_recTheory.NOT_LESS_EQ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.101257

MIN_MAX_LE
proof length: 1
proof time: 0.074054
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.115166
  inferstep time: 0.098134
  node_find time: 0.000494
  node_crea time: 0.010519
    pred time: 0.003014
    thmpred time: 0.0
    mc time: 0.005279
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_MAX_EQ" , DB.fetch "arithmetic" "MIN_MAX_LT" , DB.fetch "arithmetic" "MAX_DEF" , DB.fetch "arithmetic" "MIN_DEF" , DB.fetch "arithmetic" "MAX_ASSOC" , DB.fetch "arithmetic" "MAX_COMM" , DB.fetch "arithmetic" "MIN_ASSOC" , DB.fetch "arithmetic" "MIN_COMM" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "LESS_EQ_TRANS" , DB.fetch "arithmetic" "ADD_EQ_SUB" , DB.fetch "arithmetic" "LESS_EQ_MONO" , DB.fetch "arithmetic" "ADD_MONO_LESS_EQ" , DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044083

MIN_MAX_PRED
proof length: 3
proof time: 0.101161
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.346952
  inferstep time: 0.288122
  node_find time: 0.002426
  node_crea time: 0.033347
    pred time: 0.009918
    thmpred time: 0.000001
    mc time: 0.016579
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_CLAUSES", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "NOT_EXP_0", DB.fetch "arithmetic" "LESS_MONO_EQ", DB.fetch "arithmetic" "LE"] THEN (metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_COMM", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013342

MIN_LT
proof length: 2
proof time: 0.010834
Statistics
  infstep : 15
  nodes   : 7
  maxdepth: 2
Time: 0.558634
  inferstep time: 0.443995
  node_find time: 0.00624
  node_crea time: 0.071756
    pred time: 0.026456
    thmpred time: 0.000001
    mc time: 0.026162
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "MAX_DEF"), (DB.fetch "arithmetic" "MIN_DEF")] THEN BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_EQ_TRANS"), (DB.fetch "arithmetic" "LESS_TRANS")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.064819

MAX_LT
proof length: 4
proof time: 0.049462
Statistics
  infstep : 112
  nodes   : 27
  maxdepth: 3
Time: 3.765667
  inferstep time: 3.123884
  node_find time: 0.045615
  node_crea time: 0.331509
    pred time: 0.117166
    thmpred time: 0.000011
    mc time: 0.149752
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "MAX_DEF")] THEN boolLib.ASM_CASES_TAC ((Parse.Term [HolKernel.QUOTE " (*#loc 1 18329*)m < n"])) THEN
  BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_EQ_TRANS"), (DB.fetch "arithmetic" "LESS_TRANS")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.074461

MIN_LE
proof length: 2
proof time: 0.021755
Statistics
  infstep : 6
  nodes   : 3
  maxdepth: 2
Time: 0.362913
  inferstep time: 0.318285
  node_find time: 0.00263
  node_crea time: 0.021476
    pred time: 0.006498
    thmpred time: 0.000001
    mc time: 0.012898
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MIN_LT", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "LE_MULT_RCANCEL", DB.fetch "arithmetic" "tactictoe_thm_6", DB.fetch "arithmetic" "tactictoe_thm_7", DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "EXP_BASE_LE_IFF"] THEN BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_EQ_TRANS"), (DB.fetch "arithmetic" "LESS_TRANS")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.063217

MAX_LE
proof length: 2
proof time: 0.020201
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.339737
  inferstep time: 0.291746
  node_find time: 0.002149
  node_crea time: 0.027835
    pred time: 0.0092
    thmpred time: 0.000001
    mc time: 0.013963
    inst time: 0.0
Proof found: boolLib.ASM_REWRITE_TAC [DB.fetch "arithmetic" "MAX_LT", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MAX_ASSOC", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "MAX_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_LE", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "LE_MULT_RCANCEL", DB.fetch "arithmetic" "tactictoe_thm_6", DB.fetch "arithmetic" "tactictoe_thm_7", DB.fetch "arithmetic" "LE"] THEN BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_EQ_TRANS"), (DB.fetch "arithmetic" "LESS_TRANS")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.079818

MIN_0
proof length: 4
proof time: 0.048571
Statistics
  infstep : 22
  nodes   : 10
  maxdepth: 3
Time: 0.892164
  inferstep time: 0.732369
  node_find time: 0.009112
  node_crea time: 0.081512
    pred time: 0.02399
    thmpred time: 0.000001
    mc time: 0.052465
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [DB.fetch "arithmetic" "MIN_LE", DB.fetch "arithmetic" "MIN_LT", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "DA"] THEN let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "num_case_compute", DB.fetch "arithmetic" "ZERO_EXP", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MAX_DEF", combinTheory.UPDATE_def, DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "DIV_DIV_DIV_MULT", DB.fetch "arithmetic" "DIV_MOD_MOD_DIV", DB.fetch "arithmetic" "tactictoe_thm_25", DB.fetch "arithmetic" "DIV_P_UNIV"],
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "NOT_LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_0"), (DB.fetch "prim_rec" "LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_1"), (DB.fetch "prim_rec" "tactictoe_thm_2"), (DB.fetch "prim_rec" "LESS_MONO_EQ")]]
end
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.050073

MAX_0
proof length: 4
proof time: 0.082319
Statistics
  infstep : 54
  nodes   : 15
  maxdepth: 3
Time: 1.630744
  inferstep time: 1.326122
  node_find time: 0.023238
  node_crea time: 0.158333
    pred time: 0.049149
    thmpred time: 0.000004
    mc time: 0.068829
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MAX_LE", DB.fetch "arithmetic" "MAX_LT", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "MAX_ASSOC", DB.fetch "arithmetic" "MAX_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "DIVMOD_ID"], boolLib.ASM_REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MAX_LE", DB.fetch "arithmetic" "MAX_LT", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "MAX_ASSOC", DB.fetch "arithmetic" "MAX_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "EVEN"] THEN
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "NOT_LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_0"), (DB.fetch "prim_rec" "LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_1"), (DB.fetch "prim_rec" "tactictoe_thm_2"), (DB.fetch "prim_rec" "LESS_MONO_EQ")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044847

MAX_EQ_0
proof length: 2
proof time: 0.007675
Statistics
  infstep : 11
  nodes   : 3
  maxdepth: 2
Time: 0.383303
  inferstep time: 0.330597
  node_find time: 0.004952
  node_crea time: 0.021102
    pred time: 0.005906
    thmpred time: 0.000001
    mc time: 0.013029
    inst time: 0.0
Proof found: boolLib.ASM_REWRITE_TAC [DB.fetch "arithmetic" "MAX_LE", DB.fetch "arithmetic" "MAX_LT", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "MAX_ASSOC", DB.fetch "arithmetic" "MAX_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MAX_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "DIV_DIV_DIV_MULT", DB.fetch "arithmetic" "MULT"] THEN BasicProvers.PROVE_TAC [prim_recTheory.NOT_LESS_0, (DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_OR_EQ")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035924

MIN_EQ_0
proof length: 5
proof time: 0.115262
Statistics
  infstep : 77
  nodes   : 17
  maxdepth: 3
Time: 2.20909
  inferstep time: 1.838298
  node_find time: 0.034436
  node_crea time: 0.170084
    pred time: 0.064553
    thmpred time: 0.000009
    mc time: 0.06478
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "LESS_0_CASES", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_OR_EQ_ADD", markerTheory.move_left_disj, markerTheory.move_right_disj, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, satTheory.dc_neg, satTheory.dc_cond] THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_LE", DB.fetch "arithmetic" "MIN_LT", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MIN_0", DB.fetch "arithmetic" "NOT_NUM_EQ", satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj], metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_LE", DB.fetch "arithmetic" "MIN_LT", DB.fetch "arithmetic" "MIN_MAX_LT", DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MIN_ASSOC", DB.fetch "arithmetic" "MIN_COMM", DB.fetch "arithmetic" "MIN_MAX_EQ", DB.fetch "arithmetic" "MIN_MAX_LE", DB.fetch "arithmetic" "MIN_MAX_PRED", DB.fetch "arithmetic" "MIN_0", DB.fetch "arithmetic" "NOT_NUM_EQ", satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj], simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "MAX_DEF"), (DB.fetch "arithmetic" "MIN_DEF")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "MAX_DEF", DB.fetch "arithmetic" "SUB", satTheory.dc_cond, DB.fetch "arithmetic" "SUB_LEFT_SUC", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", DB.fetch "arithmetic" "ZERO_EXP", DB.fetch "arithmetic" "SUB_LEFT_ADD", DB.fetch "arithmetic" "SUB_LEFT_SUB", DB.fetch "arithmetic" "SUB_RIGHT_ADD", combinTheory.UPDATE_def, DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "MIN_LT", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_LESS_CASES"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031972

MIN_IDEM
proof length: 1
proof time: 0.037506
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.081317
  inferstep time: 0.062262
  node_find time: 0.000572
  node_crea time: 0.011403
    pred time: 0.002729
    thmpred time: 0.0
    mc time: 0.006497
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MIN_ASSOC" , DB.fetch "arithmetic" "MIN_DEF" , DB.fetch "arithmetic" "MIN_COMM" , DB.fetch "arithmetic" "MIN_LE" , DB.fetch "arithmetic" "MIN_LT" , DB.fetch "arithmetic" "MIN_MAX_EQ" , DB.fetch "arithmetic" "MIN_MAX_LT" , DB.fetch "arithmetic" "MIN_EQ_0" , DB.fetch "arithmetic" "MIN_MAX_LE" , DB.fetch "arithmetic" "MIN_MAX_PRED" , DB.fetch "arithmetic" "MIN_0" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "MAX_DEF" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007663

MAX_IDEM
proof length: 1
proof time: 0.019632
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.081028
  inferstep time: 0.062398
  node_find time: 0.000577
  node_crea time: 0.011015
    pred time: 0.00251
    thmpred time: 0.000001
    mc time: 0.006468
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MAX_ASSOC" , DB.fetch "arithmetic" "MAX_DEF" , DB.fetch "arithmetic" "MAX_COMM" , DB.fetch "arithmetic" "MAX_LE" , DB.fetch "arithmetic" "MAX_LT" , DB.fetch "arithmetic" "MIN_MAX_EQ" , DB.fetch "arithmetic" "MIN_MAX_LT" , DB.fetch "arithmetic" "MAX_EQ_0" , DB.fetch "arithmetic" "MIN_MAX_LE" , DB.fetch "arithmetic" "MIN_MAX_PRED" , DB.fetch "arithmetic" "MAX_0" , DB.fetch "arithmetic" "NOT_LESS" , DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM" , DB.fetch "arithmetic" "LESS_OR_EQ" , DB.fetch "arithmetic" "MIN_DEF" , DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011944
Replaying proof: 0.001272

EXISTS_NUM
proof length: 6
proof time: 0.169613
Statistics
  infstep : 286
  nodes   : 48
  maxdepth: 4
Time: 3.891009
  inferstep time: 2.745017
  node_find time: 0.146095
  node_crea time: 0.529788
    pred time: 0.125607
    thmpred time: 0.000012
    mc time: 0.205947
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.EQ_TAC THENL
  [metisTools.METIS_TAC [prim_recTheory.DC, prim_recTheory.num_Axiom, prim_recTheory.SIMP_REC_REL, numTheory.INDUCTION, DB.fetch "arithmetic" "FORALL_NUM_THM", prim_recTheory.num_Axiom_old, DB.fetch "arithmetic" "PRE_ELIM_THM", DB.fetch "arithmetic" "SUB_ELIM_THM", prim_recTheory.LESS_DEF, prim_recTheory.wellfounded_def, DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "SUC_ELIM_NUMERALS", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "ODD_OR_EVEN", relationTheory.TC_CASES1_E, relationTheory.TC_CASES2_E],
  boolLib.STRIP_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", prim_recTheory.DC, prim_recTheory.num_Axiom, prim_recTheory.LESS_DEF, prim_recTheory.wellfounded_def, DB.fetch "arithmetic" "NRC", prim_recTheory.SIMP_REC, prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, DB.fetch "arithmetic" "tactictoe_thm_12", DB.fetch "arithmetic" "WOP", DB.fetch "arithmetic" "tactictoe_thm_1", DB.fetch "arithmetic" "DIV_P", DB.fetch "arithmetic" "MOD_P", DB.fetch "arithmetic" "EXISTS_GREATEST", relationTheory.RTC_CASES1, relationTheory.RTC_CASES2]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00988

FORALL_NUM
proof length: 1
proof time: 0.011265
Statistics
  infstep : 30
  nodes   : 6
  maxdepth: 2
Time: 0.520228
  inferstep time: 0.381505
  node_find time: 0.012651
  node_crea time: 0.077364
    pred time: 0.023418
    thmpred time: 0.0
    mc time: 0.033904
    inst time: 0.0
Proof found: (metisLib.METIS_TAC [ numTheory.INDUCTION ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010645

BOUNDED_FORALL_THM
proof length: 5
proof time: 0.018272
Statistics
  infstep : 314
  nodes   : 56
  maxdepth: 4
Time: 5.49289
  inferstep time: 4.015391
  node_find time: 0.144631
  node_crea time: 0.785257
    pred time: 0.218301
    thmpred time: 0.000011
    mc time: 0.339626
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "EXP_SUB_NUMERAL", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUC_ELIM_NUMERALS", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LT_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "DIV_LESS", DB.fetch "arithmetic" "MULT_INCREASES"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUC_SUB1", prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_LESS_SUC", prim_recTheory.LESS_SUC_SUC, prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_SUC_IMP, prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_SUC_NOT", DB.fetch "arithmetic" "LESS_EQ_IMP_LESS_SUC", prim_recTheory.LESS_THM] THEN
  boolLib.CCONTR_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", satTheory.AND_INV_IMP, satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.AND_INV2, DB.fetch "arithmetic" "ODD", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "LESS_LESS_SUC", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "LESS_LESS_CASES", DB.fetch "arithmetic" "SUB_LEFT_SUC"]]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.346315

BOUNDED_EXISTS_THM
proof length: 3
proof time: 0.107809
Statistics
  infstep : 13
  nodes   : 8
  maxdepth: 3
Time: 0.812412
  inferstep time: 0.660144
  node_find time: 0.005421
  node_crea time: 0.085736
    pred time: 0.030422
    thmpred time: 0.000004
    mc time: 0.058839
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [prim_recTheory.NOT_LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "BOUNDED_FORALL_THM", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "EXP_SUB_NUMERAL", DB.fetch "arithmetic" "SUB_LESS_OR", DB.fetch "arithmetic" "SUC_ELIM_NUMERALS", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "PRE_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "EXP_BASE_LE_IFF", DB.fetch "arithmetic" "LESS_ADD_1", DB.fetch "arithmetic" "X_LT_EXP_X_IFF", DB.fetch "arithmetic" "EXP_ALWAYS_BIG_ENOUGH"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUC_SUB1", prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_LESS_SUC", prim_recTheory.LESS_SUC_IMP, prim_recTheory.LESS_SUC, DB.fetch "arithmetic" "LESS_SUC_NOT", prim_recTheory.LESS_SUC_REFL, DB.fetch "arithmetic" "BOUNDED_FORALL_THM"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.155254

transitive_monotone
Statistics
  infstep : 831
  nodes   : 115
  maxdepth: 5
Time: 10.012642
  inferstep time: 6.919365
  node_find time: 0.423249
  node_crea time: 1.402399
    pred time: 0.255575
    thmpred time: 0.00002
    mc time: 0.6347
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.3014
Replaying proof: 0.005594

STRICTLY_INCREASING_ONE_ONE
Statistics
  infstep : 833
  nodes   : 116
  maxdepth: 6
Time: 10.064928
  inferstep time: 7.322584
  node_find time: 0.391813
  node_crea time: 1.153728
    pred time: 0.305942
    thmpred time: 0.000032
    mc time: 0.36984
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.053024

ONE_ONE_INV_IMAGE_BOUNDED
Statistics
  infstep : 527
  nodes   : 96
  maxdepth: 6
Time: 10.055167
  inferstep time: 8.083376
  node_find time: 0.249887
  node_crea time: 0.910699
    pred time: 0.287048
    thmpred time: 0.000021
    mc time: 0.304745
    inst time: 0.0
Proof status: Time Out
Org tac number: 27
Original proof time: 0.0
Replaying proof: 0.739512

ONE_ONE_UNBOUNDED
Statistics
  infstep : 586
  nodes   : 113
  maxdepth: 5
Time: 10.107537
  inferstep time: 7.643405
  node_find time: 0.28273
  node_crea time: 1.291874
    pred time: 0.321824
    thmpred time: 0.000022
    mc time: 0.490017
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.192131

STRICTLY_INCREASING_UNBOUNDED
proof length: 1
proof time: 0.065466
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.113749
  inferstep time: 0.092185
  node_find time: 0.000733
  node_crea time: 0.013043
    pred time: 0.002966
    thmpred time: 0.0
    mc time: 0.007396
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ONE_ONE_UNBOUNDED" , DB.fetch "arithmetic" "STRICTLY_INCREASING_TC" , DB.fetch "arithmetic" "STRICTLY_INCREASING_ONE_ONE" , prim_recTheory.measure_thm , prim_recTheory.LESS_DEF , prim_recTheory.DC , prim_recTheory.num_Axiom , prim_recTheory.wellfounded_def , DB.fetch "arithmetic" "EXISTS_NUM" , DB.fetch "arithmetic" "transitive_monotone" , prim_recTheory.SIMP_REC_REL , prim_recTheory.num_Axiom_old , DB.fetch "arithmetic" "SUC_ELIM_NUMERALS" , DB.fetch "arithmetic" "SUC_ELIM_THM" , numTheory.INDUCTION , DB.fetch "arithmetic" "FORALL_NUM_THM"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015113
Replaying proof: 0.005753
Replaying proof: 0.013791

NOT_STRICTLY_DECREASING
Statistics
  infstep : 765
  nodes   : 88
  maxdepth: 6
Time: 10.069328
  inferstep time: 7.596293
  node_find time: 0.36035
  node_crea time: 0.961966
    pred time: 0.262645
    thmpred time: 0.000019
    mc time: 0.321258
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.277241

ABS_DIFF_SYM
proof length: 3
proof time: 0.011429
Statistics
  infstep : 171
  nodes   : 23
  maxdepth: 4
Time: 3.472419
  inferstep time: 2.826312
  node_find time: 0.078392
  node_crea time: 0.252657
    pred time: 0.085874
    thmpred time: 0.000006
    mc time: 0.083706
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MIN_DEF", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ"] THEN boolLib.REWRITE_TAC [DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_SYM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_EQ_1", prim_recTheory.INV_SUC_EQ, DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_MONO_EQ"] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "NOT_LESS"), (DB.fetch "arithmetic" "LESS_EQUAL_ANTISYM"), (DB.fetch "arithmetic" "LESS_ANTISYM")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.068636

ABS_DIFF_EQS
proof length: 2
proof time: 0.028282
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.220484
  inferstep time: 0.183802
  node_find time: 0.001528
  node_crea time: 0.019574
    pred time: 0.005524
    thmpred time: 0.0
    mc time: 0.012129
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ABS_DIFF_def")] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_ELIM_THM", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "ABS_DIFF_def"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00762

ABS_DIFF_EQ_0
proof length: 8
proof time: 0.117236
Statistics
  infstep : 142
  nodes   : 31
  maxdepth: 4
Time: 3.443821
  inferstep time: 2.791361
  node_find time: 0.065224
  node_crea time: 0.303701
    pred time: 0.110439
    thmpred time: 0.000011
    mc time: 0.114763
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ABS_DIFF_def"), (DB.fetch "arithmetic" "SUB_EQUAL_0")] THENL [boolLib.EQ_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_ELIM_THM", DB.fetch "arithmetic" "SUB_EQUAL_0"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SYM", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "ADD_COMM", DB.fetch "arithmetic" "ADD_ASSOC", DB.fetch "arithmetic" "RIGHT_ADD_DISTRIB", DB.fetch "arithmetic" "EQ_ADD_LCANCEL", DB.fetch "arithmetic" "EQ_ADD_RCANCEL", DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_EQ_1"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_ELIM_THM", DB.fetch "arithmetic" "SUB_EQUAL_0"]], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "SUB_ELIM_THM"] THEN
  boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "LESS_OR_EQ", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "INV_PRE_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO_ADD_EQ", DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "LESS_EQ_IFF_LESS_SUC", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "MULT_LESS_EQ_SUC", DB.fetch "arithmetic" "LE_MULT_RCANCEL", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "GREATER_EQ"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "LESS_OR_EQ", prim_recTheory.LESS_THM, DB.fetch "arithmetic" "LESS_LESS_CASES", DB.fetch "arithmetic" "LESS_OR_EQ_ADD", DB.fetch "arithmetic" "MAX_LT", DB.fetch "arithmetic" "MIN_LT", prim_recTheory.LESS_LEMMA1, prim_recTheory.LESS_LEMMA2, DB.fetch "arithmetic" "LESS_CASES", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "X_LT_EXP_X_IFF", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "NOT_LESS", DB.fetch "arithmetic" "LESS_MONO_ADD_EQ", DB.fetch "arithmetic" "DIV_P_UNIV"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.050965

ABS_DIFF_ZERO
proof length: 5
proof time: 0.081182
Statistics
  infstep : 26
  nodes   : 12
  maxdepth: 2
Time: 0.872476
  inferstep time: 0.605294
  node_find time: 0.016228
  node_crea time: 0.127518
    pred time: 0.041745
    thmpred time: 0.000004
    mc time: 0.085397
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ABS_DIFF_def"), (DB.fetch "arithmetic" "SUB_EQUAL_0")] THENL [simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [prim_recTheory.NOT_LESS_0, (DB.fetch "arithmetic" "NOT_LESS")], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "BOUNDED_FORALL_THM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_SUC"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "BOUNDED_FORALL_THM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_LEFT_SUC"], simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ADD", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_EQ_0", DB.fetch "arithmetic" "ADD_CLAUSES", numTheory.NOT_SUC, DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "MOD_PLUS", DB.fetch "arithmetic" "MOD_MOD", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "num_CASES"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.049897

ABS_DIFF_SUC
proof length: 5
proof time: 0.203011
Statistics
  infstep : 9
  nodes   : 7
  maxdepth: 2
Time: 0.616446
  inferstep time: 0.447108
  node_find time: 0.006159
  node_crea time: 0.098242
    pred time: 0.039685
    thmpred time: 0.000003
    mc time: 0.055692
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ABS_DIFF_def"), (DB.fetch "arithmetic" "LESS_OR_EQ"), (DB.fetch "arithmetic" "SUB_EQ_0")] THEN (metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "SUB_LESS_SUC", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ADD_EQ_SUB", DB.fetch "arithmetic" "CANCEL_SUB", DB.fetch "arithmetic" "LEFT_SUB_DISTRIB", DB.fetch "arithmetic" "RIGHT_SUB_DISTRIB", DB.fetch "arithmetic" "PRE_SUB"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009381

ABS_DIFF_SUC_LE
Statistics
  infstep : 472
  nodes   : 86
  maxdepth: 6
Time: 10.000909
  inferstep time: 7.981902
  node_find time: 0.23377
  node_crea time: 1.032819
    pred time: 0.313792
    thmpred time: 0.000016
    mc time: 0.356277
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.074627

ABS_DIFF_PLUS_LE
Statistics
  infstep : 423
  nodes   : 95
  maxdepth: 5
Time: 10.010693
  inferstep time: 7.580039
  node_find time: 0.210899
  node_crea time: 1.481861
    pred time: 0.515931
    thmpred time: 0.000022
    mc time: 0.432184
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.169676

ABS_DIFF_LE_SUM
proof length: 1
proof time: 0.077667
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.142414
  inferstep time: 0.12064
  node_find time: 0.000512
  node_crea time: 0.012844
    pred time: 0.003688
    thmpred time: 0.000001
    mc time: 0.0075
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE" , DB.fetch "arithmetic" "ABS_DIFF_SUC_LE" , DB.fetch "arithmetic" "ABS_DIFF_SUC" , DB.fetch "arithmetic" "ABS_DIFF_COMM" , DB.fetch "arithmetic" "ABS_DIFF_SYM" , DB.fetch "arithmetic" "ABS_DIFF_EQS" , DB.fetch "arithmetic" "ABS_DIFF_def" , DB.fetch "arithmetic" "ABS_DIFF_EQ_0" , DB.fetch "arithmetic" "ABS_DIFF_ZERO" , DB.fetch "arithmetic" "tactictoe_thm_13" , DB.fetch "arithmetic" "tactictoe_thm_14" , DB.fetch "arithmetic" "DIV_LE_X" , DB.fetch "arithmetic" "X_LT_DIV" , DB.fetch "arithmetic" "LESS_EQ_ADD" , DB.fetch "arithmetic" "LE_ADD_RCANCEL" , DB.fetch "arithmetic" "ADD_EQ_SUB"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.098712

ABS_DIFF_TRIANGLE_lem
proof length: 5
proof time: 0.109523
Statistics
  infstep : 93
  nodes   : 27
  maxdepth: 3
Time: 3.407675
  inferstep time: 2.75463
  node_find time: 0.046545
  node_crea time: 0.362143
    pred time: 0.126154
    thmpred time: 0.000008
    mc time: 0.12869
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SYM", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SYM", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LE", DB.fetch "arithmetic" "MULT_INCREASES"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "ABS_DIFF_ZERO"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ABS_DIFF_ZERO"), (DB.fetch "arithmetic" "ABS_DIFF_SUC"), (DB.fetch "arithmetic" "ADD"), (DB.fetch "arithmetic" "ADD_0"), boolLib.GSYM (DB.fetch "arithmetic" "ADD_SUC"), (DB.fetch "arithmetic" "LESS_EQ_REFL"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "tactictoe_thm_40")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.051016

ABS_DIFF_TRIANGLE
proof length: 12
proof time: 0.30284
Statistics
  infstep : 23
  nodes   : 17
  maxdepth: 4
Time: 1.705611
  inferstep time: 1.345383
  node_find time: 0.010679
  node_crea time: 0.224517
    pred time: 0.064535
    thmpred time: 0.000007
    mc time: 0.11448
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SYM", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV", DB.fetch "arithmetic" "SUB_LEFT_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_ZERO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_ZERO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem"], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_ZERO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE"] THEN
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ABS_DIFF_ZERO"), (DB.fetch "arithmetic" "ABS_DIFF_SUC"), (DB.fetch "arithmetic" "ADD"), (DB.fetch "arithmetic" "ADD_0"), boolLib.GSYM (DB.fetch "arithmetic" "ADD_SUC"), (DB.fetch "arithmetic" "LESS_EQ_REFL"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "tactictoe_thm_40")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_ZERO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_ZERO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ABS_DIFF_ZERO"), (DB.fetch "arithmetic" "ABS_DIFF_SUC"), (DB.fetch "arithmetic" "ADD"), (DB.fetch "arithmetic" "ADD_0"), boolLib.GSYM (DB.fetch "arithmetic" "ADD_SUC"), (DB.fetch "arithmetic" "LESS_EQ_REFL"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "tactictoe_thm_40")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_45"], metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.052407

ABS_DIFF_ADD_SAME
proof length: 9
proof time: 0.275558
Statistics
  infstep : 92
  nodes   : 42
  maxdepth: 4
Time: 4.425996
  inferstep time: 3.558177
  node_find time: 0.046335
  node_crea time: 0.540795
    pred time: 0.187533
    thmpred time: 0.00001
    mc time: 0.217565
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_SYM", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_EQS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ABS_DIFF_EQS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ABS_DIFF_SUC", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "ABS_DIFF_SUC_LE", DB.fetch "arithmetic" "tactictoe_thm_45", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_44", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE_lem", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "ABS_DIFF_COMM", DB.fetch "arithmetic" "ABS_DIFF_SYM"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.09053

LE_SUB_RCANCEL
proof length: 9
proof time: 0.391143
Statistics
  infstep : 15
  nodes   : 12
  maxdepth: 2
Time: 1.37393
  inferstep time: 1.152673
  node_find time: 0.007213
  node_crea time: 0.117571
    pred time: 0.038909
    thmpred time: 0.000002
    mc time: 0.07726
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "ADD_EQ_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "SUC_SUB1"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.070526

LT_SUB_RCANCEL
proof length: 14
proof time: 0.266699
Statistics
  infstep : 177
  nodes   : 44
  maxdepth: 4
Time: 5.749247
  inferstep time: 4.701891
  node_find time: 0.082138
  node_crea time: 0.531349
    pred time: 0.214587
    thmpred time: 0.000014
    mc time: 0.207548
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "SUB_LESS_SUC", DB.fetch "arithmetic" "tactictoe_thm_2", DB.fetch "arithmetic" "tactictoe_thm_3", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUC_ELIM_THM"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS, DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "PRE_SUC_EQ", DB.fetch "arithmetic" "ZERO_LESS_EXP"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_MONO_EQ", prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "LESS_MONO_EQ", prim_recTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_REV, DB.fetch "arithmetic" "LESS_MONO_REV", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "LESS_NOT_SUC", DB.fetch "arithmetic" "LESS_SUC_EQ_COR", prim_recTheory.SUC_LESS] THEN
  boolLib.EQ_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "ABS_DIFF_def", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_LEFT_LESS", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_LEFT_GREATER", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "LESS_SUB_ADD_LESS", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_LESS_SUC"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")] THEN
  boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "NOT_LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_0"), (DB.fetch "prim_rec" "LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_1"), (DB.fetch "prim_rec" "tactictoe_thm_2"), (DB.fetch "prim_rec" "LESS_MONO_EQ")], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063265

LE_SUB_LCANCEL
proof length: 12
proof time: 0.252097
Statistics
  infstep : 162
  nodes   : 60
  maxdepth: 4
Time: 6.604145
  inferstep time: 5.277168
  node_find time: 0.081506
  node_crea time: 0.749698
    pred time: 0.28056
    thmpred time: 0.000015
    mc time: 0.286982
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ", DB.fetch "arithmetic" "LE_SUB_RCANCEL", DB.fetch "arithmetic" "SUB_EQ_EQ_0", DB.fetch "arithmetic" "SUB_RIGHT_GREATER_EQ", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "LESS_EQ_REFL"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_0")], metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "LESS_EQ_REFL"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_0")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_46", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "LE_SUB_RCANCEL", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "MULT_INCREASES"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "ZERO_LESS_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO")] THEN
  BasicProvers.SRW_TAC [] [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO"] THEN
  metisTools.METIS_TAC [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "LE_SUB_RCANCEL", DB.fetch "arithmetic" "tactictoe_thm_46", DB.fetch "arithmetic" "SUB_EQ_0"], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "ZERO_LESS_EQ", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"], BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_8, relationTheory.tactictoe_thm_9, DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.069739

LT_SUB_LCANCEL
proof length: 3
proof time: 0.001507
Statistics
  infstep : 128
  nodes   : 40
  maxdepth: 4
Time: 4.113585
  inferstep time: 3.277201
  node_find time: 0.061191
  node_crea time: 0.460661
    pred time: 0.171645
    thmpred time: 0.000026
    mc time: 0.169586
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.REWRITE_TAC [boolLib.GSYM (DB.fetch "arithmetic" "NOT_LESS_EQUAL"), (DB.fetch "arithmetic" "LE_SUB_RCANCEL"), boolLib.DE_MORGAN_THM] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "LE_SUB_LCANCEL", DB.fetch "arithmetic" "LE_SUB_RCANCEL", DB.fetch "arithmetic" "SUB_LESS_EQ_ADD", DB.fetch "arithmetic" "SUB_RIGHT_LESS_EQ", DB.fetch "arithmetic" "SUB_LESS_EQ", DB.fetch "arithmetic" "tactictoe_thm_46", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "CANCEL_SUB", DB.fetch "arithmetic" "SUB_CANCEL", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "SUB_ADD", DB.fetch "arithmetic" "LESS_EQ_ADD_SUB"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008823

ABS_DIFF_SUMS
Statistics
  infstep : 387
  nodes   : 83
  maxdepth: 5
Time: 10.071766
  inferstep time: 7.657648
  node_find time: 0.206451
  node_crea time: 1.396374
    pred time: 0.539578
    thmpred time: 0.000039
    mc time: 0.364614
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.150776

FUNPOW_SUC
Statistics
  infstep : 1046
  nodes   : 101
  maxdepth: 5
Time: 10.087631
  inferstep time: 6.896106
  node_find time: 0.542406
  node_crea time: 0.996487
    pred time: 0.265983
    thmpred time: 0.000036
    mc time: 0.325534
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.10855

FUNPOW_0
proof length: 1
proof time: 0.063429
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.083004
  inferstep time: 0.060501
  node_find time: 0.001091
  node_crea time: 0.013242
    pred time: 0.002707
    thmpred time: 0.000001
    mc time: 0.006812
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "FUNPOW" , DB.fetch "arithmetic" "FUNPOW_SUC" , prim_recTheory.DC , prim_recTheory.SIMP_REC_THM , prim_recTheory.PRIM_REC_EQN , prim_recTheory.PRIM_REC_THM , prim_recTheory.SIMP_REC_REL , prim_recTheory.num_Axiom , DB.fetch "arithmetic" "num_case_compute" , DB.fetch "arithmetic" "num_case_def" , DB.fetch "arithmetic" "num_case_cong" , prim_recTheory.num_Axiom_old , prim_recTheory.PRIM_REC_FUN , prim_recTheory.PRIM_REC , prim_recTheory.SIMP_REC_REL_UNIQUE , prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007862

FUNPOW_ADD
proof length: 3
proof time: 0.084657
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.341693
  inferstep time: 0.289393
  node_find time: 0.002106
  node_crea time: 0.028903
    pred time: 0.009537
    thmpred time: 0.000001
    mc time: 0.014944
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "FUNPOW_SUC", DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "FUNPOW_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "ADD_MODULUS_LEFT", DB.fetch "arithmetic" "ADD_MODULUS_RIGHT", DB.fetch "arithmetic" "ADD_DIV_ADD_DIV", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV", DB.fetch "arithmetic" "tactictoe_thm_23", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "DIVISION"], metisTools.METIS_TAC [DB.fetch "arithmetic" "FUNPOW_SUC", DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "FUNPOW_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "SUC_ADD_SYM", DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD_CLAUSES", relationTheory.tactictoe_thm_24, DB.fetch "arithmetic" "ADD_SUC", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "MULT", DB.fetch "arithmetic" "MULT_SUC", DB.fetch "arithmetic" "LESS_ADD_SUC", DB.fetch "arithmetic" "ADD1", DB.fetch "arithmetic" "SUC_ONE_ADD"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.087371

FUNPOW_1
proof length: 2
proof time: 0.040101
Statistics
  infstep : 10
  nodes   : 3
  maxdepth: 2
Time: 0.376734
  inferstep time: 0.305186
  node_find time: 0.006746
  node_crea time: 0.028265
    pred time: 0.006064
    thmpred time: 0.000001
    mc time: 0.019259
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "SUB_0")] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "FUNPOW", DB.fetch "arithmetic" "FUNPOW_SUC", DB.fetch "arithmetic" "FUNPOW_0", DB.fetch "arithmetic" "FUNPOW_ADD", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "DIV_ONE", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, prim_recTheory.DC, prim_recTheory.SIMP_REC_REL, prim_recTheory.num_Axiom, DB.fetch "arithmetic" "num_case_cong"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009

NRC_1
proof length: 3
proof time: 0.00201
Statistics
  infstep : 31
  nodes   : 9
  maxdepth: 3
Time: 1.120099
  inferstep time: 0.92515
  node_find time: 0.015534
  node_crea time: 0.101068
    pred time: 0.028458
    thmpred time: 0.000003
    mc time: 0.049871
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [numTheory.NOT_SUC, (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ONE"), prim_recTheory.INV_SUC_EQ, (DB.fetch "arithmetic" "ADD_EQ_0")] THEN boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "BIT1", DB.fetch "arithmetic" "BIT2", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "DIV_ONE", DB.fetch "arithmetic" "MOD_ONE", DB.fetch "arithmetic" "ODD_OR_EVEN", DB.fetch "arithmetic" "ONE", prim_recTheory.LESS_0_0, prim_recTheory.DC, DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "DIV_EQ_X", DB.fetch "arithmetic" "MOD_SUC_IFF", prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1] THEN
  mesonLib.ASM_MESON_TAC []
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010053

NRC_ADD_I
proof length: 7
proof time: 0.184519
Statistics
  infstep : 536
  nodes   : 76
  maxdepth: 5
Time: 9.499949
  inferstep time: 7.241686
  node_find time: 0.269384
  node_crea time: 0.935471
    pred time: 0.275721
    thmpred time: 0.000018
    mc time: 0.355448
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "NRC_1", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV", DB.fetch "arithmetic" "tactictoe_thm_13", DB.fetch "arithmetic" "tactictoe_thm_14", DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE", DB.fetch "arithmetic" "tactictoe_thm_49", DB.fetch "arithmetic" "tactictoe_thm_50", DB.fetch "arithmetic" "tactictoe_thm_51", DB.fetch "arithmetic" "ABS_DIFF_TRIANGLE", DB.fetch "arithmetic" "ABS_DIFF_LE_SUM", DB.fetch "arithmetic" "tactictoe_thm_45"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "NRC_1", relationTheory.transitive_def, relationTheory.RTC_DEF, relationTheory.TC_DEF, relationTheory.TC_implies_one_step, relationTheory.WCR_def, relationTheory.diamond_def, relationTheory.rcdiamond_def, relationTheory.EQC_INDUCTION, relationTheory.TC_INDUCT, relationTheory.EQC_TRANS, relationTheory.EXTEND_RTC_TC, relationTheory.RTC_INDUCT, relationTheory.TC_RULES], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "NRC_1", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES"] THEN
  BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ONE"), (DB.fetch "arithmetic" "NRC")] THEN
  boolLib.RES_TAC THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_1", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "tactictoe_thm_13", DB.fetch "arithmetic" "tactictoe_thm_14"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.076844

NRC_ADD_E
proof length: 5
proof time: 0.084797
Statistics
  infstep : 27
  nodes   : 8
  maxdepth: 3
Time: 0.958488
  inferstep time: 0.787877
  node_find time: 0.013385
  node_crea time: 0.07919
    pred time: 0.027155
    thmpred time: 0.000003
    mc time: 0.033081
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "NRC_1", relationTheory.TC_CASES1_E, relationTheory.TC_CASES2_E, relationTheory.TC_implies_one_step, relationTheory.WCR_def, relationTheory.diamond_def, relationTheory.rcdiamond_def, relationTheory.EXTEND_RTC_TC_EQN, relationTheory.TC_CASES1, relationTheory.TC_CASES2, relationTheory.O_DEF] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "NRC_1", relationTheory.TC_implies_one_step, relationTheory.WCR_def, relationTheory.diamond_def, relationTheory.rcdiamond_def, relationTheory.TC_CASES1_E, relationTheory.TC_CASES2_E, relationTheory.EXTEND_RTC_TC_EQN, relationTheory.TC_CASES1, relationTheory.TC_CASES2, relationTheory.O_DEF, relationTheory.transitive_def, relationTheory.RTC_DEF], boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "NRC_ADD_I", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "arithmetic" "LESS_STRONG_ADD", DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_CLAUSES"] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "relation" "RTC_RULES")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.069683

NRC_ADD_EQN
proof length: 1
proof time: 0.064606
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.151957
  inferstep time: 0.132097
  node_find time: 0.000614
  node_crea time: 0.012026
    pred time: 0.003166
    thmpred time: 0.000001
    mc time: 0.005466
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "NRC_ADD_E" , DB.fetch "arithmetic" "NRC_ADD_I" , DB.fetch "arithmetic" "NRC" , DB.fetch "arithmetic" "NRC_0" , DB.fetch "arithmetic" "NRC_1" , DB.fetch "arithmetic" "tactictoe_thm_13" , DB.fetch "arithmetic" "tactictoe_thm_14" , DB.fetch "arithmetic" "ABS_DIFF_PLUS_LE" , DB.fetch "arithmetic" "tactictoe_thm_49" , DB.fetch "arithmetic" "tactictoe_thm_50" , DB.fetch "arithmetic" "tactictoe_thm_51" , DB.fetch "arithmetic" "ABS_DIFF_LE_SUM" , DB.fetch "arithmetic" "tactictoe_thm_45" , DB.fetch "arithmetic" "tactictoe_thm_47" , DB.fetch "arithmetic" "tactictoe_thm_48" , DB.fetch "arithmetic" "tactictoe_thm_17"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.103028

NRC_SUC_RECURSE_LEFT
Statistics
  infstep : 629
  nodes   : 99
  maxdepth: 5
Time: 10.001194
  inferstep time: 7.618248
  node_find time: 0.326023
  node_crea time: 1.00857
    pred time: 0.250038
    thmpred time: 0.000042
    mc time: 0.350601
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.056097

NRC_RTC
proof length: 5
proof time: 0.083149
Statistics
  infstep : 69
  nodes   : 14
  maxdepth: 3
Time: 1.86643
  inferstep time: 1.576952
  node_find time: 0.03388
  node_crea time: 0.109635
    pred time: 0.035945
    thmpred time: 0.000005
    mc time: 0.032824
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "NRC_ADD_E", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "NRC_ADD_EQN", DB.fetch "arithmetic" "NRC_SUC_RECURSE_LEFT", DB.fetch "arithmetic" "NRC_1", relationTheory.EXTEND_RTC_TC, relationTheory.RTC_INDUCT, relationTheory.RC_RTC, relationTheory.RTC_RULES, relationTheory.RTC_ALT_DEF, relationTheory.RTC_DEF, relationTheory.RTC_ALT_INDUCT, relationTheory.RTC_EQC, relationTheory.RTC_INDUCT_RIGHT1] THEN
  metisTools.METIS_TAC [relationTheory.RTC_ALT_DEF, relationTheory.RTC_ALT_INDUCT, relationTheory.RTC_lifts_reflexive_transitive_relations, relationTheory.TC_INDUCT_ALT_LEFT, relationTheory.TC_INDUCT_ALT_RIGHT, relationTheory.TC_lifts_transitive_relations, relationTheory.RTC_ALT_RIGHT_DEF, relationTheory.RTC_ALT_RIGHT_INDUCT, relationTheory.RTC_MONOTONE, relationTheory.RC_MONOTONE, relationTheory.SC_MONOTONE, relationTheory.TC_MONOTONE, pairTheory.PROD_ALL_CONG, pairTheory.PROD_ALL_MONO, pairTheory.PROD_ALL_THM, pairTheory.WF_LEX], BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "NRC"), (DB.fetch "arithmetic" "ADD")] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "relation" "RTC_RULES")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.093128

RTC_NRC
Statistics
  infstep : 600
  nodes   : 76
  maxdepth: 5
Time: 10.00407
  inferstep time: 7.729657
  node_find time: 0.341615
  node_crea time: 0.803092
    pred time: 0.215253
    thmpred time: 0.00002
    mc time: 0.246068
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.045838

RTC_eq_NRC
proof length: 3
proof time: 0.152426
Statistics
  infstep : 37
  nodes   : 7
  maxdepth: 3
Time: 1.10339
  inferstep time: 0.95745
  node_find time: 0.016529
  node_crea time: 0.047664
    pred time: 0.013611
    thmpred time: 0.000002
    mc time: 0.024471
    inst time: 0.0
Proof found: boolLib.Q_TAC boolLib.SUFF_TAC [HolKernel.QUOTE " (*#loc 1 19395*)!x z. TC R x z ==> ?y. R x y /\\ RTC R y z"] THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "RTC_NRC", DB.fetch "arithmetic" "NRC_RTC", DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_SUC_RECURSE_LEFT", DB.fetch "arithmetic" "NRC_ADD_E", DB.fetch "arithmetic" "NRC_ADD_EQN", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "NRC_1", DB.fetch "arithmetic" "NRC_0", relationTheory.EXTEND_RTC_TC_EQN, relationTheory.EXTEND_RTC_TC, relationTheory.RTC_TC_RC, relationTheory.TC_RTC, relationTheory.RTC_CASES_TC, relationTheory.TC_implies_one_step, relationTheory.TC_CASES1_E], metisTools.METIS_TAC [relationTheory.EXTEND_RTC_TC_EQN, relationTheory.EXTEND_RTC_TC, relationTheory.RTC_TC_RC, relationTheory.TC_RTC, relationTheory.RTC_CASES_TC, relationTheory.TC_implies_one_step, relationTheory.TC_CASES1_E, relationTheory.TC_CASES2_E, relationTheory.TC_CASES2, relationTheory.TC_CASES1, relationTheory.WCR_def, relationTheory.TC_INDUCT, relationTheory.TC_RULES, relationTheory.TC_DEF, relationTheory.TC_INDUCT_LEFT1, relationTheory.TC_INDUCT_RIGHT1]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011887

TC_eq_NRC
proof length: 2
proof time: 0.076155
Statistics
  infstep : 13
  nodes   : 5
  maxdepth: 2
Time: 0.675883
  inferstep time: 0.592879
  node_find time: 0.006648
  node_crea time: 0.036765
    pred time: 0.010898
    thmpred time: 0.000001
    mc time: 0.014375
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_SUC_RECURSE_LEFT", DB.fetch "arithmetic" "RTC_eq_NRC", DB.fetch "arithmetic" "NRC_ADD_EQN", DB.fetch "arithmetic" "RTC_NRC", DB.fetch "arithmetic" "NRC_ADD_E", DB.fetch "arithmetic" "NRC_RTC", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "NRC_0", DB.fetch "arithmetic" "NRC_1", relationTheory.EXTEND_RTC_TC_EQN, relationTheory.TC_implies_one_step, relationTheory.TC_CASES1, relationTheory.TC_CASES2, relationTheory.TC_CASES1_E, relationTheory.TC_CASES2_E] THEN metisTools.METIS_TAC [DB.fetch "arithmetic" "NRC", DB.fetch "arithmetic" "NRC_SUC_RECURSE_LEFT", DB.fetch "arithmetic" "NRC_ADD_EQN", DB.fetch "arithmetic" "NRC_ADD_E", DB.fetch "arithmetic" "NRC_ADD_I", DB.fetch "arithmetic" "RTC_eq_NRC", DB.fetch "arithmetic" "RTC_NRC", DB.fetch "arithmetic" "NRC_RTC", DB.fetch "arithmetic" "NRC_1", DB.fetch "arithmetic" "NRC_0", relationTheory.EXTEND_RTC_TC_EQN, relationTheory.TC_implies_one_step, relationTheory.diamond_def, relationTheory.WCR_def, relationTheory.rcdiamond_def, relationTheory.TC_CASES1]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046654

LESS_EQUAL_DIFF
proof length: 7
proof time: 0.091047
Statistics
  infstep : 39
  nodes   : 19
  maxdepth: 3
Time: 1.725888
  inferstep time: 1.309374
  node_find time: 0.021727
  node_crea time: 0.236977
    pred time: 0.080458
    thmpred time: 0.000006
    mc time: 0.123098
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "tactictoe_thm_12", DB.fetch "arithmetic" "MOD_EQ_0_DIVISOR", DB.fetch "arithmetic" "DIV_P", DB.fetch "arithmetic" "MOD_P", DB.fetch "arithmetic" "tactictoe_thm_8", DB.fetch "arithmetic" "DIV_UNIQUE", DB.fetch "arithmetic" "MOD_UNIQUE", DB.fetch "arithmetic" "DIV_LESS_EQ", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "MOD_EQ_0"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "DA", DB.fetch "arithmetic" "tactictoe_thm_12", DB.fetch "arithmetic" "MOD_EQ_0_DIVISOR", DB.fetch "arithmetic" "DIV_P", DB.fetch "arithmetic" "MOD_P", DB.fetch "arithmetic" "tactictoe_thm_8", DB.fetch "arithmetic" "DIV_UNIQUE"]]
end, let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "DA"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"]]
end]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.184393
Replaying proof: 0.009853

EVEN_MOD2
proof length: 3
proof time: 0.060287
Statistics
  infstep : 16
  nodes   : 8
  maxdepth: 3
Time: 0.743304
  inferstep time: 0.59483
  node_find time: 0.008243
  node_crea time: 0.081415
    pred time: 0.019662
    thmpred time: 0.000003
    mc time: 0.047407
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MOD_2", DB.fetch "arithmetic" "EVEN_EXISTS", DB.fetch "arithmetic" "EVEN_ODD_EXISTS", DB.fetch "arithmetic" "EVEN_DOUBLE", DB.fetch "arithmetic" "ODD_EXISTS", DB.fetch "arithmetic" "DIV2_def", DB.fetch "arithmetic" "TIMES2", DB.fetch "arithmetic" "TWO", DB.fetch "arithmetic" "tactictoe_thm_4", DB.fetch "arithmetic" "tactictoe_thm_5", DB.fetch "arithmetic" "ODD_DOUBLE", DB.fetch "arithmetic" "EVEN", DB.fetch "arithmetic" "EVEN_EXP_IFF", DB.fetch "arithmetic" "EVEN_EXP", DB.fetch "arithmetic" "EVEN_ODD", DB.fetch "arithmetic" "ODD_EVEN"] THEN BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "ZERO_EXP", prim_recTheory.PRE_DEF, DB.fetch "arithmetic" "num_case_compute", combinTheory.UPDATE_def, DB.fetch "arithmetic" "MOD_2", prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT, prim_recTheory.tactictoe_thm_0, prim_recTheory.tactictoe_thm_1, prim_recTheory.TC_IM_RTC_SUC, prim_recTheory.tactictoe_thm_2, prim_recTheory.RTC_IM_TC, DB.fetch "arithmetic" "LESS_OR_EQ_ALT", prim_recTheory.LESS_ALT, prim_recTheory.WF_PRED, DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MOD_2", DB.fetch "arithmetic" "ONE", DB.fetch "arithmetic" "MULT_CLAUSES", DB.fetch "arithmetic" "EXP", DB.fetch "arithmetic" "EXP_SUB_NUMERAL", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "MOD_1", DB.fetch "arithmetic" "ONE_MOD_IFF", DB.fetch "arithmetic" "DIV_LE_X", DB.fetch "arithmetic" "X_LT_DIV", DB.fetch "arithmetic" "X_LT_EXP_X_IFF", DB.fetch "arithmetic" "ZERO_EXP", DB.fetch "arithmetic" "ADD_EQ_1", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "BOUNDED_FORALL_THM"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.018516
Replaying proof: 0.00198

SUC_MOD
Statistics
  infstep : 478
  nodes   : 83
  maxdepth: 5
Time: 10.002963
  inferstep time: 7.658785
  node_find time: 0.249462
  node_crea time: 1.23554
    pred time: 0.333524
    thmpred time: 0.000023
    mc time: 0.506848
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.215465

ADD_MOD
Statistics
  infstep : 332
  nodes   : 75
  maxdepth: 5
Time: 10.101189
  inferstep time: 8.185883
  node_find time: 0.178349
  node_crea time: 1.045654
    pred time: 0.257455
    thmpred time: 0.000019
    mc time: 0.487329
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.121075

MOD_ELIM
Statistics
  infstep : 695
  nodes   : 114
  maxdepth: 5
Time: 10.009039
  inferstep time: 6.99895
  node_find time: 0.37196
  node_crea time: 1.435207
    pred time: 0.248897
    thmpred time: 0.000016
    mc time: 0.632568
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 1.016647

DOUBLE_LT
Statistics
  infstep : 496
  nodes   : 121
  maxdepth: 7
Time: 10.002186
  inferstep time: 7.43834
  node_find time: 0.268364
  node_crea time: 1.430034
    pred time: 0.29224
    thmpred time: 0.000022
    mc time: 0.68381
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.224451
Replaying proof: 0.003664

SUB_LESS
proof length: 6
proof time: 0.152056
Statistics
  infstep : 10
  nodes   : 8
  maxdepth: 3
Time: 0.750594
  inferstep time: 0.602135
  node_find time: 0.005441
  node_crea time: 0.082086
    pred time: 0.032561
    thmpred time: 0.000004
    mc time: 0.042168
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "BOUNDED_FORALL_THM", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "EXP_SUB_NUMERAL", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_LEFT_LESS_EQ"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0", prim_recTheory.LESS_0, DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_0", DB.fetch "arithmetic" "MULT_INCREASES", DB.fetch "arithmetic" "OR_LESS", DB.fetch "arithmetic" "LESS_OR", DB.fetch "arithmetic" "LESS_EQ", DB.fetch "arithmetic" "LESS_EQ_MONO", DB.fetch "arithmetic" "NOT_SUC_LESS_EQ", DB.fetch "arithmetic" "NOT_LEQ", DB.fetch "arithmetic" "NOT_GREATER_EQ", DB.fetch "arithmetic" "NOT_NUM_EQ", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "EXP_SUB"], metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_LESS_EQ", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB", DB.fetch "arithmetic" "SUB_MONO_EQ", DB.fetch "arithmetic" "SUC_SUB1", DB.fetch "arithmetic" "SUC_SUB", DB.fetch "arithmetic" "SUC_ELIM_THM", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "tactictoe_thm_46", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "SUB_LESS_0", DB.fetch "arithmetic" "BOUNDED_EXISTS_THM", DB.fetch "arithmetic" "BOUNDED_FORALL_THM", DB.fetch "arithmetic" "MOD_LIFT_PLUS"], boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_0"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "NOT_SUC_LESS_EQ_0"), (DB.fetch "arithmetic" "LESS_EQ_MONO"), (DB.fetch "arithmetic" "LESS_MONO_EQ")] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "SUB_LESS_SUC", prim_recTheory.LESS_0, DB.fetch "arithmetic" "LESS_EQ_SUB_LESS", DB.fetch "arithmetic" "SUB_RIGHT_LESS", DB.fetch "arithmetic" "LT_SUB_RCANCEL", DB.fetch "arithmetic" "LT_SUB_LCANCEL", DB.fetch "arithmetic" "EXP_SUB", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "SUB_LEFT_SUC", DB.fetch "arithmetic" "SUB_LEFT_EQ", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "CANCEL_SUB", DB.fetch "arithmetic" "SUB_CANCEL", DB.fetch "arithmetic" "SUB_ADD"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.216613

SUB_MOD
Statistics
  infstep : 593
  nodes   : 111
  maxdepth: 6
Time: 10.01381
  inferstep time: 7.053129
  node_find time: 0.320289
  node_crea time: 1.601226
    pred time: 0.387886
    thmpred time: 0.000014
    mc time: 0.662867
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.043972

ONE_LT_MULT_IMP
Statistics
  infstep : 340
  nodes   : 94
  maxdepth: 5
Time: 10.018372
  inferstep time: 7.517927
  node_find time: 0.19368
  node_crea time: 1.626168
    pred time: 0.367494
    thmpred time: 0.000028
    mc time: 0.752429
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.192587

ONE_LT_MULT
Statistics
  infstep : 376
  nodes   : 107
  maxdepth: 6
Time: 10.127711
  inferstep time: 7.748623
  node_find time: 0.216191
  node_crea time: 1.341663
    pred time: 0.273173
    thmpred time: 0.000021
    mc time: 0.70999
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.265473

ONE_LT_EXP
Statistics
  infstep : 430
  nodes   : 122
  maxdepth: 5
Time: 10.122171
  inferstep time: 7.410769
  node_find time: 0.23835
  node_crea time: 1.593128
    pred time: 0.379114
    thmpred time: 0.000018
    mc time: 0.716072
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.114413
Replaying proof: 0.007136
Replaying proof: 0.005562

findq_eq_0
Statistics
  infstep : 599
  nodes   : 92
  maxdepth: 6
Time: 10.001067
  inferstep time: 7.506545
  node_find time: 0.33318
  node_crea time: 1.052302
    pred time: 0.257243
    thmpred time: 0.000017
    mc time: 0.348726
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.286175

findq_divisor
Statistics
  infstep : 362
  nodes   : 111
  maxdepth: 5
Time: 10.0126
  inferstep time: 7.481931
  node_find time: 0.2171
  node_crea time: 1.508041
    pred time: 0.387043
    thmpred time: 0.000026
    mc time: 0.570727
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.440072
Replaying proof: 0.001873
Replaying proof: 0.000922
Replaying proof: 0.018527

MOD_SUB
Statistics
  infstep : 341
  nodes   : 83
  maxdepth: 5
Time: 10.000443
  inferstep time: 7.372899
  node_find time: 0.209547
  node_crea time: 1.688033
    pred time: 0.438862
    thmpred time: 0.000032
    mc time: 0.812609
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.177339

DIV_SUB
Statistics
  infstep : 589
  nodes   : 126
  maxdepth: 5
Time: 10.002516
  inferstep time: 6.611106
  node_find time: 0.367656
  node_crea time: 1.798661
    pred time: 0.39526
    thmpred time: 0.000022
    mc time: 0.833593
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.214851

DIVMOD_CORRECT
Statistics
  infstep : 264
  nodes   : 101
  maxdepth: 5
Time: 10.001121
  inferstep time: 7.501766
  node_find time: 0.150941
  node_crea time: 1.652874
    pred time: 0.406708
    thmpred time: 0.000027
    mc time: 0.741667
    inst time: 0.0
Proof status: Time Out
Org tac number: 32
Original proof time: 0.0
Replaying proof: 0.989384

DIVMOD_CALC
Statistics
  infstep : 458
  nodes   : 101
  maxdepth: 5
Time: 10.000202
  inferstep time: 6.846743
  node_find time: 0.307705
  node_crea time: 1.748483
    pred time: 0.419584
    thmpred time: 0.000016
    mc time: 0.825333
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00933

MODEQ_0_CONG
proof length: 2
proof time: 0.001402
Statistics
  infstep : 64
  nodes   : 11
  maxdepth: 3
Time: 1.357224
  inferstep time: 1.029644
  node_find time: 0.037392
  node_crea time: 0.132693
    pred time: 0.042055
    thmpred time: 0.000002
    mc time: 0.054398
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "arithmetic" "MODEQ_DEF", prim_recTheory.SIMP_REC_REL_UNIQUE, DB.fetch "arithmetic" "ABS_DIFF_SUMS", prim_recTheory.SIMP_REC_REL, DB.fetch "arithmetic" "ADD", DB.fetch "arithmetic" "ADD_0", DB.fetch "arithmetic" "ABS_DIFF_ZERO", DB.fetch "arithmetic" "ABS_DIFF_EQS", DB.fetch "arithmetic" "SUB_EQUAL_0", DB.fetch "arithmetic" "ABS_DIFF_EQ_0", DB.fetch "arithmetic" "SUB_EQ_0", DB.fetch "arithmetic" "NOT_ZERO_LT_ZERO", DB.fetch "arithmetic" "SUB_0", prim_recTheory.num_Axiom, DB.fetch "arithmetic" "ADD_CLAUSES", DB.fetch "arithmetic" "ADD_DIV_ADD_DIV"] THEN BasicProvers.RW_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ADD_CLAUSES"), prim_recTheory.LESS_REFL, (DB.fetch "arithmetic" "LESS_MONO_EQ"), (DB.fetch "arithmetic" "tactictoe_thm_24"), prim_recTheory.LESS_0]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011042
Replaying proof: 0.003582

MODEQ_THM
Statistics
  infstep : 882
  nodes   : 128
  maxdepth: 5
Time: 10.010862
  inferstep time: 6.391559
  node_find time: 0.50515
  node_crea time: 1.485679
    pred time: 0.24767
    thmpred time: 0.00002
    mc time: 0.779826
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.063714

MODEQ_INTRO_CONG
proof length: 1
proof time: 0.099152
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.15557
  inferstep time: 0.125132
  node_find time: 0.001183
  node_crea time: 0.018058
    pred time: 0.003705
    thmpred time: 0.0
    mc time: 0.012222
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY" , DB.fetch "arithmetic" "MODEQ_THM" , DB.fetch "arithmetic" "MODEQ_DEF" , DB.fetch "arithmetic" "MODEQ_0_CONG" , DB.fetch "arithmetic" "DIVISION" , DB.fetch "arithmetic" "ADD_DIV_RWT" , DB.fetch "arithmetic" "ADD_MOD" , DB.fetch "arithmetic" "SUC_MOD" , DB.fetch "arithmetic" "ADD_MODULUS" , DB.fetch "arithmetic" "MOD_PLUS" , DB.fetch "arithmetic" "MOD_MOD" , DB.fetch "arithmetic" "DIVMOD_ID" , DB.fetch "arithmetic" "ADD_MODULUS_LEFT" , DB.fetch "arithmetic" "ADD_MODULUS_RIGHT" , DB.fetch "arithmetic" "DIVMOD_CALC" , DB.fetch "arithmetic" "DIVMOD_CORRECT"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.024731

MODEQ_PLUS_CONG
Statistics
  infstep : 447
  nodes   : 71
  maxdepth: 4
Time: 10.010136
  inferstep time: 7.873834
  node_find time: 0.266427
  node_crea time: 0.906156
    pred time: 0.274967
    thmpred time: 0.000015
    mc time: 0.278992
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.116589

MODEQ_MULT_CONG
proof length: 4
proof time: 0.087211
Statistics
  infstep : 14
  nodes   : 9
  maxdepth: 3
Time: 0.9784
  inferstep time: 0.665253
  node_find time: 0.008912
  node_crea time: 0.23313
    pred time: 0.024469
    thmpred time: 0.000001
    mc time: 0.067593
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "arithmetic" "MODEQ_THM"), prim_recTheory.LESS_REFL] THEN BasicProvers.SRW_TAC [] [boolLib.Once (boolLib.GSYM (DB.fetch "arithmetic" "MOD_PLUS"))] THENL
  [metisTools.METIS_TAC [DB.fetch "arithmetic" "MODEQ_PLUS_CONG", DB.fetch "arithmetic" "tactictoe_thm_11", numTheory.tactictoe_thm_8, DB.fetch "arithmetic" "MODEQ_THM", DB.fetch "arithmetic" "num_CASES", DB.fetch "arithmetic" "LE_MULT_RCANCEL", DB.fetch "arithmetic" "MULT_EQ_0", DB.fetch "arithmetic" "EQ_MULT_LCANCEL", DB.fetch "arithmetic" "LE_MULT_LCANCEL", DB.fetch "arithmetic" "SUB_RIGHT_EQ", DB.fetch "arithmetic" "EQ_MULT_RCANCEL", DB.fetch "arithmetic" "LE_MULT_CANCEL_LBARE", DB.fetch "arithmetic" "LE_MULT_CANCEL_RBARE", DB.fetch "arithmetic" "MULT_EQ_ID", DB.fetch "arithmetic" "ONE_LT_MULT", DB.fetch "arithmetic" "tactictoe_thm_24"],
  metisTools.METIS_TAC [DB.fetch "arithmetic" "MODEQ_PLUS_CONG", DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MOD_EQ_0", DB.fetch "arithmetic" "MOD_TIMES2", numTheory.tactictoe_thm_8, DB.fetch "arithmetic" "MOD_COMMON_FACTOR", DB.fetch "arithmetic" "DIV_MOD_MOD_DIV", DB.fetch "arithmetic" "tactictoe_thm_60", DB.fetch "arithmetic" "MOD_MULT_MOD", DB.fetch "arithmetic" "MOD_P_UNIV", DB.fetch "arithmetic" "MOD_SUB", DB.fetch "arithmetic" "tactictoe_thm_59", DB.fetch "arithmetic" "MOD_TIMES_SUB", DB.fetch "arithmetic" "MULT_EQ_DIV", DB.fetch "arithmetic" "MOD_P", DB.fetch "arithmetic" "MOD_TIMES"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.149123

MODEQ_REFL
proof length: 1
proof time: 0.045421
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.105765
  inferstep time: 0.078063
  node_find time: 0.000979
  node_crea time: 0.014374
    pred time: 0.002724
    thmpred time: 0.000001
    mc time: 0.009672
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MODEQ_DEF" , DB.fetch "arithmetic" "MODEQ_INTRO_CONG" , DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY" , DB.fetch "arithmetic" "MODEQ_MULT_CONG" , DB.fetch "arithmetic" "MODEQ_THM" , DB.fetch "arithmetic" "MODEQ_PLUS_CONG" , DB.fetch "arithmetic" "MODEQ_0_CONG" , DB.fetch "arithmetic" "ADD_DIV_ADD_DIV" , DB.fetch "arithmetic" "ADD_MODULUS" , DB.fetch "arithmetic" "ADD_MODULUS_LEFT" , DB.fetch "arithmetic" "ADD_MODULUS_RIGHT" , DB.fetch "arithmetic" "DIV_DIV_DIV_MULT" , DB.fetch "arithmetic" "DIV_LE_MONOTONE" , DB.fetch "arithmetic" "FUNPOW" , DB.fetch "arithmetic" "FUNPOW_ADD" , DB.fetch "arithmetic" "FUNPOW_SUC"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009042

MODEQ_SUC_CONG
proof length: 2
proof time: 0.019186
Statistics
  infstep : 30
  nodes   : 9
  maxdepth: 3
Time: 1.134111
  inferstep time: 0.891012
  node_find time: 0.021724
  node_crea time: 0.11453
    pred time: 0.028194
    thmpred time: 0.000003
    mc time: 0.049984
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "arithmetic" "MODEQ_THM"), prim_recTheory.LESS_REFL] THEN BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "MOD_SUC_IFF", DB.fetch "arithmetic" "SUC_MOD", DB.fetch "arithmetic" "tactictoe_thm_54", DB.fetch "arithmetic" "MODEQ_THM", DB.fetch "arithmetic" "MOD_ELIM", DB.fetch "arithmetic" "MULT_EQ_DIV", DB.fetch "arithmetic" "X_MOD_Y_EQ_X", DB.fetch "arithmetic" "MOD_LESS_EQ", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "MODEQ_INTRO_CONG", DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY", DB.fetch "arithmetic" "MOD_TIMES2", DB.fetch "arithmetic" "MOD_PLUS"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.105283

MODEQ_EXP_CONG
Statistics
  infstep : 493
  nodes   : 95
  maxdepth: 4
Time: 10.010177
  inferstep time: 7.454266
  node_find time: 0.300046
  node_crea time: 1.264961
    pred time: 0.265492
    thmpred time: 0.000028
    mc time: 0.53143
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.127828

MODEQ_SYM
proof length: 2
proof time: 0.012063
Statistics
  infstep : 29
  nodes   : 6
  maxdepth: 2
Time: 0.830807
  inferstep time: 0.687442
  node_find time: 0.016577
  node_crea time: 0.050797
    pred time: 0.013307
    thmpred time: 0.0
    mc time: 0.022608
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "arithmetic" "MODEQ_THM"), prim_recTheory.LESS_REFL] THEN BasicProvers.PROVE_TAC [(DB.fetch "arithmetic" "MOD_SUC"), (DB.fetch "arithmetic" "SUC_NOT"), (DB.fetch "arithmetic" "MOD_EQ_0")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.071361

MODEQ_TRANS
proof length: 1
proof time: 0.059245
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.127133
  inferstep time: 0.10531
  node_find time: 0.000741
  node_crea time: 0.012522
    pred time: 0.002705
    thmpred time: 0.000001
    mc time: 0.006288
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "arithmetic" "MODEQ_EXP_CONG" , DB.fetch "arithmetic" "MODEQ_SUC_CONG" , DB.fetch "arithmetic" "MODEQ_SYM" , DB.fetch "arithmetic" "MODEQ_THM" , DB.fetch "arithmetic" "MODEQ_REFL" , DB.fetch "arithmetic" "MODEQ_MULT_CONG" , DB.fetch "arithmetic" "MODEQ_PLUS_CONG" , DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY" , DB.fetch "arithmetic" "MODEQ_INTRO_CONG" , DB.fetch "arithmetic" "MODEQ_DEF" , DB.fetch "arithmetic" "MODEQ_0_CONG" , DB.fetch "arithmetic" "NRC_ADD_E" , DB.fetch "arithmetic" "NRC_ADD_I" , DB.fetch "arithmetic" "DIV_EQ_X" , DB.fetch "arithmetic" "MULT_EQ_DIV" , relationTheory.EQC_INDUCTION])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.052215

MODEQ_NUMERAL
Statistics
  infstep : 384
  nodes   : 127
  maxdepth: 5
Time: 10.03493
  inferstep time: 7.05401
  node_find time: 0.233553
  node_crea time: 1.859555
    pred time: 0.387672
    thmpred time: 0.000024
    mc time: 0.834392
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.022215

MODEQ_MOD
proof length: 3
proof time: 0.044428
Statistics
  infstep : 24
  nodes   : 8
  maxdepth: 3
Time: 0.8285
  inferstep time: 0.623732
  node_find time: 0.014088
  node_crea time: 0.09114
    pred time: 0.018061
    thmpred time: 0.000002
    mc time: 0.06964
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ADD1")] THEN BasicProvers.SRW_TAC [] [DB.fetch "arithmetic" "tactictoe_thm_53", DB.fetch "arithmetic" "tactictoe_thm_52", DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MODEQ_INTRO_CONG", DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY", DB.fetch "arithmetic" "MODEQ_THM", DB.fetch "arithmetic" "MODEQ_EXP_CONG", DB.fetch "arithmetic" "MODEQ_REFL", DB.fetch "arithmetic" "MODEQ_SUC_CONG", DB.fetch "arithmetic" "MODEQ_TRANS", DB.fetch "arithmetic" "MODEQ_SYM", DB.fetch "arithmetic" "MODEQ_DEF", DB.fetch "arithmetic" "MODEQ_MULT_CONG", DB.fetch "arithmetic" "MODEQ_PLUS_CONG", DB.fetch "arithmetic" "MODEQ_NUMERAL", DB.fetch "arithmetic" "MODEQ_0_CONG"] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_52", DB.fetch "arithmetic" "tactictoe_thm_53", DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "MOD_MOD", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "ADD_MODULUS_LEFT", DB.fetch "arithmetic" "ADD_MODULUS_RIGHT", DB.fetch "arithmetic" "EXP_MOD", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_LIFT_PLUS_IFF", DB.fetch "arithmetic" "MOD_MULT_MOD", DB.fetch "arithmetic" "MOD_ELIM", DB.fetch "arithmetic" "MOD_SUC", DB.fetch "arithmetic" "MOD_SUC_IFF", DB.fetch "arithmetic" "MULT_EQ_DIV", DB.fetch "arithmetic" "X_MOD_Y_EQ_X"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011304

MODEQ_0
proof length: 3
proof time: 0.037331
Statistics
  infstep : 15
  nodes   : 6
  maxdepth: 3
Time: 0.636878
  inferstep time: 0.481375
  node_find time: 0.009604
  node_crea time: 0.069019
    pred time: 0.015393
    thmpred time: 0.000002
    mc time: 0.04887
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "ADD1")] THEN simpLib.SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "arithmetic" "MODEQ_THM"), prim_recTheory.LESS_REFL] THEN
  metisTools.METIS_TAC [DB.fetch "arithmetic" "tactictoe_thm_11", DB.fetch "arithmetic" "ZERO_MOD", DB.fetch "arithmetic" "MODEQ_THM", DB.fetch "arithmetic" "ADD_DIV_RWT", DB.fetch "arithmetic" "DIVISION", DB.fetch "arithmetic" "ADD_MODULUS", DB.fetch "arithmetic" "DIVMOD_ID", DB.fetch "arithmetic" "DIVMOD_CALC", DB.fetch "arithmetic" "MOD_SUB", DB.fetch "arithmetic" "tactictoe_thm_60", DB.fetch "arithmetic" "MOD_COMMON_FACTOR", DB.fetch "arithmetic" "MOD_LIFT_PLUS", DB.fetch "arithmetic" "MOD_MULT_MOD", DB.fetch "arithmetic" "MOD_P_UNIV", DB.fetch "arithmetic" "tactictoe_thm_59", DB.fetch "arithmetic" "SUB_MOD"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01144

datatype_num
proof length: 1
proof time: 0.0002
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.155678
  inferstep time: 0.12913
  node_find time: 0.001357
  node_crea time: 0.012409
    pred time: 0.002928
    thmpred time: 0.0
    mc time: 0.007353
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ boolLib.DATATYPE_TAG_THM ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010065
Bad stac: 0
