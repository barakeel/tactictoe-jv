
EQ_LADD
proof length: 3
proof time: 0.002476
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.392654
  inferstep time: 0.331969
  node_find time: 0.000202
  node_crea time: 0.043271
    pred time: 0.016097
    thmpred time: 0.000002
    mc time: 0.037492
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [BasicProvers.SRW_TAC [] [arithmeticTheory.ADD, numeralTheory.numeral_distrib, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.DIV_LE_X, arithmeticTheory.X_LT_DIV, arithmeticTheory.tactictoe_thm_13, arithmeticTheory.tactictoe_thm_14, arithmeticTheory.NRC_ADD_EQN, arithmeticTheory.NRC_ADD_I, arithmeticTheory.NRC_ADD_E, arithmeticTheory.ABS_DIFF_PLUS_LE, arithmeticTheory.tactictoe_thm_49, arithmeticTheory.tactictoe_thm_50, arithmeticTheory.tactictoe_thm_51, arithmeticTheory.ABS_DIFF_TRIANGLE, arithmeticTheory.ABS_DIFF_LE_SUM], BasicProvers.SRW_TAC [] [(DB.fetch "arithmetic" "NRC"), (DB.fetch "arithmetic" "ADD")]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00842

EQ_ADDL
proof length: 1
proof time: 0.068088
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.086813
  inferstep time: 0.068663
  node_find time: 0.000031
  node_crea time: 0.014896
    pred time: 0.009212
    thmpred time: 0.0
    mc time: 0.007548
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [arithmeticTheory.MOD_ELIM , arithmeticTheory.tactictoe_thm_23 , arithmeticTheory.ADD_MODULUS , arithmeticTheory.ADD_MODULUS_LEFT , arithmeticTheory.ADD_MODULUS_RIGHT , arithmeticTheory.MOD_LIFT_PLUS , arithmeticTheory.MOD_LIFT_PLUS_IFF , arithmeticTheory.LESS_ADD_NONZERO , arithmeticTheory.SUB_RIGHT_LESS , arithmeticTheory.MOD_PLUS , arithmeticTheory.ADD , arithmeticTheory.ADD_DIV_RWT , arithmeticTheory.ADD_EQ_0 , arithmeticTheory.ADD_EQ_1 , arithmeticTheory.ADD_INV_0 , arithmeticTheory.ADD_INV_0_EQ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00346

LT_LADD
proof length: 1
proof time: 0.000739
Statistics
  infstep : 26
  nodes   : 12
  maxdepth: 3
Time: 0.949784
  inferstep time: 0.841953
  node_find time: 0.000543
  node_crea time: 0.085741
    pred time: 0.028705
    thmpred time: 0.000003
    mc time: 0.064496
    inst time: 0.0
Proof found: (boolLib.ASM_REWRITE_TAC [ numeralTheory.tactictoe_thm_12 , numeralTheory.tactictoe_thm_16 , numeralTheory.tactictoe_thm_2 , numeralTheory.tactictoe_thm_3 , arithmeticTheory.LESS_MONO_ADD_EQ , arithmeticTheory.LT_ADD_LCANCEL , arithmeticTheory.LT_ADD_RCANCEL , numeralTheory.tactictoe_thm_1 , arithmeticTheory.LESS_MONO_ADD , arithmeticTheory.LESS_MONO_ADD_INV , arithmeticTheory.SUB_LEFT_LESS , arithmeticTheory.LESS_SUB_ADD_LESS , rich_listTheory.EL_DROP , arithmeticTheory.tactictoe_thm_13 , arithmeticTheory.tactictoe_thm_14 , DB.fetch "integer" "EQ_LADD" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008552

LT_ADDL
proof length: 6
proof time: 0.288336
Statistics
  infstep : 13
  nodes   : 8
  maxdepth: 3
Time: 0.744242
  inferstep time: 0.621176
  node_find time: 0.000294
  node_crea time: 0.079409
    pred time: 0.027132
    thmpred time: 0.000002
    mc time: 0.081785
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  boolLib.REPEAT INDUCT_TAC
end THENL [boolLib.REWRITE_TAC [numeralTheory.numeral_distrib, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, arithmeticTheory.SUB_RIGHT_LESS, arithmeticTheory.MOD_LIFT_PLUS, arithmeticTheory.DIVISION, arithmeticTheory.MOD_LIFT_PLUS_IFF, arithmeticTheory.tactictoe_thm_17, arithmeticTheory.tactictoe_thm_18, numeralTheory.divmod_POS, arithmeticTheory.ADD_MODULUS, arithmeticTheory.MOD_PLUS, arithmeticTheory.ADD_MODULUS_LEFT, arithmeticTheory.ADD_MODULUS_RIGHT, arithmeticTheory.ADD_DIV_RWT, arithmeticTheory.ADD_MOD], metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, prim_recTheory.LESS_0, numeralTheory.numeral_distrib, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_37, arithmeticTheory.MOD_SUC, arithmeticTheory.DIV_EQ_X, arithmeticTheory.MOD_SUC_IFF, arithmeticTheory.SUC_MOD, arithmeticTheory.PRE_SUC_EQ, arithmeticTheory.SUC_ELIM_THM, arithmeticTheory.tactictoe_thm_54, numeralTheory.tactictoe_thm_30, arithmeticTheory.ZERO_LESS_EXP], boolLib.REWRITE_TAC [(DB.fetch "prim_rec" "NOT_LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_0"), (DB.fetch "prim_rec" "LESS_0"), (DB.fetch "prim_rec" "tactictoe_thm_1"), (DB.fetch "prim_rec" "tactictoe_thm_2"), (DB.fetch "prim_rec" "LESS_MONO_EQ")] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_37, numeralTheory.tactictoe_thm_12, numeralTheory.tactictoe_thm_16, numeralTheory.tactictoe_thm_2, numeralTheory.tactictoe_thm_3, arithmeticTheory.LESS_NOT_SUC, arithmeticTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, prim_recTheory.LESS_MONO_EQ, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, rich_listTheory.tactictoe_thm_13, rich_listTheory.tactictoe_thm_14], metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, prim_recTheory.LESS_0, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_37, numeralTheory.tactictoe_thm_12, numeralTheory.tactictoe_thm_16, numeralTheory.tactictoe_thm_2, numeralTheory.tactictoe_thm_3, arithmeticTheory.LESS_MONO_EQ, arithmeticTheory.LESS_NOT_SUC, prim_recTheory.LESS_MONO_EQ, prim_recTheory.SUC_LESS, prim_recTheory.LESS_MONO, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ADD, rich_listTheory.tactictoe_thm_13]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002566

LT_ADDR
proof length: 1
proof time: 0.000208
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.127627
  inferstep time: 0.107034
  node_find time: 0.000058
  node_crea time: 0.016605
    pred time: 0.005394
    thmpred time: 0.0
    mc time: 0.013114
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ boolLib.REWRITE_RULE [ HolKernel.SYM ( boolLib.SPEC_ALL ( DB.fetch "arithmetic" "NOT_LESS" ) ) ] ( DB.fetch "arithmetic" "LESS_EQ_ADD" ) , prim_recTheory.LESS_0 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008303

LT_ADD2
proof length: 2
proof time: 0.00101
Statistics
  infstep : 22
  nodes   : 12
  maxdepth: 3
Time: 1.126338
  inferstep time: 0.993813
  node_find time: 0.000575
  node_crea time: 0.115742
    pred time: 0.036915
    thmpred time: 0.000002
    mc time: 0.073273
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [arithmeticTheory.EXP, boolLib.GSYM arithmeticTheory.MULT_ASSOC, arithmeticTheory.EQ_MULT_LCANCEL, numTheory.NOT_SUC, boolLib.GSYM numTheory.NOT_SUC, prim_recTheory.INV_SUC_EQ]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004849

TINT_EQ_REFL
proof length: 2
proof time: 0.095658
Statistics
  infstep : 65
  nodes   : 7
  maxdepth: 2
Time: 0.922042
  inferstep time: 0.823398
  node_find time: 0.001913
  node_crea time: 0.07705
    pred time: 0.034275
    thmpred time: 0.000003
    mc time: 0.038351
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 183432*)x"] THEN metisTools.METIS_TAC [DB.fetch "integer" "tint_eq", pairTheory.ABS_PAIR_THM, pairTheory.pair_CASES, arithmeticTheory.DIVMOD_THM, numeralTheory.divmod_POS, arithmeticTheory.DIVMOD_DEF, patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, DB.fetch "integer" "tint_neg", listTheory.SUM_MAP_PLUS_ZIP, listTheory.LENGTH_ZIP, listTheory.EL_ZIP, listTheory.every_zip_fst]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.043136

TINT_EQ_SYM
proof length: 4
proof time: 0.151492
Statistics
  infstep : 165
  nodes   : 32
  maxdepth: 4
Time: 2.980728
  inferstep time: 2.535951
  node_find time: 0.00824
  node_crea time: 0.403548
    pred time: 0.144128
    thmpred time: 0.000013
    mc time: 0.203588
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 183432*)x"] THEN bossLib.Cases THEN
  BasicProvers.SRW_TAC [] [DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_EQ_REFL", pairTheory.ABS_PAIR_THM, pairTheory.pair_CASES, arithmeticTheory.DIVMOD_THM, numeralTheory.divmod_POS, arithmeticTheory.DIVMOD_DEF, patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def, satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, DB.fetch "integer" "tint_neg", listTheory.SUM_MAP_PLUS_ZIP, pred_setTheory.pair_to_num_formula, pred_setTheory.pair_to_num_def] THEN
  metisTools.METIS_TAC [satTheory.dc_eq, satTheory.dc_conj, satTheory.dc_disj, satTheory.dc_imp, pairTheory.ABS_PAIR_THM, pairTheory.pair_CASES, arithmeticTheory.DIVMOD_THM, numeralTheory.divmod_POS, arithmeticTheory.DIVMOD_DEF, arithmeticTheory.MOD_SUB, arithmeticTheory.DIV_SUB, satTheory.dc_neg, pairTheory.PAIR_FST_SND_EQ, satTheory.pth_ni1, satTheory.pth_ni2, satTheory.pth_no1]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.093437

TINT_EQ_TRANS
proof length: 3
proof time: 0.003689
Statistics
  infstep : 28
  nodes   : 16
  maxdepth: 4
Time: 1.169825
  inferstep time: 1.027929
  node_find time: 0.000869
  node_crea time: 0.128795
    pred time: 0.04884
    thmpred time: 0.000003
    mc time: 0.063668
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_EQ_SYM", DB.fetch "integer" "TINT_EQ_REFL", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.PAIR_EQ_EXPAND, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, listTheory.UNZIP, pred_setTheory.CROSS_DEF, pairTheory.PAIR_MAP, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pred_setTheory.IN_CROSS, pred_setTheory.CROSS_applied, pairTheory.ELIM_UNCURRY, pairTheory.PROD_ALL_def] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [boolLib.FUN_EQ_THM, pairTheory.FORALL_PROD, boolLib.EQ_IMP_THM]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062632
Replaying proof: 0.00017

TINT_EQ_AP
proof length: 1
proof time: 0.050685
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.056225
  inferstep time: 0.041899
  node_find time: 0.000043
  node_crea time: 0.009624
    pred time: 0.002823
    thmpred time: 0.0
    mc time: 0.010037
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "TINT_EQ_EQUIV" , DB.fetch "integer" "TINT_EQ_TRANS" , DB.fetch "integer" "TINT_EQ_SYM" , DB.fetch "integer" "TINT_EQ_REFL" , DB.fetch "integer" "tint_eq" , pairTheory.PAIR_FST_SND_EQ , arithmeticTheory.DIV_P , arithmeticTheory.EXP_SUB , arithmeticTheory.MOD_COMMON_FACTOR , arithmeticTheory.MOD_P , pred_setTheory.SUM_SAME_IMAGE , arithmeticTheory.tactictoe_thm_10 , arithmeticTheory.LESS_EQ_LESS_EQ_MONO , arithmeticTheory.ONE_LT_MULT_IMP , arithmeticTheory.EXP_ADD , arithmeticTheory.DOUBLE_LT])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.052784

TINT_10
Statistics
  infstep : 1142
  nodes   : 137
  maxdepth: 5
Time: 10.086168
  inferstep time: 7.996687
  node_find time: 0.085053
  node_crea time: 1.858827
    pred time: 0.552307
    thmpred time: 0.000038
    mc time: 0.888988
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029013

TINT_ADD_SYM
proof length: 4
proof time: 0.004254
Statistics
  infstep : 83
  nodes   : 15
  maxdepth: 3
Time: 1.576926
  inferstep time: 1.422205
  node_find time: 0.003534
  node_crea time: 0.123241
    pred time: 0.049382
    thmpred time: 0.000005
    mc time: 0.067366
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_add", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, quantHeuristicsTheory.PAIR_EQ_EXPAND, listTheory.UNZIP, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, pairTheory.PAIR_MAP, pred_setTheory.CROSS_DEF, pairTheory.PAIR_FUN_THM, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS, pred_setTheory.CROSS_applied] THENL
  [(simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [listTheory.mem_exists_set, quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, listTheory.every_zip_fst, pairTheory.PAIR, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS, listTheory.UNZIP, patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def, pred_setTheory.CROSS_applied, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, listTheory.ZIP_MAP, listTheory.MEM_ZIP_MEM_MAP],
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, listTheory.every_zip_snd, pairTheory.PAIR, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS, listTheory.UNZIP, pred_setTheory.CROSS_applied, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, listTheory.ZIP_MAP, listTheory.MEM_ZIP_MEM_MAP, pairTheory.UNCURRY_VAR, pairTheory.PAIR_MAP]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059676

TINT_MUL_SYM
proof length: 4
proof time: 0.008565
Statistics
  infstep : 82
  nodes   : 14
  maxdepth: 3
Time: 1.551487
  inferstep time: 1.374291
  node_find time: 0.003879
  node_crea time: 0.141302
    pred time: 0.059586
    thmpred time: 0.000004
    mc time: 0.0745
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_mul", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, quantHeuristicsTheory.PAIR_EQ_EXPAND, listTheory.UNZIP, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, pairTheory.PAIR_MAP, pred_setTheory.CROSS_DEF, pairTheory.PAIR_FUN_THM, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS, pred_setTheory.CROSS_applied] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pairTheory.PAIR, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS, listTheory.UNZIP, pred_setTheory.CROSS_applied, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, listTheory.ZIP_MAP, listTheory.MEM_ZIP_MEM_MAP, pairTheory.UNCURRY_VAR, pairTheory.PAIR_MAP, pairTheory.ELIM_PEXISTS]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.060367

TINT_ADD_ASSOC
proof length: 3
proof time: 0.003897
Statistics
  infstep : 274
  nodes   : 28
  maxdepth: 3
Time: 3.551504
  inferstep time: 3.181251
  node_find time: 0.017117
  node_crea time: 0.290631
    pred time: 0.111077
    thmpred time: 0.000009
    mc time: 0.142739
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_add"), pairTheory.PAIR_EQ] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pred_setTheory.IN_CROSS, listTheory.UNZIP, pred_setTheory.CROSS_applied, pairTheory.PAIR, pairTheory.ELIM_UNCURRY, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pairTheory.UNCURRY_VAR, pairTheory.PAIR_MAP, pairTheory.ELIM_PEXISTS, pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.052067

TINT_MUL_ASSOC
proof length: 3
proof time: 0.010631
Statistics
  infstep : 82
  nodes   : 9
  maxdepth: 3
Time: 1.267515
  inferstep time: 1.126812
  node_find time: 0.003663
  node_crea time: 0.110574
    pred time: 0.040535
    thmpred time: 0.000004
    mc time: 0.058821
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_mul"), pairTheory.PAIR_EQ] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pred_setTheory.IN_CROSS, listTheory.UNZIP, pred_setTheory.CROSS_applied, pairTheory.PAIR, pairTheory.ELIM_UNCURRY, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pairTheory.UNCURRY_VAR, pairTheory.PAIR_MAP, pairTheory.ELIM_PEXISTS, pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.072804

TINT_LDISTRIB
proof length: 3
proof time: 0.016225
Statistics
  infstep : 93
  nodes   : 10
  maxdepth: 3
Time: 1.264813
  inferstep time: 1.096875
  node_find time: 0.004676
  node_crea time: 0.116493
    pred time: 0.042636
    thmpred time: 0.000003
    mc time: 0.080194
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_add"), pairTheory.PAIR_EQ] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [pairTheory.PAIR, DB.fetch "integer" "TINT_MUL_ASSOC", DB.fetch "integer" "TINT_ADD_ASSOC", DB.fetch "integer" "tint_mul", DB.fetch "integer" "tint_add", DB.fetch "integer" "TINT_MUL_SYM", DB.fetch "integer" "TINT_ADD_SYM", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.PAIR_EQ_EXPAND, listTheory.UNZIP, pairTheory.PAIR_MAP, pred_setTheory.CROSS_DEF, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pairTheory.ELIM_UNCURRY, pred_setTheory.IN_CROSS]
Replaying proof: 0.000754

TINT_ADD_LID
proof length: 4
proof time: 0.00355
Statistics
  infstep : 62
  nodes   : 18
  maxdepth: 4
Time: 1.260297
  inferstep time: 1.1013
  node_find time: 0.002785
  node_crea time: 0.13264
    pred time: 0.044764
    thmpred time: 0.000001
    mc time: 0.07718
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_1"), (DB.fetch "integer" "tint_0"), (DB.fetch "integer" "tint_eq")] THEN
  boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_add"), pairTheory.PAIR_EQ] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [DB.fetch "integer" "tint_1", arithmeticTheory.SUC_ONE_ADD, pairTheory.PAIR, pred_setTheory.IN_CROSS, listTheory.UNZIP, pairTheory.ELIM_UNCURRY, pred_setTheory.CROSS_applied, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, listTheory.ZIP_MAP, listTheory.MEM_ZIP_MEM_MAP, pairTheory.UNCURRY_VAR]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068032

TINT_MUL_LID
Statistics
  infstep : 1233
  nodes   : 176
  maxdepth: 6
Time: 10.000359
  inferstep time: 8.202837
  node_find time: 0.121743
  node_crea time: 1.462951
    pred time: 0.347531
    thmpred time: 0.000016
    mc time: 0.794998
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057214

TINT_ADD_LINV
proof length: 5
proof time: 0.029968
Statistics
  infstep : 674
  nodes   : 80
  maxdepth: 5
Time: 6.410522
  inferstep time: 5.443845
  node_find time: 0.057793
  node_crea time: 0.736995
    pred time: 0.209699
    thmpred time: 0.000012
    mc time: 0.409499
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [pairTheory.PAIR, DB.fetch "integer" "tint_neg", DB.fetch "integer" "TINT_ADD_LID", DB.fetch "integer" "TINT_10", DB.fetch "integer" "tint_0", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, DB.fetch "integer" "tint_add", DB.fetch "integer" "TINT_ADD_ASSOC", DB.fetch "integer" "TINT_ADD_SYM", DB.fetch "integer" "TINT_LDISTRIB", DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_EQ_REFL", DB.fetch "integer" "TINT_EQ_SYM", DB.fetch "integer" "TINT_EQ_TRANS", DB.fetch "integer" "TINT_MUL_LID"] THEN
  BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 183432*)x"] THEN
  boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_add"), pairTheory.PAIR_EQ] THEN
  numLib.DECIDE_TAC
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.105015

TINT_LT_TOTAL
proof length: 3
proof time: 0.004281
Statistics
  infstep : 15
  nodes   : 9
  maxdepth: 3
Time: 0.736418
  inferstep time: 0.666843
  node_find time: 0.00076
  node_crea time: 0.056308
    pred time: 0.021911
    thmpred time: 0.000001
    mc time: 0.032941
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_lt", DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_EQ_SYM", DB.fetch "integer" "TINT_EQ_TRANS", DB.fetch "integer" "TINT_EQ_REFL", DB.fetch "integer" "TINT_ADD_LID", DB.fetch "integer" "TINT_ADD_LINV", DB.fetch "integer" "TINT_MUL_LID", DB.fetch "integer" "TINT_EQ_AP", DB.fetch "integer" "TINT_EQ_EQUIV", DB.fetch "integer" "TINT_10", pred_setTheory.IN_CROSS, pairTheory.FST, pairTheory.SND, pred_setTheory.INSERT_DEF] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [pairTheory.PAIR, pred_setTheory.IN_CROSS, pairTheory.FST, pairTheory.SND, pred_setTheory.INSERT_DEF, arithmeticTheory.tactictoe_thm_24, arithmeticTheory.ADD_DIV_RWT, arithmeticTheory.LESS_OR_EQ_ADD, arithmeticTheory.ZERO_LESS_ADD, arithmeticTheory.tactictoe_thm_22, patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE, pred_setTheory.GSPEC_OR, pred_setTheory.UNION_DEF, pairTheory.LEX_DEF, pred_setTheory.CROSS_SUBSET, pred_setTheory.FINITE_CROSS_EQ]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063733

TINT_LT_REFL
proof length: 2
proof time: 0.001211
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.247074
  inferstep time: 0.21558
  node_find time: 0.00028
  node_crea time: 0.023922
    pred time: 0.009731
    thmpred time: 0.000001
    mc time: 0.016406
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_lt", DB.fetch "integer" "TINT_LT_TOTAL", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, listTheory.UNZIP, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, rich_listTheory.UNZIP_SNOC, quantHeuristicsTheory.PAIR_EQ_EXPAND, pairTheory.PAIR_MAP, pred_setTheory.CROSS_DEF, pred_setTheory.IN_CROSS, pairTheory.ELIM_UNCURRY, pred_setTheory.CROSS_applied, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062378

TINT_LT_TRANS
proof length: 3
proof time: 0.00753
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 3
Time: 0.387652
  inferstep time: 0.340143
  node_find time: 0.000347
  node_crea time: 0.035222
    pred time: 0.01241
    thmpred time: 0.000001
    mc time: 0.024814
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, DB.fetch "integer" "tint_lt", DB.fetch "integer" "TINT_LT_TOTAL", DB.fetch "integer" "TINT_LT_REFL", quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, quantHeuristicsTheory.PAIR_EQ_EXPAND, rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP, listTheory.UNZIP, pred_setTheory.CROSS_DEF, pairTheory.PAIR_MAP, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, pred_setTheory.IN_CROSS, pred_setTheory.CROSS_applied, pairTheory.ELIM_UNCURRY, pairTheory.PROD_ALL_def] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, pairTheory.PAIR, quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, listTheory.UNZIP, quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006083

TINT_LT_ADD
proof length: 1
proof time: 0.001004
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.131758
  inferstep time: 0.111006
  node_find time: 0.000169
  node_crea time: 0.016552
    pred time: 0.006085
    thmpred time: 0.0
    mc time: 0.010413
    inst time: 0.0
Proof found: (let fun unfold_dec l = boolLib.REPEAT jrhUtils.GEN_PAIR_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.REWRITE_TAC l hhs_infixl0_open boolLib.THEN hhs_infixl0_close numLib.ARITH_TAC in unfold_dec end [ DB.fetch "integer" "TINT_LT_TRANS" , DB.fetch "integer" "TINT_LT_TOTAL" , DB.fetch "integer" "TINT_LT_REFL" , DB.fetch "integer" "TINT_ADD_ASSOC" , DB.fetch "integer" "TINT_LDISTRIB" , DB.fetch "integer" "TINT_ADD_SYM" , DB.fetch "integer" "tint_lt" , DB.fetch "integer" "TINT_ADD_LID" , DB.fetch "integer" "TINT_ADD_LINV" , DB.fetch "integer" "tint_add" , DB.fetch "integer" "TINT_EQ_TRANS" , DB.fetch "integer" "TINT_MUL_ASSOC" , listTheory.mem_exists_set , pred_setTheory.tactictoe_thm_75 , rich_listTheory.MAP_SND_FILTER_NEQ , arithmeticTheory.DIV_EQ_X ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007988

TINT_LT_MUL
Statistics
  infstep : 750
  nodes   : 137
  maxdepth: 6
Time: 10.090089
  inferstep time: 8.502941
  node_find time: 0.078021
  node_crea time: 1.344739
    pred time: 0.303489
    thmpred time: 0.000023
    mc time: 0.690347
    inst time: 0.0
Proof status: Time Out
Replaying proof: 0.006319

TINT_NEG_WELLDEF
proof length: 3
proof time: 0.001952
Statistics
  infstep : 77
  nodes   : 16
  maxdepth: 3
Time: 1.397864
  inferstep time: 1.155028
  node_find time: 0.004576
  node_crea time: 0.201784
    pred time: 0.06652
    thmpred time: 0.000002
    mc time: 0.100471
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_add"), (DB.fetch "integer" "tint_0"), (DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_neg")] THEN
  numLib.DECIDE_TAC
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016073

TINT_ADD_WELLDEFR
proof length: 3
proof time: 0.003649
Statistics
  infstep : 11
  nodes   : 5
  maxdepth: 3
Time: 0.4186
  inferstep time: 0.374944
  node_find time: 0.00059
  node_crea time: 0.030522
    pred time: 0.011747
    thmpred time: 0.0
    mc time: 0.022331
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "tint_eq"), (DB.fetch "integer" "tint_add"), pairTheory.PAIR_EQ] THEN
  (simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.LET_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [quantHeuristicsTheory.GUESS_RULES_EXISTS___NEW_FV, quantHeuristicsTheory.GUESS_RULES_FORALL___NEW_FV, quantHeuristicsTheory.PAIR_EQ_EXPAND, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, listTheory.MEM_ZIP_MEM_MAP, pairTheory.PAIR, pairTheory.UNCURRY_VAR, pairTheory.PAIR_MAP, pairTheory.ELIM_UNCURRY, pairTheory.ELIM_PEXISTS, pairTheory.ELIM_PFORALL, pred_setTheory.CROSS_DEF, pred_setTheory.IN_CROSS, listTheory.UNZIP, pairTheory.PROD_ALL_def]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007015

TINT_ADD_WELLDEF
proof length: 1
proof time: 0.003605
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.136202
  inferstep time: 0.108334
  node_find time: 0.000189
  node_crea time: 0.022262
    pred time: 0.00799
    thmpred time: 0.000001
    mc time: 0.014736
    inst time: 0.0
Proof found: (let fun unfold_dec l = boolLib.REPEAT jrhUtils.GEN_PAIR_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.REWRITE_TAC l hhs_infixl0_open boolLib.THEN hhs_infixl0_close numLib.ARITH_TAC in unfold_dec end [ ( DB.fetch "integer" "tint_eq" ) , ( DB.fetch "integer" "tint_add" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016246

TINT_MUL_WELLDEFR
Statistics
  infstep : 1054
  nodes   : 112
  maxdepth: 5
Time: 10.003097
  inferstep time: 8.633731
  node_find time: 0.110412
  node_crea time: 0.987655
    pred time: 0.25627
    thmpred time: 0.000023
    mc time: 0.465289
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.267303

TINT_MUL_WELLDEF
Statistics
  infstep : 644
  nodes   : 117
  maxdepth: 5
Time: 10.030654
  inferstep time: 8.52527
  node_find time: 0.072032
  node_crea time: 1.251204
    pred time: 0.309992
    thmpred time: 0.000025
    mc time: 0.641993
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.259064

TINT_LT_WELLDEFR
proof length: 3
proof time: 0.005187
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 3
Time: 0.448846
  inferstep time: 0.390814
  node_find time: 0.000659
  node_crea time: 0.03704
    pred time: 0.014235
    thmpred time: 0.0
    mc time: 0.032309
    inst time: 0.0
Proof found: boolLib.REPEAT jrhUtils.GEN_PAIR_TAC THEN BasicProvers.SRW_TAC [] [pairTheory.PAIR, quantHeuristicsTheory.PAIR_EQ_SIMPLE_EXPAND, listTheory.ZIP_MAP, DB.fetch "integer" "TINT_LT_TOTAL", DB.fetch "integer" "tint_lt", DB.fetch "integer" "TINT_LT_ADD", DB.fetch "integer" "TINT_LT_TRANS", DB.fetch "integer" "TINT_LT_MUL", DB.fetch "integer" "TINT_LT_REFL", DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_ADD_WELLDEFR", DB.fetch "integer" "TINT_MUL_WELLDEFR", DB.fetch "integer" "TINT_ADD_WELLDEF", DB.fetch "integer" "TINT_MUL_WELLDEF", DB.fetch "integer" "TINT_NEG_WELLDEF", quantHeuristicsTheory.PAIR_EQ_EXPAND] THEN
  numLib.DECIDE_TAC
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008853

TINT_LT_WELLDEFL
proof length: 1
proof time: 0.003719
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.153556
  inferstep time: 0.109761
  node_find time: 0.000215
  node_crea time: 0.038807
    pred time: 0.027286
    thmpred time: 0.000001
    mc time: 0.011425
    inst time: 0.0
Proof found: (let fun unfold_dec l = boolLib.REPEAT jrhUtils.GEN_PAIR_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.REWRITE_TAC l hhs_infixl0_open boolLib.THEN hhs_infixl0_close numLib.ARITH_TAC in unfold_dec end [ ( DB.fetch "integer" "tint_eq" ) , ( DB.fetch "integer" "tint_lt" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012016

TINT_LT_WELLDEF
proof length: 1
proof time: 0.004006
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.13488
  inferstep time: 0.116616
  node_find time: 0.000174
  node_crea time: 0.011154
    pred time: 0.003625
    thmpred time: 0.000001
    mc time: 0.01151
    inst time: 0.0
Proof found: (let fun unfold_dec l = boolLib.REPEAT jrhUtils.GEN_PAIR_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.REWRITE_TAC l hhs_infixl0_open boolLib.THEN hhs_infixl0_close numLib.ARITH_TAC in unfold_dec end [ ( DB.fetch "integer" "tint_eq" ) , ( DB.fetch "integer" "tint_lt" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014293

tint_of_num_eq
Statistics
  infstep : 870
  nodes   : 165
  maxdepth: 6
Time: 10.002111
  inferstep time: 7.468699
  node_find time: 0.128696
  node_crea time: 2.135579
    pred time: 0.567297
    thmpred time: 0.000028
    mc time: 1.033804
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.162303

TINT_INJ
proof length: 3
proof time: 0.003583
Statistics
  infstep : 231
  nodes   : 79
  maxdepth: 6
Time: 5.645321
  inferstep time: 4.497265
  node_find time: 0.025587
  node_crea time: 0.97107
    pred time: 0.287544
    thmpred time: 0.00002
    mc time: 0.579256
    inst time: 0.0
Proof found: boolLib.ONCE_REWRITE_TAC [(DB.fetch "integer" "tactictoe_thm_0")] THEN BasicProvers.SRW_TAC [] [DB.fetch "integer" "tactictoe_thm_0", DB.fetch "integer" "tactictoe_thm_1", DB.fetch "integer" "tint_of_num_eq", DB.fetch "integer" "tint_of_num", DB.fetch "integer" "tint_eq", DB.fetch "integer" "TINT_EQ_AP", DB.fetch "integer" "TINT_EQ_EQUIV", DB.fetch "integer" "TINT_EQ_SYM", DB.fetch "integer" "TINT_LT_WELLDEF", DB.fetch "integer" "TINT_LT_WELLDEFL", DB.fetch "integer" "TINT_LT_WELLDEFR", DB.fetch "integer" "TINT_EQ_REFL", DB.fetch "integer" "TINT_EQ_TRANS", DB.fetch "integer" "TINT_ADD_LID", DB.fetch "integer" "TINT_ADD_LINV", DB.fetch "integer" "TINT_ADD_WELLDEF"] THEN
  numLib.DECIDE_TAC
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.218931

NUM_POSTINT_EX
Statistics
  infstep : 984
  nodes   : 165
  maxdepth: 6
Time: 10.044693
  inferstep time: 7.890126
  node_find time: 0.14179
  node_crea time: 1.718993
    pred time: 0.382509
    thmpred time: 0.000024
    mc time: 0.923638
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.26694

INT_0
proof length: 1
proof time: 0.013636
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.047346
  inferstep time: 0.034003
  node_find time: 0.000116
  node_crea time: 0.009368
    pred time: 0.003045
    thmpred time: 0.000001
    mc time: 0.007771
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "int_0" , DB.fetch "integer" "INT_10" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_1" , DB.fetch "integer" "int_add" , DB.fetch "integer" "int_lt" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "int_ABS_REP_CLASS" , DB.fetch "integer" "int_bijections" , DB.fetch "integer" "int_ABS_def" , DB.fetch "integer" "int_REP_def" , DB.fetch "integer" "int_TY_DEF"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004686

INT_1
Statistics
  infstep : 1191
  nodes   : 179
  maxdepth: 5
Time: 10.094496
  inferstep time: 7.497112
  node_find time: 0.165002
  node_crea time: 2.073779
    pred time: 0.398895
    thmpred time: 0.000019
    mc time: 1.26266
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003816

INT_ADD_LID
proof length: 1
proof time: 0.022645
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.056175
  inferstep time: 0.041031
  node_find time: 0.00011
  node_crea time: 0.010255
    pred time: 0.003403
    thmpred time: 0.0
    mc time: 0.008822
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "tactictoe_thm_4" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "tactictoe_thm_5" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "int_add"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006638

INT_ADD_RID
proof length: 1
proof time: 0.015914
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.046491
  inferstep time: 0.031732
  node_find time: 0.00013
  node_crea time: 0.009729
    pred time: 0.003131
    thmpred time: 0.000001
    mc time: 0.008855
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "int_add" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "tactictoe_thm_5"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004258

INT_ADD_LINV
proof length: 1
proof time: 0.025528
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.053357
  inferstep time: 0.036843
  node_find time: 0.000151
  node_crea time: 0.011816
    pred time: 0.003839
    thmpred time: 0.0
    mc time: 0.00977
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "tactictoe_thm_5" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "tactictoe_thm_4" , DB.fetch "integer" "INT_ADD_ASSOC"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006877

INT_ADD_RINV
proof length: 1
proof time: 0.025603
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.042835
  inferstep time: 0.028774
  node_find time: 0.000117
  node_crea time: 0.009574
    pred time: 0.003205
    thmpred time: 0.000001
    mc time: 0.008082
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "INT_LT_LADD_IMP"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.024629

INT_MUL_LID
proof length: 1
proof time: 0.032318
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.057585
  inferstep time: 0.038767
  node_find time: 0.000183
  node_crea time: 0.011918
    pred time: 0.002848
    thmpred time: 0.000001
    mc time: 0.01301
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_8" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "int_of_num"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006753

INT_MUL_RID
proof length: 1
proof time: 0.028583
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.058224
  inferstep time: 0.037739
  node_find time: 0.000217
  node_crea time: 0.013998
    pred time: 0.003671
    thmpred time: 0.0
    mc time: 0.013966
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_9" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "tactictoe_thm_8" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_INJ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006322

INT_RDISTRIB
proof length: 1
proof time: 0.009772
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.133908
  inferstep time: 0.120452
  node_find time: 0.000235
  node_crea time: 0.008711
    pred time: 0.002826
    thmpred time: 0.0
    mc time: 0.007207
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_9" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "int_add" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "int_sub" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.070929

INT_EQ_LADD
Statistics
  infstep : 1281
  nodes   : 123
  maxdepth: 5
Time: 10.005735
  inferstep time: 8.218414
  node_find time: 0.19273
  node_crea time: 1.133518
    pred time: 0.317215
    thmpred time: 0.000019
    mc time: 0.509622
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.13405

INT_EQ_RADD
proof length: 1
proof time: 0.010671
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.135059
  inferstep time: 0.121905
  node_find time: 0.000206
  node_crea time: 0.008909
    pred time: 0.002986
    thmpred time: 0.0
    mc time: 0.006771
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_EQ_LADD" , DB.fetch "integer" "tactictoe_thm_11" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "tactictoe_thm_12" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "int_add" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_LID" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058095

INT_ADD_LID_UNIQ
proof length: 1
proof time: 0.07156
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.105368
  inferstep time: 0.086625
  node_find time: 0.000108
  node_crea time: 0.010272
    pred time: 0.002662
    thmpred time: 0.0
    mc time: 0.011968
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_EQ_LADD" , DB.fetch "integer" "tactictoe_thm_11" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "tactictoe_thm_12"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.055764

INT_ADD_RID_UNIQ
proof length: 1
proof time: 0.082443
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.104787
  inferstep time: 0.090643
  node_find time: 0.000115
  node_crea time: 0.009682
    pred time: 0.002885
    thmpred time: 0.0
    mc time: 0.008321
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_EQ_LADD" , DB.fetch "integer" "tactictoe_thm_11"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.105634

INT_LNEG_UNIQ
proof length: 1
proof time: 0.074252
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.066463
  inferstep time: 0.05209
  node_find time: 0.000109
  node_crea time: 0.00969
    pred time: 0.002968
    thmpred time: 0.0
    mc time: 0.008301
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "tactictoe_thm_13"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.075003

INT_RNEG_UNIQ
proof length: 1
proof time: 0.067345
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.100669
  inferstep time: 0.086222
  node_find time: 0.000128
  node_crea time: 0.009639
    pred time: 0.002787
    thmpred time: 0.0
    mc time: 0.008468
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "tactictoe_thm_7"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068481

INT_NEG_ADD
Statistics
  infstep : 1092
  nodes   : 132
  maxdepth: 5
Time: 10.00087
  inferstep time: 8.379647
  node_find time: 0.170037
  node_crea time: 1.018926
    pred time: 0.288707
    thmpred time: 0.000012
    mc time: 0.425748
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.147589

INT_MUL_LZERO
proof length: 3
proof time: 0.097773
Statistics
  infstep : 21
  nodes   : 8
  maxdepth: 3
Time: 0.671853
  inferstep time: 0.579857
  node_find time: 0.002679
  node_crea time: 0.065294
    pred time: 0.02298
    thmpred time: 0.000001
    mc time: 0.042836
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.GEN_REWRITE_TAC (liteLib.LAND_CONV o boolLib.RAND_CONV) boolLib.empty_rewrites [boolLib.GSYM (DB.fetch "integer" "INT_ADD_LID")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LID", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RID", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2", DB.fetch "integer" "tactictoe_thm_3", DB.fetch "integer" "INT_0", DB.fetch "integer" "INT_MUL_LID", DB.fetch "integer" "INT_MUL_RID", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_RDISTRIB"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062647

INT_MUL_RZERO
proof length: 1
proof time: 0.034974
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.193115
  inferstep time: 0.043454
  node_find time: 0.000154
  node_crea time: 0.125777
    pred time: 0.003397
    thmpred time: 0.0
    mc time: 0.027278
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_MUL_LZERO" , DB.fetch "integer" "tactictoe_thm_9" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "tactictoe_thm_17" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LINV"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082073

INT_NEG_LMUL
proof length: 4
proof time: 0.033679
Statistics
  infstep : 60
  nodes   : 11
  maxdepth: 4
Time: 1.163724
  inferstep time: 1.032191
  node_find time: 0.006524
  node_crea time: 0.086594
    pred time: 0.040277
    thmpred time: 0.000007
    mc time: 0.040113
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.CONV_TAC boolLib.SYM_CONV THEN
  boolLib.REWRITE_TAC [boolLib.GSYM (DB.fetch "integer" "INT_LNEG_UNIQ")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "int_sub", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "INT_MUL_RZERO", DB.fetch "integer" "int_neg", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_MUL_COMM", DB.fetch "integer" "INT_MUL_SYM", DB.fetch "integer" "tactictoe_thm_9"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064531

INT_NEG_RMUL
proof length: 1
proof time: 0.037595
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.061201
  inferstep time: 0.048146
  node_find time: 0.000129
  node_crea time: 0.009483
    pred time: 0.003804
    thmpred time: 0.0
    mc time: 0.005885
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_9" , DB.fetch "integer" "tactictoe_thm_10"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059943

INT_NEGNEG
proof length: 1
proof time: 0.004172
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.133079
  inferstep time: 0.121492
  node_find time: 0.000242
  node_crea time: 0.007795
    pred time: 0.002745
    thmpred time: 0.0
    mc time: 0.005287
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "tactictoe_thm_7" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "tactictoe_thm_15" , DB.fetch "integer" "tactictoe_thm_16" , DB.fetch "integer" "INT_RDISTRIB" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.060399

INT_NEG_MUL2
proof length: 1
proof time: 0.047374
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.103967
  inferstep time: 0.092439
  node_find time: 0.000119
  node_crea time: 0.008421
    pred time: 0.003146
    thmpred time: 0.000001
    mc time: 0.005339
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "tactictoe_thm_18" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_MUL_COMM" , DB.fetch "integer" "INT_MUL_SYM" , DB.fetch "integer" "tactictoe_thm_9" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "tactictoe_thm_17" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "int_mul" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_RNEG_UNIQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007499

INT_LT_LADD
proof length: 4
proof time: 0.094011
Statistics
  infstep : 47
  nodes   : 9
  maxdepth: 3
Time: 0.809324
  inferstep time: 0.683141
  node_find time: 0.006
  node_crea time: 0.075054
    pred time: 0.030589
    thmpred time: 0.000002
    mc time: 0.040465
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.EQ_TAC THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_TRANS", DB.fetch "integer" "INT_LT_TOTAL", DB.fetch "integer" "int_gt", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LT_REFL", DB.fetch "integer" "int_lt", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "INT_ADD_ASSOC", DB.fetch "integer" "INT_EQ_LADD", DB.fetch "integer" "tactictoe_thm_11", DB.fetch "integer" "INT_EQ_RADD", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_RDISTRIB"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.108705

INT_LT_RADD
Statistics
  infstep : 805
  nodes   : 93
  maxdepth: 5
Time: 10.016367
  inferstep time: 8.697243
  node_find time: 0.148318
  node_crea time: 0.823639
    pred time: 0.239886
    thmpred time: 0.000015
    mc time: 0.385862
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065116

INT_NOT_LT
proof length: 1
proof time: 0.080623
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.106789
  inferstep time: 0.085085
  node_find time: 0.000249
  node_crea time: 0.016201
    pred time: 0.005625
    thmpred time: 0.000001
    mc time: 0.010918
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_le" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_REFL" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "int_gt" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "int_lt" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_LT_MUL" , DB.fetch "integer" "INT_10" , DB.fetch "integer" "tactictoe_thm_20"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039053

INT_LT_ANTISYM
proof length: 1
proof time: 0.052187
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.078046
  inferstep time: 0.065364
  node_find time: 0.000127
  node_crea time: 0.008848
    pred time: 0.002899
    thmpred time: 0.0
    mc time: 0.006551
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LT_REFL" , DB.fetch "integer" "tactictoe_thm_24" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "int_gt" , DB.fetch "integer" "int_lt" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_LT_MUL"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061135
Replaying proof: 0.00003

INT_NOT_LE
proof length: 1
proof time: 0.059847
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.095306
  inferstep time: 0.077219
  node_find time: 0.000185
  node_crea time: 0.011391
    pred time: 0.004176
    thmpred time: 0.0
    mc time: 0.009703
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "int_le" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "INT_LT_GT" , DB.fetch "integer" "tactictoe_thm_24" , DB.fetch "integer" "INT_LT_REFL" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "int_gt" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_TRANS"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039129

INT_LE_TOTAL
Statistics
  infstep : 1027
  nodes   : 73
  maxdepth: 5
Time: 10.000552
  inferstep time: 6.854503
  node_find time: 0.167653
  node_crea time: 0.617143
    pred time: 0.198304
    thmpred time: 0.000016
    mc time: 0.218403
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036299

INT_LET_TOTAL
proof length: 1
proof time: 0.040018
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.066916
  inferstep time: 0.055343
  node_find time: 0.000184
  node_crea time: 0.00812
    pred time: 0.003023
    thmpred time: 0.0
    mc time: 0.004455
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "INT_LT_GT" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "int_gt"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057008

INT_LTE_TOTAL
proof length: 1
proof time: 0.04595
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.059409
  inferstep time: 0.048726
  node_find time: 0.000137
  node_crea time: 0.007617
    pred time: 0.002992
    thmpred time: 0.0
    mc time: 0.003954
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "INT_LT_GT" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LT_TRANS"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071139

INT_LE_REFL
proof length: 1
proof time: 0.029673
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.037904
  inferstep time: 0.026654
  node_find time: 0.000143
  node_crea time: 0.007882
    pred time: 0.002817
    thmpred time: 0.0
    mc time: 0.004803
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "tactictoe_thm_5" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "tactictoe_thm_6"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04814

INT_LE_LT
proof length: 1
proof time: 0.013408
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.149868
  inferstep time: 0.135982
  node_find time: 0.000344
  node_crea time: 0.008598
    pred time: 0.003288
    thmpred time: 0.0
    mc time: 0.00534
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "INT_LT_TOTAL" , DB.fetch "integer" "tactictoe_thm_26" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "int_gt" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" ])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.187516
Replaying proof: 0.000367

INT_LT_IMP_LE
proof length: 1
proof time: 0.030615
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.058737
  inferstep time: 0.047099
  node_find time: 0.000166
  node_crea time: 0.008426
    pred time: 0.003389
    thmpred time: 0.000001
    mc time: 0.004482
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "INT_LT_GT" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "tactictoe_thm_23"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068166

INT_LTE_TRANS
proof length: 1
proof time: 0.037769
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.080908
  inferstep time: 0.067183
  node_find time: 0.000138
  node_crea time: 0.009325
    pred time: 0.003143
    thmpred time: 0.0
    mc time: 0.00674
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "tactictoe_thm_29" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "tactictoe_thm_19"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.144394

INT_LET_TRANS
proof length: 1
proof time: 0.053401
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.063646
  inferstep time: 0.051143
  node_find time: 0.000144
  node_crea time: 0.008454
    pred time: 0.002716
    thmpred time: 0.000001
    mc time: 0.006028
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "tactictoe_thm_29" , DB.fetch "integer" "INT_LT_TRANS" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "tactictoe_thm_30"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.066639

INT_LE_TRANS
proof length: 1
proof time: 0.051836
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.100094
  inferstep time: 0.087824
  node_find time: 0.00015
  node_crea time: 0.008249
    pred time: 0.002734
    thmpred time: 0.0
    mc time: 0.005704
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "tactictoe_thm_30" , DB.fetch "integer" "tactictoe_thm_29" , DB.fetch "integer" "INT_LT_TRANS"])
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.140698

INT_LE_ANTISYM
proof length: 1
proof time: 0.013526
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.137958
  inferstep time: 0.126428
  node_find time: 0.000279
  node_crea time: 0.007573
    pred time: 0.002798
    thmpred time: 0.0
    mc time: 0.00411
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LE_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "tactictoe_thm_30" , DB.fetch "integer" "tactictoe_thm_29" ])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.163829

INT_LET_ANTISYM
proof length: 1
proof time: 0.036838
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.102046
  inferstep time: 0.08547
  node_find time: 0.000159
  node_crea time: 0.010805
    pred time: 0.003331
    thmpred time: 0.0
    mc time: 0.009085
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LE_ANTISYM" , DB.fetch "integer" "INT_LE_TRANS" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL" , DB.fetch "integer" "INT_LT_ANTISYM"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.08513

INT_LTE_ANTSYM
proof length: 1
proof time: 0.043273
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.076347
  inferstep time: 0.064555
  node_find time: 0.000173
  node_crea time: 0.008056
    pred time: 0.00276
    thmpred time: 0.0
    mc time: 0.005186
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_ANTISYM" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LE_ANTISYM" , DB.fetch "integer" "INT_LE_TRANS" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "int_ge" , DB.fetch "integer" "INT_LE_REFL"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067041

INT_NEG_LT0
proof length: 5
proof time: 0.164555
Statistics
  infstep : 560
  nodes   : 101
  maxdepth: 5
Time: 7.264294
  inferstep time: 6.11376
  node_find time: 0.099986
  node_crea time: 0.713504
    pred time: 0.214773
    thmpred time: 0.000011
    mc time: 0.325671
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.CONV_TAC boolLib.SYM_CONV THEN
  boolLib.GEN_REWRITE_TAC (liteLib.LAND_CONV o boolLib.RAND_CONV) boolLib.empty_rewrites [boolLib.GSYM (DB.fetch "integer" "INT_ADD_LID")] THEN
  boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEGNEG", DB.fetch "integer" "int_neg", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071696

INT_NEG_GT0
proof length: 1
proof time: 0.074014
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.093572
  inferstep time: 0.078117
  node_find time: 0.000161
  node_crea time: 0.011283
    pred time: 0.00418
    thmpred time: 0.000001
    mc time: 0.006696
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_MUL_LZERO"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04173

INT_NEG_LE0
proof length: 3
proof time: 0.085568
Statistics
  infstep : 11
  nodes   : 6
  maxdepth: 3
Time: 0.46551
  inferstep time: 0.410813
  node_find time: 0.001618
  node_crea time: 0.036773
    pred time: 0.015202
    thmpred time: 0.000002
    mc time: 0.02116
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEGNEG", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "int_neg", DB.fetch "integer" "INT_LE_ANTISYM", DB.fetch "integer" "int_le"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06679

INT_NEG_GE0
proof length: 1
proof time: 0.081247
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.111343
  inferstep time: 0.092184
  node_find time: 0.000147
  node_crea time: 0.010487
    pred time: 0.003342
    thmpred time: 0.000001
    mc time: 0.010322
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "int_neg" , DB.fetch "integer" "int_le"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077098

INT_LT_NEGTOTAL
proof length: 3
proof time: 0.030419
Statistics
  infstep : 90
  nodes   : 25
  maxdepth: 4
Time: 1.544453
  inferstep time: 1.319208
  node_find time: 0.013796
  node_crea time: 0.152829
    pred time: 0.050239
    thmpred time: 0.000006
    mc time: 0.068083
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_NEGNEG", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "int_sub", DB.fetch "integer" "int_neg"] THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_ADD_LID", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_ADD_RID", DB.fetch "integer" "INT_MUL_LZERO", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_MUL_RZERO", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_MUL", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "tactictoe_thm_5", DB.fetch "integer" "tactictoe_thm_4", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2", DB.fetch "integer" "tactictoe_thm_3", DB.fetch "integer" "INT_0", DB.fetch "integer" "int_0", DB.fetch "integer" "INT_10", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "tactictoe_thm_26", DB.fetch "integer" "INT_LT_TOTAL", DB.fetch "integer" "tactictoe_thm_31", DB.fetch "integer" "tactictoe_thm_32"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068539

INT_LE_NEGTOTAL
proof length: 3
proof time: 0.038991
Statistics
  infstep : 19
  nodes   : 8
  maxdepth: 3
Time: 0.736887
  inferstep time: 0.66631
  node_find time: 0.003018
  node_crea time: 0.047244
    pred time: 0.019236
    thmpred time: 0.000001
    mc time: 0.021781
    inst time: 0.0
Proof found: boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEGNEG"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_LET_TOTAL", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "INT_LE_TOTAL", DB.fetch "integer" "INT_LTE_TOTAL", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LET_ANTISYM", DB.fetch "integer" "INT_LET_TRANS", DB.fetch "integer" "INT_LE_ANTISYM", DB.fetch "integer" "INT_LE_REFL", DB.fetch "integer" "INT_LE_TRANS", DB.fetch "integer" "INT_LT_IMP_LE", DB.fetch "integer" "INT_LTE_ANTSYM", DB.fetch "integer" "INT_LTE_TRANS", DB.fetch "integer" "INT_LT_LE"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.083661

INT_LE_MUL
Statistics
  infstep : 643
  nodes   : 105
  maxdepth: 5
Time: 10.000722
  inferstep time: 8.338442
  node_find time: 0.147995
  node_crea time: 1.101279
    pred time: 0.305666
    thmpred time: 0.000025
    mc time: 0.497858
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.335191

INT_LE_SQUARE
Statistics
  infstep : 618
  nodes   : 130
  maxdepth: 6
Time: 10.070283
  inferstep time: 7.888977
  node_find time: 0.137462
  node_crea time: 1.671997
    pred time: 0.593884
    thmpred time: 0.000017
    mc time: 0.452857
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.100185

INT_LE_01
proof length: 1
proof time: 0.030807
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.040499
  inferstep time: 0.021478
  node_find time: 0.000208
  node_crea time: 0.012744
    pred time: 0.003505
    thmpred time: 0.0
    mc time: 0.010969
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_LE_SQUARE" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_MUL_LZERO" , DB.fetch "integer" "INT_MUL_RZERO" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "tactictoe_thm_2"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039709

INT_LT_01
Statistics
  infstep : 720
  nodes   : 102
  maxdepth: 5
Time: 10.013216
  inferstep time: 7.940082
  node_find time: 0.143206
  node_crea time: 1.492362
    pred time: 0.457861
    thmpred time: 0.00002
    mc time: 0.544297
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.019184

INT_LE_LADD
proof length: 2
proof time: 0.013223
Statistics
  infstep : 54
  nodes   : 11
  maxdepth: 3
Time: 1.193599
  inferstep time: 1.070522
  node_find time: 0.009235
  node_crea time: 0.070876
    pred time: 0.02691
    thmpred time: 0.000001
    mc time: 0.03065
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "integer" "INT_LE_LT"), boolTheory.LEFT_AND_OVER_OR] THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_ADD_ASSOC", DB.fetch "integer" "INT_EQ_LADD", DB.fetch "integer" "tactictoe_thm_11", DB.fetch "integer" "INT_EQ_RADD", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "tactictoe_thm_20", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_15", DB.fetch "integer" "tactictoe_thm_12", DB.fetch "integer" "tactictoe_thm_22"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.077882

INT_LE_RADD
proof length: 2
proof time: 0.01068
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 2
Time: 0.521683
  inferstep time: 0.4589
  node_find time: 0.001834
  node_crea time: 0.046626
    pred time: 0.017003
    thmpred time: 0.000003
    mc time: 0.024144
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "integer" "INT_LE_LT"), boolTheory.LEFT_AND_OVER_OR] THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LE_LADD", DB.fetch "integer" "INT_ADD_ASSOC", DB.fetch "integer" "INT_EQ_LADD", DB.fetch "integer" "tactictoe_thm_11", DB.fetch "integer" "INT_EQ_RADD", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "tactictoe_thm_20", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_15", DB.fetch "integer" "tactictoe_thm_12"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.155184

INT_LT_ADD2
Statistics
  infstep : 1296
  nodes   : 143
  maxdepth: 6
Time: 10.034588
  inferstep time: 7.382093
  node_find time: 0.303582
  node_crea time: 1.579153
    pred time: 0.389138
    thmpred time: 0.000018
    mc time: 0.590153
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.134209

INT_LE_ADD2
proof length: 1
proof time: 0.039686
Statistics
  infstep : 27
  nodes   : 10
  maxdepth: 3
Time: 0.678334
  inferstep time: 0.58856
  node_find time: 0.004399
  node_crea time: 0.06352
    pred time: 0.021905
    thmpred time: 0.000001
    mc time: 0.02748
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_LE_LADD" , DB.fetch "integer" "INT_LE_RADD" , DB.fetch "integer" "INT_LT_ADD2" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LE_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LET_ANTISYM" , DB.fetch "integer" "INT_LE_ANTISYM" , DB.fetch "integer" "INT_LTE_ANTSYM" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LET_TOTAL" , DB.fetch "integer" "INT_LE_TOTAL" , DB.fetch "integer" "INT_LTE_TOTAL" ])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.181341

INT_LE_ADD
proof length: 1
proof time: 0.122399
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.126052
  inferstep time: 0.111503
  node_find time: 0.000187
  node_crea time: 0.009703
    pred time: 0.003293
    thmpred time: 0.0
    mc time: 0.006541
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_LE_SQUARE" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_LE_01" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LE_ADD2" , DB.fetch "integer" "INT_LE_LADD" , DB.fetch "integer" "INT_LE_RADD" , DB.fetch "integer" "int_of_num"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.054962

INT_LT_ADD
proof length: 1
proof time: 0.100326
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.120947
  inferstep time: 0.104404
  node_find time: 0.000206
  node_crea time: 0.01099
    pred time: 0.003522
    thmpred time: 0.0
    mc time: 0.007665
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT_LE_ADD" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LT_ADD2" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_RADD"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.056365

INT_LT_ADDNEG
Statistics
  infstep : 764
  nodes   : 95
  maxdepth: 5
Time: 10.000115
  inferstep time: 8.209902
  node_find time: 0.158843
  node_crea time: 1.118071
    pred time: 0.397795
    thmpred time: 0.000022
    mc time: 0.396258
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071903

INT_LT_ADDNEG2
proof length: 1
proof time: 0.060826
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.11273
  inferstep time: 0.097781
  node_find time: 0.000179
  node_crea time: 0.010757
    pred time: 0.00381
    thmpred time: 0.0
    mc time: 0.005732
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "INT_NEG_GE0"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06218

INT_LT_ADD1
Statistics
  infstep : 638
  nodes   : 129
  maxdepth: 5
Time: 10.027764
  inferstep time: 8.199254
  node_find time: 0.14007
  node_crea time: 1.289669
    pred time: 0.318869
    thmpred time: 0.000042
    mc time: 0.633621
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.212913

INT_SUB_ADD
proof length: 3
proof time: 0.07523
Statistics
  infstep : 383
  nodes   : 43
  maxdepth: 4
Time: 4.677787
  inferstep time: 3.987252
  node_find time: 0.075713
  node_crea time: 0.343056
    pred time: 0.151398
    thmpred time: 0.000007
    mc time: 0.085811
    inst time: 0.0
Proof found: (boolLib.Q_TAC boolLib.KNOW_TAC) [HolKernel.QUOTE " (*#loc 1 116539*)!x. x IN count n ==> ~(x = n)"] THENL [BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss) [(DB.fetch "pred_set" "IN_COUNT")], metisTools.METIS_TAC [DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LE_ADD2", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_ADD_ASSOC", DB.fetch "integer" "INT_ADD_COMM", DB.fetch "integer" "INT_EQ_RADD"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.03675

INT_SUB_ADD2
proof length: 1
proof time: 0.040997
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.07
  inferstep time: 0.058766
  node_find time: 0.000171
  node_crea time: 0.007938
    pred time: 0.003109
    thmpred time: 0.0
    mc time: 0.003541
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "tactictoe_thm_38" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_EQ_RADD" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "tactictoe_thm_13" , DB.fetch "integer" "INT_ADD_SYM" , DB.fetch "integer" "INT_EQ_LADD" , DB.fetch "integer" "tactictoe_thm_11" , DB.fetch "integer" "tactictoe_thm_12" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_LE_LADD" , DB.fetch "integer" "INT_LT_LADD"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058927

INT_SUB_REFL
proof length: 1
proof time: 0.031571
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.03798
  inferstep time: 0.026704
  node_find time: 0.00017
  node_crea time: 0.007892
    pred time: 0.003182
    thmpred time: 0.0
    mc time: 0.003706
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_MUL_LZERO" , DB.fetch "integer" "INT_MUL_RZERO" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_NEG_GT0"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04981

INT_SUB_0
proof length: 1
proof time: 0.054991
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.086246
  inferstep time: 0.071714
  node_find time: 0.000213
  node_crea time: 0.010134
    pred time: 0.003631
    thmpred time: 0.000001
    mc time: 0.006264
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_ADD_LID_UNIQ" , DB.fetch "integer" "INT_ADD_RID_UNIQ" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_LE_ADD" , DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_LT_ADD" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_MUL_LZERO"])
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.142079

INT_LE_DOUBLE
Statistics
  infstep : 575
  nodes   : 117
  maxdepth: 6
Time: 10.003404
  inferstep time: 8.520853
  node_find time: 0.136476
  node_crea time: 0.9209
    pred time: 0.385687
    thmpred time: 0.000024
    mc time: 0.250368
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.208175

INT_LE_NEGL
Statistics
  infstep : 701
  nodes   : 159
  maxdepth: 6
Time: 10.0757
  inferstep time: 8.165516
  node_find time: 0.191774
  node_crea time: 1.205345
    pred time: 0.466827
    thmpred time: 0.000029
    mc time: 0.296608
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061534

INT_LE_NEGR
proof length: 1
proof time: 0.076664
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.115561
  inferstep time: 0.104204
  node_find time: 0.000177
  node_crea time: 0.008156
    pred time: 0.003586
    thmpred time: 0.0
    mc time: 0.003047
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2"])
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.147086

INT_NEG_EQ0
proof length: 3
proof time: 0.067193
Statistics
  infstep : 14
  nodes   : 6
  maxdepth: 3
Time: 0.486599
  inferstep time: 0.43212
  node_find time: 0.003051
  node_crea time: 0.034208
    pred time: 0.016405
    thmpred time: 0.0
    mc time: 0.01049
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_LE_NEGL", DB.fetch "integer" "INT_LE_NEGR", DB.fetch "integer" "INT_NEGNEG", DB.fetch "integer" "INT_NEG_GE0"]
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.246065

INT_NEG_0
proof length: 1
proof time: 0.021648
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.053684
  inferstep time: 0.041602
  node_find time: 0.000183
  node_crea time: 0.008665
    pred time: 0.003386
    thmpred time: 0.0
    mc time: 0.003799
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_LE_NEGR" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NEG_EQ0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_0" , DB.fetch "integer" "INT_LE_DOUBLE" , DB.fetch "integer" "INT_ADD_RID"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004516

INT_NEG_SUB
proof length: 1
proof time: 0.061579
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.08986
  inferstep time: 0.077256
  node_find time: 0.000238
  node_crea time: 0.008589
    pred time: 0.002778
    thmpred time: 0.0
    mc time: 0.00419
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_NEGNEG"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061683

INT_SUB_LT
proof length: 3
proof time: 0.062329
Statistics
  infstep : 182
  nodes   : 50
  maxdepth: 5
Time: 4.560253
  inferstep time: 3.859373
  node_find time: 0.043662
  node_crea time: 0.444231
    pred time: 0.15261
    thmpred time: 0.000011
    mc time: 0.190911
    inst time: 0.0
Proof found: boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LID", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_ADD_RID", DB.fetch "integer" "INT_ADD_LINV"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063617

INT_SUB_LE
proof length: 5
proof time: 0.075935
Statistics
  infstep : 143
  nodes   : 41
  maxdepth: 5
Time: 3.292452
  inferstep time: 2.825411
  node_find time: 0.030562
  node_crea time: 0.295092
    pred time: 0.091578
    thmpred time: 0.000006
    mc time: 0.14673
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LE_DOUBLE", DB.fetch "integer" "INT_LE_NEGL", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_LE_NEGTOTAL", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "INT_LE_01"] THEN
  boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN
  simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_LE_NEGR", DB.fetch "integer" "INT_LE_LADD", DB.fetch "integer" "INT_LE_RADD", DB.fetch "integer" "INT_LE_ADD2", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "INT_NOT_LE"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_LID", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.147059

INT_ADD_SUB
proof length: 1
proof time: 0.058373
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.073349
  inferstep time: 0.061306
  node_find time: 0.000204
  node_crea time: 0.008281
    pred time: 0.002986
    thmpred time: 0.0
    mc time: 0.004116
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "tactictoe_thm_39" , DB.fetch "integer" "tactictoe_thm_38" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "tactictoe_thm_40" , DB.fetch "integer" "INT_LE_RADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_ADD_ASSOC" , DB.fetch "integer" "INT_ADD_COMM"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064179

INT_SUB_LDISTRIB
proof length: 5
proof time: 0.049095
Statistics
  infstep : 29
  nodes   : 10
  maxdepth: 3
Time: 1.085665
  inferstep time: 0.952781
  node_find time: 0.005708
  node_crea time: 0.075025
    pred time: 0.029331
    thmpred time: 0.000003
    mc time: 0.037707
    inst time: 0.0
Proof found: (boolLib.Q_TAC boolLib.KNOW_TAC) [HolKernel.QUOTE " (*#loc 1 116539*)!x. x IN count n ==> ~(x = n)"] THENL [simpLib.ASM_SIMP_TAC boolSimps.bool_ss [(DB.fetch "pred_set" "COMMUTING_ITSET_INSERT"), (DB.fetch "pred_set" "tactictoe_thm_65")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "pred_set" "INTER_DEF", DB.fetch "pred_set" "IN_INTER", DB.fetch "pred_set" "INTER_applied", DB.fetch "pred_set" "UNION_DEF", DB.fetch "pred_set" "tactictoe_thm_0", DB.fetch "pred_set" "GSPECIFICATION", DB.fetch "pred_set" "EXTENSION", DB.fetch "pred_set" "IN_UNION", DB.fetch "pred_set" "SUBSET_DEF", DB.fetch "pred_set" "NOT_EQUAL_SETS", DB.fetch "pred_set" "UNION_applied", DB.fetch "pred_set" "SET_MINIMUM", relationTheory.RRESTRICT_DEF, relationTheory.IN_RDOM_RRESTRICT, DB.fetch "pred_set" "NUM_SET_WOP", DB.fetch "pred_set" "EQ_UNIV"], BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss) [DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "INT_LT_MUL"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "tactictoe_thm_9", DB.fetch "integer" "INT_MUL_COMM", DB.fetch "integer" "INT_MUL_SYM", DB.fetch "integer" "tactictoe_thm_18", DB.fetch "integer" "tactictoe_thm_17", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "INT_LT_MUL"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032106

INT_SUB_RDISTRIB
proof length: 1
proof time: 0.066352
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.104663
  inferstep time: 0.090493
  node_find time: 0.00023
  node_crea time: 0.009722
    pred time: 0.003264
    thmpred time: 0.0
    mc time: 0.005504
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "tactictoe_thm_43" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "tactictoe_thm_9"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.056402

INT_NEG_EQ
proof length: 1
proof time: 0.062806
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.098996
  inferstep time: 0.084993
  node_find time: 0.000272
  node_crea time: 0.008486
    pred time: 0.002737
    thmpred time: 0.000001
    mc time: 0.006218
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "tactictoe_thm_6" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_LE_NEGR" , DB.fetch "integer" "INT_NEG_GE0"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.110883

INT_NEG_MINUS1
proof length: 1
proof time: 0.02582
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.067272
  inferstep time: 0.040778
  node_find time: 0.000405
  node_crea time: 0.013505
    pred time: 0.003111
    thmpred time: 0.0
    mc time: 0.016247
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT_LE_01" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_LE_NEGR" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_LT_NEGTOTAL"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062728

INT_LT_IMP_NE
proof length: 1
proof time: 0.023021
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.053805
  inferstep time: 0.041938
  node_find time: 0.000214
  node_crea time: 0.008028
    pred time: 0.002773
    thmpred time: 0.000001
    mc time: 0.003863
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_GT" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LT_ANTISYM" , DB.fetch "integer" "INT_LET_ANTISYM" , DB.fetch "integer" "INT_LTE_ANTSYM" , DB.fetch "integer" "tactictoe_thm_24" , DB.fetch "integer" "INT_LT_REFL" , DB.fetch "integer" "tactictoe_thm_25" , DB.fetch "integer" "tactictoe_thm_27" , DB.fetch "integer" "tactictoe_thm_28" , DB.fetch "integer" "tactictoe_thm_45" , DB.fetch "integer" "tactictoe_thm_23" , DB.fetch "integer" "INT_LET_TRANS"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.113654

INT_LE_ADDR
proof length: 2
proof time: 0.12356
Statistics
  infstep : 14
  nodes   : 5
  maxdepth: 2
Time: 0.574385
  inferstep time: 0.518588
  node_find time: 0.002693
  node_crea time: 0.033848
    pred time: 0.014211
    thmpred time: 0.000002
    mc time: 0.015723
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_DOUBLE", DB.fetch "integer" "INT_LT_ADD1"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065332

INT_LE_ADDL
proof length: 4
proof time: 0.137376
Statistics
  infstep : 37
  nodes   : 11
  maxdepth: 4
Time: 1.128758
  inferstep time: 0.999215
  node_find time: 0.007438
  node_crea time: 0.081177
    pred time: 0.029774
    thmpred time: 0.000002
    mc time: 0.042306
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN
  simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_DOUBLE"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21", DB.fetch "integer" "INT_LT_LADD_IMP", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_DOUBLE"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.056412

INT_LT_ADDR
proof length: 3
proof time: 0.116124
Statistics
  infstep : 303
  nodes   : 47
  maxdepth: 4
Time: 5.521109
  inferstep time: 4.552995
  node_find time: 0.065944
  node_crea time: 0.634917
    pred time: 0.257316
    thmpred time: 0.000014
    mc time: 0.174077
    inst time: 0.0
Proof found: boolLib.ONCE_REWRITE_TAC [(DB.fetch "integer" "tactictoe_thm_22")] THEN boolLib.REPEAT boolLib.GEN_TAC THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_DOUBLE", DB.fetch "integer" "INT_LT_ADD1"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064662

INT_LT_ADDL
proof length: 2
proof time: 0.080829
Statistics
  infstep : 23
  nodes   : 7
  maxdepth: 2
Time: 0.546713
  inferstep time: 0.424487
  node_find time: 0.00454
  node_crea time: 0.091595
    pred time: 0.046606
    thmpred time: 0.000001
    mc time: 0.023746
    inst time: 0.0
Proof found: boolLib.ONCE_REWRITE_TAC [(DB.fetch "integer" "tactictoe_thm_22")] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_DOUBLE"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077997

INT_ENTIRE
Statistics
  infstep : 498
  nodes   : 103
  maxdepth: 5
Time: 10.010403
  inferstep time: 8.037717
  node_find time: 0.133967
  node_crea time: 1.395152
    pred time: 0.529536
    thmpred time: 0.000029
    mc time: 0.252686
    inst time: 0.0
Proof status: Time Out
Org tac number: 18
Original proof time: 0.0
Replaying proof: 0.563573

INT_EQ_LMUL
Statistics
  infstep : 492
  nodes   : 127
  maxdepth: 6
Time: 10.00322
  inferstep time: 8.043805
  node_find time: 0.126258
  node_crea time: 1.461762
    pred time: 0.655853
    thmpred time: 0.000035
    mc time: 0.263552
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.099202

INT_EQ_RMUL
proof length: 5
proof time: 0.078145
Statistics
  infstep : 81
  nodes   : 22
  maxdepth: 4
Time: 1.63193
  inferstep time: 1.328468
  node_find time: 0.017579
  node_crea time: 0.211451
    pred time: 0.106706
    thmpred time: 0.000006
    mc time: 0.041024
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.EQ_TAC THENL
  [boolLib.GEN_REWRITE_TAC liteLib.LAND_CONV boolLib.empty_rewrites [boolLib.GSYM (DB.fetch "integer" "INT_SUB_0")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_EQ_LMUL", DB.fetch "integer" "INT_ENTIRE", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "tactictoe_thm_48"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_EQ_LMUL", DB.fetch "integer" "INT_ENTIRE", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "tactictoe_thm_48", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "INT_LT_MUL", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_RMUL"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.069231

INT
proof length: 1
proof time: 0.017468
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.051688
  inferstep time: 0.032986
  node_find time: 0.000236
  node_crea time: 0.012591
    pred time: 0.003621
    thmpred time: 0.000001
    mc time: 0.009144
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "tactictoe_thm_51" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_NEG_MINUS1" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT_LE_01" , DB.fetch "integer" "INT_ADD_RID" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_ADD_LID_UNIQ"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.05526

INT_POS
Statistics
  infstep : 636
  nodes   : 104
  maxdepth: 5
Time: 10.005919
  inferstep time: 8.410276
  node_find time: 0.174084
  node_crea time: 0.916643
    pred time: 0.367258
    thmpred time: 0.000014
    mc time: 0.201871
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.170749

INT_LE
Statistics
  infstep : 674
  nodes   : 106
  maxdepth: 5
Time: 10.082693
  inferstep time: 7.975269
  node_find time: 0.175682
  node_crea time: 1.425784
    pred time: 0.622271
    thmpred time: 0.000014
    mc time: 0.33896
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.260704

INT_LT
Statistics
  infstep : 841
  nodes   : 114
  maxdepth: 5
Time: 10.062041
  inferstep time: 7.578938
  node_find time: 0.236072
  node_crea time: 1.534448
    pred time: 0.578201
    thmpred time: 0.000023
    mc time: 0.509917
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.076653
Replaying proof: 0.000079

INT_ADD
Statistics
  infstep : 760
  nodes   : 92
  maxdepth: 5
Time: 10.051404
  inferstep time: 8.229959
  node_find time: 0.199499
  node_crea time: 0.962915
    pred time: 0.386349
    thmpred time: 0.000019
    mc time: 0.310467
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.169619
Replaying proof: 0.000439

INT_LT_NZ
Statistics
  infstep : 710
  nodes   : 84
  maxdepth: 5
Time: 10.087826
  inferstep time: 7.98535
  node_find time: 0.244024
  node_crea time: 1.158296
    pred time: 0.549986
    thmpred time: 0.000026
    mc time: 0.233983
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.138357

INT_NZ_IMP_LT
proof length: 1
proof time: 0.001056
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 3
Time: 0.612569
  inferstep time: 0.52531
  node_find time: 0.002835
  node_crea time: 0.067573
    pred time: 0.032327
    thmpred time: 0.000001
    mc time: 0.020043
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC ( boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss ) [ DB.fetch "integer" "INT_LT_NZ" , DB.fetch "integer" "INT_LT_ADD" , DB.fetch "integer" "INT_LT_ADDL" , DB.fetch "integer" "INT_LT_ADDR" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "int_of_num" , DB.fetch "integer" "tactictoe_thm_2" , DB.fetch "integer" "tactictoe_thm_3" , DB.fetch "integer" "tactictoe_thm_51" , DB.fetch "integer" "INT_POS" , DB.fetch "integer" "NUM_POSINT_EX" , DB.fetch "integer" "INT_LT" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.02993

INT_DOUBLE
Statistics
  infstep : 763
  nodes   : 88
  maxdepth: 5
Time: 10.032884
  inferstep time: 8.013344
  node_find time: 0.22009
  node_crea time: 1.131841
    pred time: 0.367458
    thmpred time: 0.000017
    mc time: 0.490054
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067462

INT_SUB_SUB
proof length: 1
proof time: 0.04937
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.070892
  inferstep time: 0.058558
  node_find time: 0.000242
  node_crea time: 0.008302
    pred time: 0.002933
    thmpred time: 0.000001
    mc time: 0.003468
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_RDISTRIB" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "INT_ADD_SUB" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.112429

INT_LT_ADD_SUB
proof length: 2
proof time: 0.001245
Statistics
  infstep : 9
  nodes   : 3
  maxdepth: 2
Time: 0.372522
  inferstep time: 0.33355
  node_find time: 0.003325
  node_crea time: 0.016856
    pred time: 0.007165
    thmpred time: 0.0
    mc time: 0.008358
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_SUB", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_LADD", DB.fetch "integer" "tactictoe_thm_19", DB.fetch "integer" "tactictoe_thm_21"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058725

INT_LT_SUB_RADD
proof length: 2
proof time: 0.001033
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.291332
  inferstep time: 0.254042
  node_find time: 0.001375
  node_crea time: 0.019931
    pred time: 0.008402
    thmpred time: 0.0
    mc time: 0.010546
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_LT_ADDL", DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_SUB", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_ADD_SUB"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062958

INT_LT_SUB_LADD
proof length: 2
proof time: 0.010855
Statistics
  infstep : 11
  nodes   : 3
  maxdepth: 2
Time: 0.428135
  inferstep time: 0.361101
  node_find time: 0.00483
  node_crea time: 0.031541
    pred time: 0.013122
    thmpred time: 0.000001
    mc time: 0.01664
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_SUB_RADD", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_SUB", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LT_RADD", DB.fetch "integer" "INT_LT_LADD"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071156

INT_LE_SUB_LADD
proof length: 3
proof time: 0.000905
Statistics
  infstep : 12
  nodes   : 6
  maxdepth: 3
Time: 0.616034
  inferstep time: 0.556163
  node_find time: 0.002964
  node_crea time: 0.036328
    pred time: 0.016424
    thmpred time: 0.0
    mc time: 0.013061
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN
  simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_LT_SUB_RADD", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_LT_ADDL", DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "INT_LT_SUB_LADD", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_SUB"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030256

INT_LE_SUB_RADD
proof length: 2
proof time: 0.012873
Statistics
  infstep : 10
  nodes   : 5
  maxdepth: 2
Time: 0.626898
  inferstep time: 0.563259
  node_find time: 0.003475
  node_crea time: 0.036584
    pred time: 0.015701
    thmpred time: 0.0
    mc time: 0.01393
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "INT_LT_SUB_LADD", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_SUB_RADD", DB.fetch "integer" "INT_LE_SUB_LADD", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_SUB", DB.fetch "integer" "INT_SUB_REFL"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.047171

INT_LT_NEG
Statistics
  infstep : 520
  nodes   : 90
  maxdepth: 5
Time: 10.087849
  inferstep time: 8.553614
  node_find time: 0.15343
  node_crea time: 0.904567
    pred time: 0.398881
    thmpred time: 0.000032
    mc time: 0.203357
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.118613

INT_LE_NEG
proof length: 3
proof time: 0.080321
Statistics
  infstep : 13
  nodes   : 5
  maxdepth: 3
Time: 0.399257
  inferstep time: 0.349972
  node_find time: 0.003276
  node_crea time: 0.027089
    pred time: 0.012013
    thmpred time: 0.000001
    mc time: 0.010085
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_NEG", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_NEG_EQ", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_RNEG_UNIQ", DB.fetch "integer" "INT_SUB_SUB", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_LE_NEGL"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090852

INT_ADD2_SUB2
proof length: 3
proof time: 0.034508
Statistics
  infstep : 410
  nodes   : 123
  maxdepth: 5
Time: 6.808241
  inferstep time: 5.27153
  node_find time: 0.125962
  node_crea time: 0.950274
    pred time: 0.233962
    thmpred time: 0.000018
    mc time: 0.431858
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_ADD_SUB", DB.fetch "integer" "INT_LE_SUB_LADD", DB.fetch "integer" "INT_LT_SUB_RADD", DB.fetch "integer" "INT_LE_SUB_RADD", DB.fetch "integer" "INT_LT_SUB_LADD", DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_SUB_RDISTRIB"] THEN boolLib.ONCE_REWRITE_TAC [jrhUtils.AC ((DB.fetch "integer" "tactictoe_thm_15"), (DB.fetch "integer" "tactictoe_thm_16")) (Parse.Term [HolKernel.QUOTE " (*#loc 1 18082*)(a + b) + (c + d) = (a + c) + (b + d:int)"])] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "tactictoe_thm_38", DB.fetch "integer" "tactictoe_thm_42", DB.fetch "integer" "tactictoe_thm_56", DB.fetch "integer" "tactictoe_thm_54", DB.fetch "integer" "INT_ADD_ASSOC", DB.fetch "integer" "tactictoe_thm_11", DB.fetch "integer" "tactictoe_thm_36", DB.fetch "integer" "tactictoe_thm_37", DB.fetch "integer" "tactictoe_thm_20", DB.fetch "integer" "tactictoe_thm_15", DB.fetch "integer" "tactictoe_thm_52", DB.fetch "integer" "tactictoe_thm_57", DB.fetch "integer" "tactictoe_thm_59"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058291

INT_SUB_LZERO
proof length: 1
proof time: 0.033012
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.074012
  inferstep time: 0.05901
  node_find time: 0.000243
  node_crea time: 0.010951
    pred time: 0.004572
    thmpred time: 0.000001
    mc time: 0.004251
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_SUB" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_LINV" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_LE_NEGR" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NEG_EQ0" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_NEG_SUB"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038679

INT_SUB_RZERO
proof length: 1
proof time: 0.043196
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.19069
  inferstep time: 0.175528
  node_find time: 0.000249
  node_crea time: 0.008382
    pred time: 0.002694
    thmpred time: 0.0
    mc time: 0.005254
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_RDISTRIB" , DB.fetch "integer" "INT_SUB_SUB"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036449

INT_LET_ADD2
proof length: 1
proof time: 0.088966
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.114282
  inferstep time: 0.089157
  node_find time: 0.000508
  node_crea time: 0.018164
    pred time: 0.006658
    thmpred time: 0.0
    mc time: 0.007864
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADD2" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LE_ADD2" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LET_ANTISYM" , DB.fetch "integer" "INT_LTE_ANTSYM" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "INT_LT_IMP_LE"])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.118836

INT_LTE_ADD2
proof length: 1
proof time: 0.048171
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.120017
  inferstep time: 0.104142
  node_find time: 0.000273
  node_crea time: 0.011342
    pred time: 0.004088
    thmpred time: 0.0
    mc time: 0.005388
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_ADD2" , DB.fetch "integer" "INT_LT_ADD2" , DB.fetch "integer" "INT_LT_LADD_IMP" , DB.fetch "integer" "tactictoe_thm_19" , DB.fetch "integer" "tactictoe_thm_21" , DB.fetch "integer" "INT_LT_LADD" , DB.fetch "integer" "INT_LT_RADD" , DB.fetch "integer" "INT_LE_ADD2" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LET_ANTISYM" , DB.fetch "integer" "INT_LTE_ANTSYM" , DB.fetch "integer" "INT_LT_LE"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.114207

INT_LET_ADD
proof length: 3
proof time: 0.058869
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 3
Time: 0.380397
  inferstep time: 0.331508
  node_find time: 0.002259
  node_crea time: 0.02899
    pred time: 0.012497
    thmpred time: 0.0
    mc time: 0.011504
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_ADDL", DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_ADD_LID_UNIQ", DB.fetch "integer" "INT_ADD_RID_UNIQ", DB.fetch "integer" "INT_LNEG_UNIQ"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.13654

INT_LTE_ADD
proof length: 3
proof time: 0.055129
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.335486
  inferstep time: 0.283996
  node_find time: 0.001364
  node_crea time: 0.033079
    pred time: 0.014518
    thmpred time: 0.0
    mc time: 0.016905
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_ADDL", DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_ADD_LID_UNIQ"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.131739
Replaying proof: 0.000745

INT_SUB_LNEG
proof length: 1
proof time: 0.035922
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.070615
  inferstep time: 0.05773
  node_find time: 0.000284
  node_crea time: 0.008935
    pred time: 0.003622
    thmpred time: 0.0
    mc time: 0.003121
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_SUB" , DB.fetch "integer" "INT_SUB_LZERO" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_ADD_RINV" , DB.fetch "integer" "INT_ADD_SUB" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.028493

INT_SUB_RNEG
proof length: 1
proof time: 0.014982
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.080151
  inferstep time: 0.068592
  node_find time: 0.000243
  node_crea time: 0.0079
    pred time: 0.003007
    thmpred time: 0.000001
    mc time: 0.002807
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_SUB" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_LNEG" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_ADD2_SUB2" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_LZERO" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_LE"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032667

INT_SUB_NEG2
proof length: 1
proof time: 0.044448
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.065726
  inferstep time: 0.047672
  node_find time: 0.000337
  node_crea time: 0.010436
    pred time: 0.004082
    thmpred time: 0.0
    mc time: 0.004869
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_LNEG" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_SUB" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_RDISTRIB"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.104245

INT_SUB_TRIANGLE
proof length: 1
proof time: 0.067668
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.123825
  inferstep time: 0.105367
  node_find time: 0.000318
  node_crea time: 0.012544
    pred time: 0.004269
    thmpred time: 0.0
    mc time: 0.007283
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD2_SUB2" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_REFL" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_NEG2"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.095975

INT_EQ_SUB_LADD
proof length: 2
proof time: 0.166165
Statistics
  infstep : 8
  nodes   : 4
  maxdepth: 2
Time: 0.288821
  inferstep time: 0.254517
  node_find time: 0.001875
  node_crea time: 0.020588
    pred time: 0.008966
    thmpred time: 0.000001
    mc time: 0.006496
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_LE_SUB_LADD", DB.fetch "integer" "INT_LT_SUB_RADD", DB.fetch "integer" "INT_LE_SUB_RADD", DB.fetch "integer" "INT_LT_SUB_LADD", DB.fetch "integer" "INT_LT_ADD_SUB", DB.fetch "integer" "INT_ADD2_SUB2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_TRIANGLE", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063371

INT_EQ_SUB_RADD
proof length: 1
proof time: 0.022971
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.159487
  inferstep time: 0.143729
  node_find time: 0.000551
  node_crea time: 0.010065
    pred time: 0.003794
    thmpred time: 0.000001
    mc time: 0.003709
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ DB.fetch "integer" "INT_EQ_SUB_LADD" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_ADD2_SUB2" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_SUB_TRIANGLE" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_RDISTRIB" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_LE" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06029

INT_SUB
Statistics
  infstep : 603
  nodes   : 116
  maxdepth: 5
Time: 10.065369
  inferstep time: 8.081858
  node_find time: 0.187425
  node_crea time: 1.16446
    pred time: 0.38483
    thmpred time: 0.000036
    mc time: 0.452039
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011494

INT_SUB_SUB2
proof length: 1
proof time: 0.048434
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.088171
  inferstep time: 0.073156
  node_find time: 0.000243
  node_crea time: 0.008876
    pred time: 0.002867
    thmpred time: 0.0
    mc time: 0.003766
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_EQ_SUB_LADD" , DB.fetch "integer" "INT_SUB_ADD" , DB.fetch "integer" "INT_EQ_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_SUB_0" , DB.fetch "integer" "INT_SUB_ADD2" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_SUB_NEG2"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.086685

INT_ADD_SUB2
proof length: 1
proof time: 0.027336
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.068351
  inferstep time: 0.055692
  node_find time: 0.000259
  node_crea time: 0.008651
    pred time: 0.003203
    thmpred time: 0.0
    mc time: 0.003316
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_SUB_RNEG" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_NEG2" , DB.fetch "integer" "INT_SUB_SUB" , DB.fetch "integer" "INT_SUB_LNEG" , DB.fetch "integer" "INT_NEG_SUB" , DB.fetch "integer" "INT_EQ_SUB_LADD" , DB.fetch "integer" "INT_EQ_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_LADD" , DB.fetch "integer" "INT_LT_SUB_RADD" , DB.fetch "integer" "INT_LE_SUB_RADD" , DB.fetch "integer" "INT_LT_SUB_LADD" , DB.fetch "integer" "INT_LT_ADD_SUB" , DB.fetch "integer" "INT_ADD2_SUB2" , DB.fetch "integer" "INT_SUB_LZERO" , DB.fetch "integer" "INT_SUB_ADD2"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.08409

INT_EQ_LMUL2
proof length: 2
proof time: 0.113085
Statistics
  infstep : 6
  nodes   : 3
  maxdepth: 2
Time: 0.286982
  inferstep time: 0.258712
  node_find time: 0.001427
  node_crea time: 0.01538
    pred time: 0.006291
    thmpred time: 0.000001
    mc time: 0.006233
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_EQ_LMUL", DB.fetch "integer" "INT_EQ_RMUL", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_ENTIRE", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "INT_LT_MUL2", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "tactictoe_thm_48", DB.fetch "integer" "INT_LT_MUL"]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.138788

INT_EQ_IMP_LE
proof length: 1
proof time: 0.044414
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.078641
  inferstep time: 0.066293
  node_find time: 0.000397
  node_crea time: 0.008452
    pred time: 0.002997
    thmpred time: 0.000001
    mc time: 0.003082
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_ADD2" , DB.fetch "integer" "INT_LTE_TRANS" , DB.fetch "integer" "INT_LET_TRANS" , DB.fetch "integer" "INT_LE_ADD2" , DB.fetch "integer" "INT_LE_TRANS" , DB.fetch "integer" "INT_LT_IMP_LE" , DB.fetch "integer" "INT_LTE_ADD2" , DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "INT_LE_RADD" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LE_LADD" , DB.fetch "integer" "INT_LE_ANTISYM" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_NEG" , DB.fetch "integer" "INT_NOT_LT" , DB.fetch "integer" "INT_LT_LE"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.079286

INT_POS_NZ
proof length: 1
proof time: 0.018854
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.079795
  inferstep time: 0.067275
  node_find time: 0.000261
  node_crea time: 0.008215
    pred time: 0.002755
    thmpred time: 0.0
    mc time: 0.003642
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LET_ADD" , DB.fetch "integer" "INT_LTE_ADD" , DB.fetch "integer" "INT_LT_ADD" , DB.fetch "integer" "INT_LT_ADDL" , DB.fetch "integer" "INT_LT_ADDR" , DB.fetch "integer" "INT_LT_NEGTOTAL" , DB.fetch "integer" "INT_NEG_LT0" , DB.fetch "integer" "INT_NZ_IMP_LT" , DB.fetch "integer" "INT_LT_NZ" , DB.fetch "integer" "INT_NEG_GT0" , DB.fetch "integer" "INT_SUB_LT" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT_LT_MUL2" , DB.fetch "integer" "INT_EQ_LMUL2" , DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_LE_ADD"])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.078209

INT_EQ_RMUL_IMP
proof length: 1
proof time: 0.04073
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.119564
  inferstep time: 0.104693
  node_find time: 0.000254
  node_crea time: 0.009713
    pred time: 0.003683
    thmpred time: 0.000001
    mc time: 0.004584
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_EQ_LMUL2" , DB.fetch "integer" "INT_EQ_LMUL" , DB.fetch "integer" "INT_EQ_RMUL" , DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_ENTIRE" , DB.fetch "integer" "INT_LT_MUL2" , DB.fetch "integer" "INT_LE_SQUARE" , DB.fetch "integer" "INT_SUB_LDISTRIB" , DB.fetch "integer" "INT_SUB_RDISTRIB" , DB.fetch "integer" "INT_LDISTRIB" , DB.fetch "integer" "INT_MUL_ASSOC" , DB.fetch "integer" "INT_RDISTRIB" , DB.fetch "integer" "tactictoe_thm_10" , DB.fetch "integer" "tactictoe_thm_43" , DB.fetch "integer" "tactictoe_thm_33" , DB.fetch "integer" "tactictoe_thm_48"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057128

INT_EQ_LMUL_IMP
proof length: 2
proof time: 0.1512
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.246651
  inferstep time: 0.221948
  node_find time: 0.000745
  node_crea time: 0.015705
    pred time: 0.006598
    thmpred time: 0.000001
    mc time: 0.006608
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_EQ_RMUL_IMP", DB.fetch "integer" "INT_EQ_LMUL2", DB.fetch "integer" "INT_EQ_RMUL", DB.fetch "integer" "INT_EQ_LMUL", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_ENTIRE", DB.fetch "integer" "INT_LT_MUL2", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "INT_SUB_LDISTRIB", DB.fetch "integer" "INT_SUB_RDISTRIB", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "tactictoe_thm_33"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035503

INT_DIFFSQ
Statistics
  infstep : 669
  nodes   : 139
  maxdepth: 6
Time: 10.003403
  inferstep time: 8.113242
  node_find time: 0.216878
  node_crea time: 1.064273
    pred time: 0.3791
    thmpred time: 0.000015
    mc time: 0.245994
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.181451

INT_POASQ
Statistics
  infstep : 435
  nodes   : 102
  maxdepth: 6
Time: 10.001089
  inferstep time: 8.091541
  node_find time: 0.134349
  node_crea time: 1.367867
    pred time: 0.569593
    thmpred time: 0.000031
    mc time: 0.215105
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.191112

INT_SUMSQ
Statistics
  infstep : 652
  nodes   : 110
  maxdepth: 5
Time: 10.093938
  inferstep time: 8.118584
  node_find time: 0.210498
  node_crea time: 1.142398
    pred time: 0.458199
    thmpred time: 0.000028
    mc time: 0.236069
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.257882

INT_EQ_NEG
proof length: 1
proof time: 0.072874
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.129623
  inferstep time: 0.116061
  node_find time: 0.000284
  node_crea time: 0.008933
    pred time: 0.003147
    thmpred time: 0.0
    mc time: 0.003353
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_SUB2" , DB.fetch "integer" "INT_LE_NEG" , DB.fetch "integer" "INT_LT_NEG" , DB.fetch "integer" "INT_LNEG_UNIQ" , DB.fetch "integer" "INT_LT_ADDNEG" , DB.fetch "integer" "INT_LT_ADDNEG2" , DB.fetch "integer" "INT_NEG_ADD" , DB.fetch "integer" "INT_NEG_EQ" , DB.fetch "integer" "INT_NEG_LMUL" , DB.fetch "integer" "INT_NEG_MUL2" , DB.fetch "integer" "INT_NEG_RMUL" , DB.fetch "integer" "INT_RNEG_UNIQ" , DB.fetch "integer" "INT_SUB_LNEG" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_SUB_NEG2" , DB.fetch "integer" "INT_SUB_RNEG"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065361
Replaying proof: 0.007337

INT_LT_CALCULATE
Statistics
  infstep : 649
  nodes   : 135
  maxdepth: 5
Time: 10.003305
  inferstep time: 7.655807
  node_find time: 0.217208
  node_crea time: 1.528945
    pred time: 0.497276
    thmpred time: 0.000024
    mc time: 0.329357
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.257738

NUM_POSINT
proof length: 2
proof time: 0.021433
Statistics
  infstep : 35
  nodes   : 13
  maxdepth: 3
Time: 1.011292
  inferstep time: 0.840456
  node_find time: 0.009728
  node_crea time: 0.093808
    pred time: 0.031869
    thmpred time: 0.000001
    mc time: 0.037371
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [(DB.fetch "integer" "int_le")] THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "tactictoe_thm_75", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2", DB.fetch "integer" "tactictoe_thm_3", DB.fetch "integer" "tactictoe_thm_51", DB.fetch "integer" "INT_POS", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_SUB", DB.fetch "integer" "INT", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_INJ"]
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.216269

NUM_POSINT_EXISTS
proof length: 1
proof time: 0.042401
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.078322
  inferstep time: 0.06399
  node_find time: 0.000294
  node_crea time: 0.009588
    pred time: 0.003252
    thmpred time: 0.0
    mc time: 0.004398
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "NUM_POSINT" , DB.fetch "integer" "INT_LET_ADD" , DB.fetch "integer" "INT_LE_ADD" , DB.fetch "integer" "INT_LE_MUL" , DB.fetch "integer" "INT_LTE_ADD" , DB.fetch "integer" "INT_LT_MUL2" , DB.fetch "integer" "INT_LE_ADDL" , DB.fetch "integer" "INT_LE_ADDR" , DB.fetch "integer" "INT_LE_DOUBLE" , DB.fetch "integer" "INT_LE_NEGL" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_LE_NEGTOTAL" , DB.fetch "integer" "INT_POS" , DB.fetch "integer" "INT_NEG_GE0" , DB.fetch "integer" "INT_SUB_LE" , DB.fetch "integer" "INT_LE_SQUARE"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010923

NUM_NEGINT_EXISTS
Statistics
  infstep : 972
  nodes   : 109
  maxdepth: 5
Time: 10.028382
  inferstep time: 7.783564
  node_find time: 0.342185
  node_crea time: 0.918198
    pred time: 0.322144
    thmpred time: 0.000023
    mc time: 0.236513
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015042

INT_NUM_CASES
Statistics
  infstep : 913
  nodes   : 73
  maxdepth: 4
Time: 10.003513
  inferstep time: 7.305625
  node_find time: 0.399242
  node_crea time: 1.103529
    pred time: 0.448054
    thmpred time: 0.000019
    mc time: 0.231467
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.310061
Replaying proof: 0.009114

INT_DISCRETE
Statistics
  infstep : 686
  nodes   : 87
  maxdepth: 4
Time: 10.118401
  inferstep time: 7.645089
  node_find time: 0.318344
  node_crea time: 1.167742
    pred time: 0.329417
    thmpred time: 0.00002
    mc time: 0.449941
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.588672

INT_LE_LT1
proof length: 1
proof time: 0.044228
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.075416
  inferstep time: 0.061183
  node_find time: 0.000319
  node_crea time: 0.0092
    pred time: 0.003136
    thmpred time: 0.000001
    mc time: 0.003974
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "INT_DISCRETE" , DB.fetch "integer" "INT_LE_01" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT" , DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_NEG_MINUS1" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LET_ADD2" , DB.fetch "integer" "INT_LTE_ADD2" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LT_LE" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_NOT_LE" , DB.fetch "integer" "INT_NOT_LT"])
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.187825

INT_LT_LE1
proof length: 1
proof time: 0.046614
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.101765
  inferstep time: 0.086836
  node_find time: 0.000311
  node_crea time: 0.009238
    pred time: 0.003079
    thmpred time: 0.0
    mc time: 0.005011
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_DISCRETE" , DB.fetch "integer" "INT_LE_LT1" , DB.fetch "integer" "INT_LT_ADD1" , DB.fetch "integer" "INT_LE_01" , DB.fetch "integer" "INT_LT_01" , DB.fetch "integer" "INT" , DB.fetch "integer" "INT_MUL_LID" , DB.fetch "integer" "INT_MUL_RID" , DB.fetch "integer" "INT_NEG_MINUS1" , DB.fetch "integer" "INT_1" , DB.fetch "integer" "INT_LET_ADD2" , DB.fetch "integer" "INT_LTE_ADD2" , DB.fetch "integer" "INT_LT_MUL2" , DB.fetch "integer" "int_le" , DB.fetch "integer" "INT_LE_LT" , DB.fetch "integer" "INT_LT_LE"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00655

INT_MUL_EQ_1
Statistics
  infstep : 484
  nodes   : 70
  maxdepth: 5
Time: 10.009745
  inferstep time: 8.230533
  node_find time: 0.155238
  node_crea time: 1.078422
    pred time: 0.423244
    thmpred time: 0.000019
    mc time: 0.354986
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.294316

NUM_OF_INT
proof length: 2
proof time: 0.03585
Statistics
  infstep : 45
  nodes   : 8
  maxdepth: 2
Time: 0.891341
  inferstep time: 0.740257
  node_find time: 0.013755
  node_crea time: 0.074667
    pred time: 0.030406
    thmpred time: 0.000001
    mc time: 0.024456
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "integer" "Num", DB.fetch "integer" "INT", DB.fetch "integer" "tactictoe_thm_51", DB.fetch "integer" "INT_ADD", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_MUL", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_SUB", DB.fetch "integer" "NUM_POSINT"] THEN metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_8, DB.fetch "integer" "Num", DB.fetch "integer" "int_REP_def", DB.fetch "integer" "NUM_POSINT", arithmeticTheory.DIVMOD_THM, DB.fetch "integer" "int_bijections", DB.fetch "integer" "int_TY_DEF", DB.fetch "integer" "INT", DB.fetch "integer" "tactictoe_thm_51", DB.fetch "integer" "INT_ADD", arithmeticTheory.ADD, DB.fetch "integer" "INT_INJ", arithmeticTheory.LESS_EQUAL_ANTISYM, DB.fetch "integer" "INT_LE", arithmeticTheory.LESS_EQ_MONO, arithmeticTheory.NOT_LESS]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.081632

INT_OF_NUM
proof length: 3
proof time: 0.046766
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 3
Time: 0.367324
  inferstep time: 0.317673
  node_find time: 0.001834
  node_crea time: 0.030536
    pred time: 0.012175
    thmpred time: 0.000002
    mc time: 0.013875
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.REWRITE_TAC [DB.fetch "integer" "Num", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "NUM_POSINT", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_LE_DOUBLE", DB.fetch "integer" "INT_LE_NEGL", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LE_NEGTOTAL", DB.fetch "integer" "INT_LTE_ADD", DB.fetch "integer" "INT_LT_MUL2", DB.fetch "integer" "INT_NEG_GE0"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "Num", DB.fetch "integer" "NUM_POSINT", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_LE_ADDL", DB.fetch "integer" "INT_LE_ADDR", DB.fetch "integer" "INT_LE_DOUBLE", DB.fetch "integer" "INT_LE_NEGL", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LE_NEGTOTAL", DB.fetch "integer" "INT_LTE_ADD", DB.fetch "integer" "INT_LT_MUL2", DB.fetch "integer" "INT_POS", DB.fetch "integer" "INT_NEG_GE0"]
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.295799

LE_NUM_OF_INT
Statistics
  infstep : 481
  nodes   : 103
  maxdepth: 6
Time: 10.071181
  inferstep time: 7.990306
  node_find time: 0.219579
  node_crea time: 1.201014
    pred time: 0.380874
    thmpred time: 0.000028
    mc time: 0.370374
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.108308
Replaying proof: 0.000255

INT_DIV
Statistics
  infstep : 503
  nodes   : 98
  maxdepth: 5
Time: 10.105895
  inferstep time: 6.734461
  node_find time: 0.231145
  node_crea time: 2.418905
    pred time: 0.709706
    thmpred time: 0.000034
    mc time: 1.091938
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.031063

INT_DIV_NEG
Statistics
  infstep : 409
  nodes   : 79
  maxdepth: 5
Time: 10.052574
  inferstep time: 7.870765
  node_find time: 0.174898
  node_crea time: 1.454731
    pred time: 0.453674
    thmpred time: 0.000031
    mc time: 0.450656
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.278826

INT_DIV_1
proof length: 6
proof time: 0.009005
Statistics
  infstep : 95
  nodes   : 25
  maxdepth: 4
Time: 2.395377
  inferstep time: 1.823579
  node_find time: 0.030542
  node_crea time: 0.358698
    pred time: 0.09319
    thmpred time: 0.000003
    mc time: 0.218798
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT")] THEN
  boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.398367

INT_DIV_0
proof length: 7
proof time: 0.038802
Statistics
  infstep : 157
  nodes   : 35
  maxdepth: 4
Time: 3.666683
  inferstep time: 2.92386
  node_find time: 0.054814
  node_crea time: 0.447619
    pred time: 0.144925
    thmpred time: 0.00001
    mc time: 0.180533
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 54901*)q"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT")] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT")] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_DIV_1", DB.fetch "integer" "INT_EQ_LMUL2", DB.fetch "integer" "INT_EQ_LMUL_IMP", DB.fetch "integer" "INT_EQ_RMUL_IMP", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_POS_NZ", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_POASQ", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "NUM_POSINT", DB.fetch "integer" "INT_LET_ADD"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.073374

INT_DIV_ID
proof length: 6
proof time: 0.058096
Statistics
  infstep : 92
  nodes   : 26
  maxdepth: 4
Time: 2.988581
  inferstep time: 2.452991
  node_find time: 0.030983
  node_crea time: 0.343198
    pred time: 0.129068
    thmpred time: 0.000009
    mc time: 0.128022
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT")] THEN
  boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  metisTools.METIS_TAC [DB.fetch "integer" "int_div", DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "INT_MUL_EQ_1", DB.fetch "integer" "INT_NEG_MINUS1", DB.fetch "integer" "INT_OF_NUM", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "Num", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_LE_01", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LTE_ADD", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_LE_LT1", DB.fetch "integer" "INT_LT_LE1", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_NEGTOTAL"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.328881
Replaying proof: 0.000108
Replaying proof: 0.000204
Replaying proof: 0.000122

INT_MOD_BOUNDS
Statistics
  infstep : 436
  nodes   : 63
  maxdepth: 5
Time: 10.020926
  inferstep time: 7.903378
  node_find time: 0.162733
  node_crea time: 1.395509
    pred time: 0.404501
    thmpred time: 0.000014
    mc time: 0.4039
    inst time: 0.0
Proof status: Time Out
Org tac number: 27
Original proof time: 0.0
Replaying proof: 1.10922

INT_DIVISION
Statistics
  infstep : 368
  nodes   : 102
  maxdepth: 5
Time: 10.091199
  inferstep time: 7.366944
  node_find time: 0.141993
  node_crea time: 2.142589
    pred time: 0.624986
    thmpred time: 0.000013
    mc time: 0.574596
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.098292

INT_MOD
Statistics
  infstep : 630
  nodes   : 110
  maxdepth: 6
Time: 10.01024
  inferstep time: 7.131577
  node_find time: 0.236127
  node_crea time: 1.891429
    pred time: 0.482727
    thmpred time: 0.000022
    mc time: 0.917284
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.176684

INT_MOD_NEG
proof length: 3
proof time: 0.027602
Statistics
  infstep : 35
  nodes   : 15
  maxdepth: 3
Time: 1.244419
  inferstep time: 0.921254
  node_find time: 0.01261
  node_crea time: 0.243682
    pred time: 0.091448
    thmpred time: 0.000001
    mc time: 0.070106
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD", arithmeticTheory.tactictoe_thm_11, DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEGNEG", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_EQ0", DB.fetch "integer" "INT_LE_NEG", DB.fetch "integer" "INT_SUB_LZERO"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_DIV_NEG", arithmeticTheory.tactictoe_thm_11, DB.fetch "integer" "int_div", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_DIV_0", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "INT_DIV_1", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_NEG_LMUL", DB.fetch "integer" "INT_NEG_RMUL", DB.fetch "integer" "INT_NEG_MINUS1", DB.fetch "integer" "INT_NEG_MUL2", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "tactictoe_thm_80"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.138095

INT_MOD0
proof length: 3
proof time: 0.08079
Statistics
  infstep : 14
  nodes   : 7
  maxdepth: 3
Time: 0.86737
  inferstep time: 0.719963
  node_find time: 0.006972
  node_crea time: 0.091728
    pred time: 0.033119
    thmpred time: 0.0
    mc time: 0.045477
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_MOD_NEG", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "INT_ADD_LID", DB.fetch "integer" "INT_ADD_RID", DB.fetch "integer" "INT_MUL_LZERO", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NEG_EQ0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LZERO"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_DIV_0", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_DIV_1", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_MUL_LZERO", DB.fetch "integer" "INT_EQ_LMUL2", DB.fetch "integer" "INT_EQ_LMUL", DB.fetch "integer" "INT_EQ_LMUL_IMP", DB.fetch "integer" "INT_EQ_RMUL_IMP", DB.fetch "integer" "INT_EQ_RMUL", DB.fetch "integer" "INT_POASQ", DB.fetch "integer" "INT_ENTIRE"]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.608361

INT_DIV_MUL_ID
Statistics
  infstep : 329
  nodes   : 93
  maxdepth: 6
Time: 10.022341
  inferstep time: 7.839307
  node_find time: 0.126813
  node_crea time: 1.650825
    pred time: 0.551826
    thmpred time: 0.000034
    mc time: 0.408582
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.226669
Replaying proof: 0.002322
Replaying proof: 0.102582

INT_DIV_UNIQUE
Statistics
  infstep : 461
  nodes   : 77
  maxdepth: 5
Time: 10.033226
  inferstep time: 7.643386
  node_find time: 0.204503
  node_crea time: 1.52215
    pred time: 0.557407
    thmpred time: 0.00003
    mc time: 0.396631
    inst time: 0.0
Proof status: Time Out
Org tac number: 23
Original proof time: 0.0
Replaying proof: 0.842577

INT_MOD_UNIQUE
Statistics
  infstep : 448
  nodes   : 108
  maxdepth: 6
Time: 10.003888
  inferstep time: 7.637333
  node_find time: 0.168511
  node_crea time: 1.664566
    pred time: 0.539296
    thmpred time: 0.000031
    mc time: 0.497484
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.395318

INT_MOD_ID
Statistics
  infstep : 484
  nodes   : 108
  maxdepth: 5
Time: 10.076779
  inferstep time: 7.487605
  node_find time: 0.198314
  node_crea time: 1.759221
    pred time: 0.484078
    thmpred time: 0.000016
    mc time: 0.571856
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.11708

INT_MOD_COMMON_FACTOR
Statistics
  infstep : 498
  nodes   : 93
  maxdepth: 5
Time: 10.051023
  inferstep time: 7.32966
  node_find time: 0.233389
  node_crea time: 1.74564
    pred time: 0.588759
    thmpred time: 0.000017
    mc time: 0.582072
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.112313

INT_DIV_LMUL
Statistics
  infstep : 628
  nodes   : 100
  maxdepth: 5
Time: 10.017496
  inferstep time: 7.210366
  node_find time: 0.247925
  node_crea time: 1.786437
    pred time: 0.524548
    thmpred time: 0.000012
    mc time: 0.587089
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.138868

INT_DIV_RMUL
proof length: 2
proof time: 0.091267
Statistics
  infstep : 39
  nodes   : 11
  maxdepth: 3
Time: 1.001898
  inferstep time: 0.763502
  node_find time: 0.014893
  node_crea time: 0.140691
    pred time: 0.046495
    thmpred time: 0.000002
    mc time: 0.061467
    inst time: 0.0
Proof found: simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "tactictoe_thm_74"), (DB.fetch "integer" "INT_LE_REFL"), (DB.fetch "integer" "INT_ADD_RID")] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_DIV_LMUL", DB.fetch "integer" "INT_DIV_UNIQUE", DB.fetch "integer" "int_mod", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_MOD_UNIQUE", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_DIV_MUL_ID", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_DIV_0", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_DIV_1", DB.fetch "integer" "INT_EQ_LMUL2", DB.fetch "integer" "INT_EQ_LMUL_IMP"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008499

INT_MOD_EQ0
Statistics
  infstep : 423
  nodes   : 100
  maxdepth: 6
Time: 10.013837
  inferstep time: 6.814662
  node_find time: 0.2157
  node_crea time: 2.348254
    pred time: 0.660398
    thmpred time: 0.000035
    mc time: 0.957996
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.320885

INT_MUL_DIV
Statistics
  infstep : 326
  nodes   : 82
  maxdepth: 5
Time: 10.015618
  inferstep time: 6.797551
  node_find time: 0.156113
  node_crea time: 2.536768
    pred time: 0.604235
    thmpred time: 0.000013
    mc time: 1.073754
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.492042

INT_ADD_DIV
Statistics
  infstep : 408
  nodes   : 100
  maxdepth: 6
Time: 10.00277
  inferstep time: 7.353992
  node_find time: 0.165568
  node_crea time: 1.908234
    pred time: 0.543508
    thmpred time: 0.000015
    mc time: 0.621666
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.561812
Replaying proof: 0.013788
Replaying proof: 0.007325

INT_MOD_ADD_MULTIPLES
Statistics
  infstep : 453
  nodes   : 93
  maxdepth: 6
Time: 10.045639
  inferstep time: 7.022567
  node_find time: 0.21227
  node_crea time: 2.11369
    pred time: 0.507575
    thmpred time: 0.000022
    mc time: 0.925354
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.877607

INT_MOD_NEG_NUMERATOR
Statistics
  infstep : 430
  nodes   : 93
  maxdepth: 5
Time: 10.001909
  inferstep time: 7.720697
  node_find time: 0.175527
  node_crea time: 1.519236
    pred time: 0.427223
    thmpred time: 0.000018
    mc time: 0.619309
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.024886

INT_MOD_PLUS
Statistics
  infstep : 336
  nodes   : 82
  maxdepth: 5
Time: 10.002461
  inferstep time: 7.734665
  node_find time: 0.1681
  node_crea time: 1.546883
    pred time: 0.480638
    thmpred time: 0.000037
    mc time: 0.529981
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.540639

INT_MOD_SUB
Statistics
  infstep : 298
  nodes   : 124
  maxdepth: 6
Time: 10.001447
  inferstep time: 7.354712
  node_find time: 0.131916
  node_crea time: 2.014608
    pred time: 0.452604
    thmpred time: 0.000026
    mc time: 0.958737
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.514415

INT_MOD_MOD
proof length: 3
proof time: 0.130857
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 3
Time: 0.630771
  inferstep time: 0.479515
  node_find time: 0.003994
  node_crea time: 0.096685
    pred time: 0.018517
    thmpred time: 0.000003
    mc time: 0.088768
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN Q.ABBREV_TAC [HolKernel.QUOTE " (*#loc 1 70668*)Rj = j % k"] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ADD_DIV", DB.fetch "integer" "INT_MOD_EQ0", DB.fetch "integer" "INT_MOD_PLUS", DB.fetch "integer" "INT_MOD_ADD_MULTIPLES", DB.fetch "integer" "INT_MOD_SUB", DB.fetch "integer" "INT_MUL_DIV", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD_UNIQUE", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_DIV_MUL_ID", DB.fetch "integer" "INT_MOD_ID", arithmeticTheory.tactictoe_thm_52, arithmeticTheory.tactictoe_thm_11, DB.fetch "integer" "INT_MOD_NEG", DB.fetch "integer" "tactictoe_thm_101"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.807864

INT_DIV_P
Statistics
  infstep : 599
  nodes   : 103
  maxdepth: 5
Time: 10.024
  inferstep time: 6.153484
  node_find time: 0.302945
  node_crea time: 2.611389
    pred time: 0.576857
    thmpred time: 0.000014
    mc time: 1.110157
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.178083

INT_MOD_P
Statistics
  infstep : 391
  nodes   : 107
  maxdepth: 5
Time: 10.014208
  inferstep time: 7.424978
  node_find time: 0.161672
  node_crea time: 1.861943
    pred time: 0.481656
    thmpred time: 0.00003
    mc time: 0.743233
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.262769

INT_DIV_FORALL_P
Statistics
  infstep : 612
  nodes   : 120
  maxdepth: 6
Time: 10.066075
  inferstep time: 6.878038
  node_find time: 0.275643
  node_crea time: 2.095508
    pred time: 0.427387
    thmpred time: 0.000021
    mc time: 0.910313
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.158158

INT_MOD_FORALL_P
Statistics
  infstep : 340
  nodes   : 86
  maxdepth: 5
Time: 10.072252
  inferstep time: 6.986927
  node_find time: 0.179731
  node_crea time: 2.301361
    pred time: 0.651783
    thmpred time: 0.000017
    mc time: 0.902904
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.397076

INT_MOD_1
proof length: 4
proof time: 0.037988
Statistics
  infstep : 115
  nodes   : 33
  maxdepth: 4
Time: 3.937351
  inferstep time: 3.057113
  node_find time: 0.049299
  node_crea time: 0.577312
    pred time: 0.136631
    thmpred time: 0.000008
    mc time: 0.348238
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.MATCH_MP_TAC (DB.fetch "integer" "INT_MOD_UNIQUE") THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [(DB.fetch "integer" "INT_MUL_LID"), (DB.fetch "integer" "INT_ADD_RID"), (DB.fetch "integer" "INT_LE_REFL")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_MUL_RID", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_POASQ", DB.fetch "integer" "INT_MUL_EQ_1", DB.fetch "integer" "INT_MUL_LID", DB.fetch "integer" "INT_NEG_MINUS1", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "INT_LE_01", DB.fetch "integer" "INT_DISCRETE", DB.fetch "integer" "INT_LE_LT1", DB.fetch "integer" "INT_LT_LE1", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LTE_ADD"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.10605

INT_LESS_MOD
Statistics
  infstep : 251
  nodes   : 92
  maxdepth: 5
Time: 10.015071
  inferstep time: 8.05284
  node_find time: 0.103199
  node_crea time: 1.472691
    pred time: 0.412336
    thmpred time: 0.000029
    mc time: 0.537074
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.138924

INT_MOD_MINUS1
Statistics
  infstep : 484
  nodes   : 100
  maxdepth: 5
Time: 10.028083
  inferstep time: 7.30994
  node_find time: 0.219634
  node_crea time: 1.790789
    pred time: 0.531647
    thmpred time: 0.000015
    mc time: 0.582922
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.213391

INT_ABS_POS
proof length: 5
proof time: 0.069606
Statistics
  infstep : 69
  nodes   : 23
  maxdepth: 5
Time: 2.413029
  inferstep time: 1.852232
  node_find time: 0.03427
  node_crea time: 0.335029
    pred time: 0.130833
    thmpred time: 0.000004
    mc time: 0.127379
    inst time: 0.0
Proof found: simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_DIV_FORALL_P", DB.fetch "integer" "INT_DIV_UNIQUE", DB.fetch "integer" "INT_DIV_P", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_LESS_MOD", DB.fetch "integer" "INT_MOD_UNIQUE", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_ADDL"] THEN BasicProvers.SRW_TAC [] [] THENL
  [boolLib.REWRITE_TAC [(DB.fetch "integer" "INT_LE_LT")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_MOD_MINUS1", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_LT_ADDR", DB.fetch "integer" "INT_LT_ADDL", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_POASQ", DB.fetch "integer" "INT_POS_NZ", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LTE_ADD", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_LT_01"],
  BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LE_LADD", DB.fetch "integer" "INT_LE_RADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "INT_LET_TRANS", DB.fetch "integer" "INT_LE_TRANS", DB.fetch "integer" "INT_LTE_TRANS", DB.fetch "integer" "INT_LET_ANTISYM", DB.fetch "integer" "INT_LE_ANTISYM", DB.fetch "integer" "INT_LTE_ANTSYM", DB.fetch "integer" "INT_LT_LE", DB.fetch "integer" "INT_LT_IMP_LE", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "INT_LET_TOTAL", DB.fetch "integer" "INT_LE_TOTAL", DB.fetch "integer" "INT_LTE_TOTAL"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.567005

INT_ABS_NUM
proof length: 1
proof time: 0.065462
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.126803
  inferstep time: 0.107675
  node_find time: 0.00046
  node_crea time: 0.011731
    pred time: 0.003061
    thmpred time: 0.0
    mc time: 0.006555
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS" , DB.fetch "integer" "INT_ABS_POS" , DB.fetch "integer" "INT" , DB.fetch "integer" "tactictoe_thm_51" , DB.fetch "integer" "INT_ADD" , DB.fetch "integer" "INT_DIV" , DB.fetch "integer" "INT_LE" , DB.fetch "integer" "INT_LT" , DB.fetch "integer" "INT_INJ" , DB.fetch "integer" "NUM_OF_INT" , DB.fetch "integer" "INT_LT_CALCULATE" , DB.fetch "integer" "INT_LT_NZ" , DB.fetch "integer" "INT_MOD" , DB.fetch "integer" "INT_MUL" , DB.fetch "integer" "INT_NUM_CASES" , DB.fetch "integer" "NUM_POSINT_EXISTS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010186

INT_NEG_SAME_EQ
proof length: 7
proof time: 0.192679
Statistics
  infstep : 79
  nodes   : 14
  maxdepth: 4
Time: 1.748987
  inferstep time: 1.368237
  node_find time: 0.035153
  node_crea time: 0.189465
    pred time: 0.07192
    thmpred time: 0.000004
    mc time: 0.065833
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_MOD", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "tactictoe_thm_75", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT"],
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_MOD", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "tactictoe_thm_75", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_MOD_NEG", DB.fetch "integer" "INT_NEG_EQ0", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_LE_NEGL", DB.fetch "integer" "INT_LE_NEGR", DB.fetch "integer" "INT_LNEG_UNIQ", DB.fetch "integer" "INT_LT_NEGTOTAL"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.209011

INT_ABS_NEG
proof length: 6
proof time: 0.159384
Statistics
  infstep : 292
  nodes   : 71
  maxdepth: 5
Time: 8.805389
  inferstep time: 6.54487
  node_find time: 0.171056
  node_crea time: 1.381653
    pred time: 0.449283
    thmpred time: 0.000025
    mc time: 0.544542
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "NUM_POSINT_EXISTS"] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "NUM_POSINT_EXISTS"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_NEG_LE0", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_MOD_NEG", DB.fetch "integer" "INT_NEG_EQ0", DB.fetch "integer" "INT_NEG_SAME_EQ", DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "INT_ADD_RINV"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.084289

INT_ABS_ABS
proof length: 5
proof time: 0.107656
Statistics
  infstep : 14
  nodes   : 11
  maxdepth: 3
Time: 0.824376
  inferstep time: 0.668777
  node_find time: 0.005698
  node_crea time: 0.098554
    pred time: 0.033656
    thmpred time: 0.000003
    mc time: 0.043913
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_MOD", DB.fetch "integer" "INT_ADD", DB.fetch "integer" "INT_MUL", DB.fetch "integer" "INT_POS"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_MOD", DB.fetch "integer" "INT_ADD", DB.fetch "integer" "INT_MUL", DB.fetch "integer" "INT_POS"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_SAME_EQ", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_ADD_RID", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_NEGINT_EXISTS"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.200784

INT_ABS_EQ_ID
proof length: 1
proof time: 0.088843
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.147078
  inferstep time: 0.125247
  node_find time: 0.000518
  node_crea time: 0.01454
    pred time: 0.004357
    thmpred time: 0.0
    mc time: 0.008375
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_POS" , DB.fetch "integer" "INT_ABS" , DB.fetch "integer" "INT_ABS_ABS" , DB.fetch "integer" "INT_ABS_NEG" , DB.fetch "integer" "INT_ABS_NUM" , DB.fetch "integer" "NUM_POSINT_EXISTS" , DB.fetch "integer" "INT_DIV_FORALL_P" , DB.fetch "integer" "INT_DIV_UNIQUE" , DB.fetch "integer" "INT_DIV_P" , DB.fetch "integer" "INT_NEG_LE0" , DB.fetch "integer" "INT_LESS_MOD" , DB.fetch "integer" "INT_MOD_UNIQUE" , DB.fetch "integer" "INT_LE_ADDL" , DB.fetch "integer" "INT_LE_ADDR" , DB.fetch "integer" "INT_LE_DOUBLE" , DB.fetch "integer" "INT_LE_NEGL"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082458

INT_ABS_MUL
Statistics
  infstep : 310
  nodes   : 82
  maxdepth: 6
Time: 10.058407
  inferstep time: 7.592655
  node_find time: 0.156036
  node_crea time: 1.783483
    pred time: 0.539105
    thmpred time: 0.000024
    mc time: 0.635111
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.132468

INT_ABS_EQ0
proof length: 5
proof time: 0.181063
Statistics
  infstep : 14
  nodes   : 9
  maxdepth: 3
Time: 0.862111
  inferstep time: 0.698713
  node_find time: 0.008416
  node_crea time: 0.098122
    pred time: 0.036513
    thmpred time: 0.000002
    mc time: 0.049809
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_EQ_ID", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_ABS_ABS", DB.fetch "integer" "INT_ABS_MUL", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "NUM_POSINT", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2", DB.fetch "integer" "tactictoe_thm_3"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_ABS_EQ_ID", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_ABS", DB.fetch "integer" "INT_ABS_MUL", DB.fetch "integer" "NUM_POSINT_EXISTS"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_EQ_ID", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_ABS_ABS", DB.fetch "integer" "INT_ABS_MUL", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_NEG_SAME_EQ", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_DIVISION"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082521

INT_ABS_LT0
proof length: 2
proof time: 0.005275
Statistics
  infstep : 86
  nodes   : 18
  maxdepth: 3
Time: 2.772072
  inferstep time: 2.13883
  node_find time: 0.0513
  node_crea time: 0.365987
    pred time: 0.134204
    thmpred time: 0.000006
    mc time: 0.135041
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.COND_elim_ss) [(DB.fetch "integer" "INT_ABS"), (DB.fetch "integer" "INT_NEG_LT0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_SAME_EQ")] THEN BasicProvers.PROVE_TAC [(DB.fetch "integer" "INT_LT_NEGTOTAL"), (DB.fetch "integer" "INT_NOT_LT"), (DB.fetch "integer" "INT_LE_LT")]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.089671

INT_ABS_LE0
proof length: 6
proof time: 0.151087
Statistics
  infstep : 28
  nodes   : 16
  maxdepth: 4
Time: 1.488736
  inferstep time: 1.153591
  node_find time: 0.012303
  node_crea time: 0.229187
    pred time: 0.080155
    thmpred time: 0.000003
    mc time: 0.11153
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_INJ", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "NUM_POSINT_EXISTS"],
  simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_ABS_NUM"), (DB.fetch "integer" "INT_ABS_NEG"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_SAME_EQ"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_INJ")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_76", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "NUM_POSINT", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "int_of_num", DB.fetch "integer" "tactictoe_thm_2", DB.fetch "integer" "tactictoe_thm_3", DB.fetch "integer" "tactictoe_thm_51"],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_ABS_EQ_ID", DB.fetch "integer" "INT_ABS_POS", DB.fetch "integer" "INT_ABS", DB.fetch "integer" "INT_ABS_EQ0", DB.fetch "integer" "INT_ABS_LT0", DB.fetch "integer" "INT_ABS_NUM", DB.fetch "integer" "INT_ABS_NEG", DB.fetch "integer" "INT_ABS_ABS", DB.fetch "integer" "INT_ABS_MUL", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "int_div", DB.fetch "integer" "tactictoe_thm_82"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.097106

INT_ABS_LT
Statistics
  infstep : 527
  nodes   : 112
  maxdepth: 6
Time: 10.016129
  inferstep time: 7.377531
  node_find time: 0.252677
  node_crea time: 1.598671
    pred time: 0.377423
    thmpred time: 0.000019
    mc time: 0.537854
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.173689

INT_ABS_LE
Statistics
  infstep : 300
  nodes   : 97
  maxdepth: 5
Time: 10.050764
  inferstep time: 7.245242
  node_find time: 0.142707
  node_crea time: 2.114263
    pred time: 0.632121
    thmpred time: 0.000024
    mc time: 0.70488
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.139299

INT_ABS_EQ
Statistics
  infstep : 320
  nodes   : 96
  maxdepth: 6
Time: 10.009906
  inferstep time: 7.561083
  node_find time: 0.162908
  node_crea time: 1.74764
    pred time: 0.556378
    thmpred time: 0.000029
    mc time: 0.593383
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.218506
Replaying proof: 0.000215

INT_QUOT
Statistics
  infstep : 580
  nodes   : 118
  maxdepth: 6
Time: 10.107129
  inferstep time: 6.985013
  node_find time: 0.268123
  node_crea time: 2.007585
    pred time: 0.491441
    thmpred time: 0.000023
    mc time: 0.937968
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.017519

INT_QUOT_0
proof length: 6
proof time: 0.122799
Statistics
  infstep : 281
  nodes   : 56
  maxdepth: 4
Time: 6.408752
  inferstep time: 4.839227
  node_find time: 0.128168
  node_crea time: 0.832603
    pred time: 0.238866
    thmpred time: 0.000014
    mc time: 0.370439
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_quot"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "NUM_OF_INT")] THEN boolLib.REPEAT boolLib.GEN_TAC THEN
  boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 75853*)q"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [metisTools.METIS_TAC [DB.fetch "integer" "NUM_OF_INT", arithmeticTheory.ZERO_DIV, DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "int_quot", DB.fetch "integer" "int_div", arithmeticTheory.tactictoe_thm_11, DB.fetch "integer" "Num", DB.fetch "integer" "INT_OF_NUM", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_LT_CALCULATE", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "tactictoe_thm_110", DB.fetch "integer" "INT_MOD_MINUS1"],
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_0", arithmeticTheory.ZERO_DIV, DB.fetch "integer" "int_quot", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_OF_NUM", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "Num", DB.fetch "integer" "INT_MOD_MINUS1", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_LT0", DB.fetch "integer" "INT_LT_NEGTOTAL", DB.fetch "integer" "INT_ABS_EQ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "INT_POS_NZ", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_POASQ"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.170371

INT_QUOT_1
proof length: 6
proof time: 0.066529
Statistics
  infstep : 122
  nodes   : 32
  maxdepth: 4
Time: 3.37277
  inferstep time: 2.516981
  node_find time: 0.058092
  node_crea time: 0.48852
    pred time: 0.134404
    thmpred time: 0.000008
    mc time: 0.268996
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_quot"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "NUM_OF_INT")] THEN boolLib.REPEAT boolLib.GEN_TAC THEN
  boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_div"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEG_EQ"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "INT_ADD_RID")],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_NEG_0", DB.fetch "integer" "int_quot", DB.fetch "integer" "int_div", DB.fetch "integer" "NUM_OF_INT", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_MOD_UNIQUE", DB.fetch "integer" "NUM_POSINT_EXISTS", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_LE_01", DB.fetch "integer" "INT_LE_SQUARE", DB.fetch "integer" "NUM_NEGINT_EXISTS", DB.fetch "integer" "INT_NEG_GT0", DB.fetch "integer" "INT_NEG_EQ0", DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "INT_MOD_MINUS1", DB.fetch "integer" "tactictoe_thm_78"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.094842

INT_QUOT_NEG
Statistics
  infstep : 244
  nodes   : 105
  maxdepth: 6
Time: 10.098454
  inferstep time: 7.043697
  node_find time: 0.120332
  node_crea time: 2.432764
    pred time: 0.617733
    thmpred time: 0.000021
    mc time: 0.803128
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.215567

INT_ABS_QUOT
Statistics
  infstep : 237
  nodes   : 106
  maxdepth: 6
Time: 10.057349
  inferstep time: 7.029439
  node_find time: 0.110508
  node_crea time: 2.523031
    pred time: 0.73444
    thmpred time: 0.000018
    mc time: 0.841311
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.199905
Replaying proof: 0.000083
Replaying proof: 0.002215
Replaying proof: 0.002848
Replaying proof: 0.011327
Replaying proof: 0.00214

INT_QUOT_UNIQUE
Statistics
  infstep : 237
  nodes   : 79
  maxdepth: 5
Time: 10.000996
  inferstep time: 5.877316
  node_find time: 0.111019
  node_crea time: 3.624105
    pred time: 1.156138
    thmpred time: 0.000016
    mc time: 0.582622
    inst time: 0.0
Proof status: Time Out
Org tac number: 27
Original proof time: 0.0
Replaying proof: 1.275963

INT_QUOT_ID
proof length: 5
proof time: 0.061339
Statistics
  infstep : 19
  nodes   : 9
  maxdepth: 3
Time: 1.161945
  inferstep time: 0.899538
  node_find time: 0.009366
  node_crea time: 0.152565
    pred time: 0.040825
    thmpred time: 0.000003
    mc time: 0.125696
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN boolLib.STRUCT_CASES_TAC (Q.SPEC [HolKernel.QUOTE " (*#loc 1 55198*)p"] (DB.fetch "integer" "INT_NUM_CASES")) THENL
  [simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "int_quot"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_NEG_LT0"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, boolLib.GSYM arithmeticTheory.NOT_ZERO_LT_ZERO],
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_EQ0"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "int_quot"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "NUM_OF_INT"), (DB.fetch "integer" "INT_NEG_GE0"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_NEG_LT0"), (DB.fetch "integer" "INT_NEG_LE0"), arithmeticTheory.ZERO_DIV, boolLib.GSYM arithmeticTheory.NOT_ZERO_LT_ZERO],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_QUOT_0", DB.fetch "integer" "INT_QUOT_1", DB.fetch "integer" "INT_ABS_QUOT", DB.fetch "integer" "INT_QUOT_NEG", DB.fetch "integer" "int_quot", DB.fetch "integer" "INT_QUOT_UNIQUE", DB.fetch "integer" "INT_QUOT", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_MOD_MINUS1", DB.fetch "integer" "INT_MOD_1", DB.fetch "integer" "INT_LE_01", DB.fetch "integer" "INT_LT_01", DB.fetch "integer" "INT_DISCRETE", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "INT_NEG_MINUS1"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.137239
Replaying proof: 0.000101

INT_REM
Statistics
  infstep : 464
  nodes   : 114
  maxdepth: 5
Time: 10.014598
  inferstep time: 6.930133
  node_find time: 0.227232
  node_crea time: 2.103135
    pred time: 0.478386
    thmpred time: 0.000016
    mc time: 1.062935
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.077688
Replaying proof: 0.000187
Replaying proof: 0.00561
Replaying proof: 0.007014
Replaying proof: 0.001345
Replaying proof: 0.006727

INT_REMQUOT
Statistics
  infstep : 326
  nodes   : 109
  maxdepth: 6
Time: 10.000999
  inferstep time: 6.471873
  node_find time: 0.167186
  node_crea time: 2.791451
    pred time: 0.67519
    thmpred time: 0.000032
    mc time: 1.121489
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.490723

INT_REM_UNIQUE
Statistics
  infstep : 405
  nodes   : 108
  maxdepth: 6
Time: 10.013174
  inferstep time: 6.569684
  node_find time: 0.186759
  node_crea time: 2.635181
    pred time: 0.595639
    thmpred time: 0.000022
    mc time: 0.833644
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.295234

INT_REM_NEG
Statistics
  infstep : 356
  nodes   : 133
  maxdepth: 7
Time: 10.127096
  inferstep time: 5.990139
  node_find time: 0.217665
  node_crea time: 3.209946
    pred time: 0.657073
    thmpred time: 0.000025
    mc time: 1.361541
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.385377

INT_REM_ID
proof length: 6
proof time: 0.052628
Statistics
  infstep : 55
  nodes   : 23
  maxdepth: 4
Time: 1.980996
  inferstep time: 1.517749
  node_find time: 0.025831
  node_crea time: 0.280477
    pred time: 0.072884
    thmpred time: 0.000005
    mc time: 0.164492
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN let
  fun case_tac s = boolLib.REPEAT_TCL boolLib.STRIP_THM_THEN boolLib.ASSUME_TAC ( Q.SPEC [ HolKernel.QUOTE s ] ( ( DB.fetch "integer" "INT_NUM_CASES" ) ) ) hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.FIRST_X_ASSUM boolLib.SUBST_ALL_TAC hhs_infixl0_open boolLib.THEN hhs_infixl0_close Q.ABBREV_TAC [ HolKernel.QUOTE s , HolKernel.QUOTE " = n" ] hhs_infixl0_open boolLib.THEN hhs_infixl0_close boolLib.POP_ASSUM ( HolKernel.K boolLib.ALL_TAC )
in
  case_tac "p" THENL
  [simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "int_rem"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "int_sub"), (DB.fetch "integer" "tactictoe_thm_124"), (DB.fetch "integer" "tactictoe_thm_125"), (DB.fetch "integer" "tactictoe_thm_126"), (DB.fetch "integer" "tactictoe_thm_127"), (DB.fetch "integer" "INT_QUOT"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_ADD")],
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "int_rem"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "tactictoe_thm_140"), (DB.fetch "integer" "tactictoe_thm_141"), (DB.fetch "integer" "tactictoe_thm_142"), (DB.fetch "integer" "int_sub"), (DB.fetch "integer" "INT_NEG_EQ0"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), (DB.fetch "integer" "INT_ADD_LID"), (DB.fetch "integer" "INT_ADD_RID"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEG_ADD"), (DB.fetch "integer" "INT_QUOT_0"), (DB.fetch "integer" "INT_QUOT_NEG"), (DB.fetch "integer" "INT_MUL_LZERO")] THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_QUOT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_QUOT_NEG"), (DB.fetch "integer" "INT_ADD_RID"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_ADD_LID"), (DB.fetch "integer" "INT_ABS_NUM"), (DB.fetch "integer" "INT_ABS_NEG"), (DB.fetch "integer" "INT_NEGNEG"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), arithmeticTheory.ZERO_DIV, boolLib.GSYM arithmeticTheory.NOT_ZERO_LT_ZERO, (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "tactictoe_thm_135"), (DB.fetch "integer" "tactictoe_thm_136")],
  metisTools.METIS_TAC [DB.fetch "integer" "INT_REMQUOT", DB.fetch "integer" "int_rem", DB.fetch "integer" "INT_REM_NEG", DB.fetch "integer" "INT_REM_UNIQUE", DB.fetch "integer" "INT_REM", DB.fetch "integer" "INT_QUOT_NEG", DB.fetch "integer" "INT_QUOT_0", DB.fetch "integer" "INT_ABS_QUOT", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_DIV_ID", DB.fetch "integer" "int_div", DB.fetch "integer" "INT_DIV_MUL_ID", DB.fetch "integer" "INT_DIV_NEG", DB.fetch "integer" "INT_MOD0"]]
end
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.204161

INT_REM0
proof length: 1
proof time: 0.001525
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.185812
  inferstep time: 0.131131
  node_find time: 0.001659
  node_crea time: 0.037449
    pred time: 0.004616
    thmpred time: 0.0
    mc time: 0.034662
    inst time: 0.0
Proof found: (simpLib.ASM_SIMP_TAC ( boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss ) [ ( DB.fetch "integer" "INT_INJ" ) , ( DB.fetch "integer" "int_rem" ) , ( DB.fetch "integer" "INT_NEGNEG" ) , ( DB.fetch "integer" "tactictoe_thm_140" ) , ( DB.fetch "integer" "tactictoe_thm_141" ) , ( DB.fetch "integer" "tactictoe_thm_142" ) , ( DB.fetch "integer" "int_sub" ) , ( DB.fetch "integer" "INT_NEG_EQ0" ) , boolLib.GSYM ( DB.fetch "integer" "INT_NEG_LMUL" ) , boolLib.GSYM ( DB.fetch "integer" "INT_NEG_RMUL" ) , ( DB.fetch "integer" "INT_ADD_LID" ) , ( DB.fetch "integer" "INT_ADD_RID" ) , ( DB.fetch "integer" "INT_NEG_0" ) , ( DB.fetch "integer" "INT_NEG_ADD" ) , ( DB.fetch "integer" "INT_QUOT_0" ) , ( DB.fetch "integer" "INT_QUOT_NEG" ) , ( DB.fetch "integer" "INT_MUL_LZERO" ) ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.136672

INT_REM_COMMON_FACTOR
proof length: 4
proof time: 0.00501
Statistics
  infstep : 74
  nodes   : 33
  maxdepth: 5
Time: 3.394037
  inferstep time: 2.508703
  node_find time: 0.040806
  node_crea time: 0.618063
    pred time: 0.165532
    thmpred time: 0.000013
    mc time: 0.337988
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN boolLib.MATCH_MP_TAC (DB.fetch "integer" "INT_REM_UNIQUE") THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_QUOT"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_LT"), (DB.fetch "integer" "INT_QUOT_NEG"), (DB.fetch "integer" "INT_ADD_RID"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_ADD_LID"), (DB.fetch "integer" "INT_ABS_NUM"), (DB.fetch "integer" "INT_ABS_NEG"), (DB.fetch "integer" "INT_NEGNEG"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), arithmeticTheory.ZERO_DIV, boolLib.GSYM arithmeticTheory.NOT_ZERO_LT_ZERO, (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "tactictoe_thm_135"), (DB.fetch "integer" "tactictoe_thm_136")] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "integer" "INT_LE_LT"), (DB.fetch "integer" "INT_ABS_POS"), (DB.fetch "integer" "INT_MUL_LZERO"), (DB.fetch "integer" "INT_ABS_EQ0")]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.117198

INT_REM_EQ0
Statistics
  infstep : 368
  nodes   : 126
  maxdepth: 6
Time: 10.004608
  inferstep time: 6.561963
  node_find time: 0.191707
  node_crea time: 2.605266
    pred time: 0.620121
    thmpred time: 0.000014
    mc time: 1.162009
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.295348

INT_MUL_QUOT
Statistics
  infstep : 360
  nodes   : 118
  maxdepth: 6
Time: 10.040365
  inferstep time: 6.24189
  node_find time: 0.194155
  node_crea time: 2.937487
    pred time: 0.597379
    thmpred time: 0.000015
    mc time: 1.342476
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.467503

INT_REM_EQ_MOD
Statistics
  infstep : 426
  nodes   : 100
  maxdepth: 5
Time: 10.02234
  inferstep time: 6.768154
  node_find time: 0.225782
  node_crea time: 2.277554
    pred time: 0.520298
    thmpred time: 0.000019
    mc time: 0.950469
    inst time: 0.0
Proof status: Time Out
Org tac number: 33
Original proof time: 0.0
Replaying proof: 1.945686

INT_DIVIDES_MOD0
Statistics
  infstep : 392
  nodes   : 95
  maxdepth: 5
Time: 10.082653
  inferstep time: 7.184974
  node_find time: 0.205021
  node_crea time: 1.979491
    pred time: 0.458352
    thmpred time: 0.000021
    mc time: 1.007977
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.284098

INT_DIVIDES_0
proof length: 2
proof time: 0.070547
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.333785
  inferstep time: 0.272138
  node_find time: 0.002369
  node_crea time: 0.027143
    pred time: 0.006892
    thmpred time: 0.000001
    mc time: 0.029285
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "integer" "INT_DIVIDES_MOD0", DB.fetch "integer" "INT_DIVIDES", DB.fetch "integer" "INT_DIV_FORALL_P", DB.fetch "integer" "INT_DIV_P", DB.fetch "integer" "INT_EQ_LMUL_IMP", DB.fetch "integer" "INT_EQ_RMUL_IMP", DB.fetch "integer" "INT_MOD_FORALL_P", DB.fetch "integer" "INT_MOD_P", DB.fetch "integer" "INT_SUMSQ", DB.fetch "integer" "tactictoe_thm_135", DB.fetch "integer" "INT_LET_ADD", DB.fetch "integer" "INT_LTE_ADD", DB.fetch "integer" "INT_LE_ADD", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "INT_LT_ADD", DB.fetch "integer" "INT_DIVISION"] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_MOD0", DB.fetch "integer" "INT_MOD_FORALL_P", DB.fetch "integer" "INT_MOD_P", DB.fetch "integer" "INT_DIVIDES_MOD0", DB.fetch "integer" "INT_ADD_DIV", DB.fetch "integer" "INT_DIVISION", DB.fetch "integer" "INT_MOD_BOUNDS", DB.fetch "integer" "INT_DIV_MUL_ID", DB.fetch "integer" "INT_MUL_DIV", DB.fetch "integer" "INT_MOD_NEG_NUMERATOR", DB.fetch "integer" "INT_MOD_COMMON_FACTOR", DB.fetch "integer" "INT_MOD_EQ0", DB.fetch "integer" "int_mod", DB.fetch "integer" "INT_MOD_NEG", DB.fetch "integer" "INT_MOD_ID", DB.fetch "integer" "INT_MOD_ADD_MULTIPLES"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016107

INT_DIVIDES_1
Statistics
  infstep : 315
  nodes   : 56
  maxdepth: 5
Time: 10.130387
  inferstep time: 7.376172
  node_find time: 0.240284
  node_crea time: 1.713953
    pred time: 0.471693
    thmpred time: 0.00002
    mc time: 0.770521
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.052805

INT_DIVIDES_REFL
Statistics
  infstep : 444
  nodes   : 76
  maxdepth: 5
Time: 10.105945
  inferstep time: 7.61918
  node_find time: 0.314269
  node_crea time: 1.121251
    pred time: 0.364601
    thmpred time: 0.00002
    mc time: 0.315008
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01365

INT_DIVIDES_TRANS
Statistics
  infstep : 428
  nodes   : 81
  maxdepth: 5
Time: 10.005355
  inferstep time: 7.671449
  node_find time: 0.224339
  node_crea time: 1.300268
    pred time: 0.34101
    thmpred time: 0.000021
    mc time: 0.375584
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016655

INT_DIVIDES_MUL
Statistics
  infstep : 601
  nodes   : 128
  maxdepth: 6
Time: 10.002947
  inferstep time: 6.299375
  node_find time: 0.325337
  node_crea time: 2.291036
    pred time: 0.52252
    thmpred time: 0.000015
    mc time: 1.045862
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013561

INT_DIVIDES_LMUL
proof length: 1
proof time: 0.076571
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.134036
  inferstep time: 0.106574
  node_find time: 0.00096
  node_crea time: 0.016165
    pred time: 0.003618
    thmpred time: 0.000001
    mc time: 0.01131
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_DIVIDES_MUL" , DB.fetch "integer" "INT_DIVIDES" , DB.fetch "integer" "INT_DIVIDES_MOD0" , DB.fetch "integer" "INT_DIVIDES_TRANS" , DB.fetch "integer" "INT_DIVIDES_REFL" , DB.fetch "integer" "INT_DIVIDES_0" , DB.fetch "integer" "INT_DIVIDES_1" , DB.fetch "integer" "INT_QUOT_UNIQUE" , DB.fetch "integer" "INT_REM_UNIQUE" , DB.fetch "integer" "INT_DIV_UNIQUE" , DB.fetch "integer" "INT_MOD_FORALL_P" , DB.fetch "integer" "INT_MOD_ADD_MULTIPLES" , DB.fetch "integer" "tactictoe_thm_101" , DB.fetch "integer" "tactictoe_thm_103" , DB.fetch "integer" "INT_MOD_COMMON_FACTOR" , DB.fetch "integer" "INT_MOD_EQ0"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015445

INT_DIVIDES_RMUL
proof length: 1
proof time: 0.073812
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.144393
  inferstep time: 0.106316
  node_find time: 0.000861
  node_crea time: 0.020306
    pred time: 0.003301
    thmpred time: 0.0
    mc time: 0.01609
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "integer" "INT_DIVIDES_LMUL" , DB.fetch "integer" "INT_DIVIDES_MUL" , DB.fetch "integer" "INT_DIVIDES" , DB.fetch "integer" "INT_DIVIDES_MOD0" , DB.fetch "integer" "INT_DIVIDES_TRANS" , DB.fetch "integer" "INT_DIVIDES_REFL" , DB.fetch "integer" "INT_DIVIDES_0" , DB.fetch "integer" "INT_DIVIDES_1" , DB.fetch "integer" "INT_QUOT_UNIQUE" , DB.fetch "integer" "INT_REM_UNIQUE" , DB.fetch "integer" "INT_DIV_UNIQUE" , DB.fetch "integer" "INT_MOD_FORALL_P" , DB.fetch "integer" "INT_MOD_ADD_MULTIPLES" , DB.fetch "integer" "tactictoe_thm_101" , DB.fetch "integer" "tactictoe_thm_103" , DB.fetch "integer" "INT_MOD_COMMON_FACTOR"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.021627
Replaying proof: 0.0043

INT_DIVIDES_LADD
Statistics
  infstep : 486
  nodes   : 84
  maxdepth: 6
Time: 10.000033
  inferstep time: 7.367259
  node_find time: 0.277256
  node_crea time: 1.395976
    pred time: 0.325455
    thmpred time: 0.000019
    mc time: 0.600696
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.208034

INT_DIVIDES_NEG
Statistics
  infstep : 416
  nodes   : 96
  maxdepth: 5
Time: 10.013133
  inferstep time: 7.324489
  node_find time: 0.224218
  node_crea time: 1.611914
    pred time: 0.448737
    thmpred time: 0.000014
    mc time: 0.571932
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.274391

INT_DIVIDES_LSUB
proof length: 2
proof time: 0.002846
Statistics
  infstep : 318
  nodes   : 75
  maxdepth: 5
Time: 7.74843
  inferstep time: 5.729839
  node_find time: 0.173769
  node_crea time: 1.111662
    pred time: 0.244138
    thmpred time: 0.00001
    mc time: 0.513256
    inst time: 0.0
Proof found: BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss) [DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "INT_LT_MUL"] THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_DIVIDES_NEG", DB.fetch "integer" "INT_DIVIDES_LADD", DB.fetch "integer" "INT_DIVIDES_RADD", DB.fetch "integer" "INT_DIVIDES_MUL_BOTH", DB.fetch "integer" "INT_DIVIDES_LMUL", DB.fetch "integer" "INT_DIVIDES_RMUL", DB.fetch "integer" "INT_DIVIDES", DB.fetch "integer" "INT_DIVIDES_MOD0", DB.fetch "integer" "INT_DIVIDES_TRANS", DB.fetch "integer" "INT_DIVIDES_REFL", DB.fetch "integer" "INT_DIVIDES_1", DB.fetch "integer" "INT_DIVIDES_MUL", DB.fetch "integer" "INT_DIVIDES_0", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "tactictoe_thm_115"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039261

INT_DIVIDES_RSUB
proof length: 2
proof time: 0.003089
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.398555
  inferstep time: 0.297925
  node_find time: 0.004077
  node_crea time: 0.050556
    pred time: 0.011942
    thmpred time: 0.000001
    mc time: 0.039589
    inst time: 0.0
Proof found: BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss) [DB.fetch "integer" "INT_SUB_0", DB.fetch "integer" "INT_SUB_LE", DB.fetch "integer" "INT_SUB_LT", DB.fetch "integer" "INT_NEG_SUB", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_SUB_ADD", DB.fetch "integer" "INT_SUB_ADD2", DB.fetch "integer" "INT_SUB_REFL", DB.fetch "integer" "INT_LDISTRIB", DB.fetch "integer" "INT_MUL_ASSOC", DB.fetch "integer" "INT_RDISTRIB", DB.fetch "integer" "tactictoe_thm_10", DB.fetch "integer" "tactictoe_thm_43", DB.fetch "integer" "INT_LE_MUL", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "INT_LT_MUL"] THEN BasicProvers.SRW_TAC [] [DB.fetch "integer" "INT_DIVIDES_NEG", DB.fetch "integer" "INT_DIVIDES_LADD", DB.fetch "integer" "INT_DIVIDES_RADD", DB.fetch "integer" "INT_DIVIDES_LSUB", DB.fetch "integer" "INT_DIVIDES_MUL_BOTH", DB.fetch "integer" "INT_DIVIDES_LMUL", DB.fetch "integer" "INT_DIVIDES_RMUL", DB.fetch "integer" "INT_DIVIDES", DB.fetch "integer" "INT_DIVIDES_MOD0", DB.fetch "integer" "INT_DIVIDES_TRANS", DB.fetch "integer" "INT_DIVIDES_REFL", DB.fetch "integer" "INT_DIVIDES_1", DB.fetch "integer" "INT_DIVIDES_MUL", DB.fetch "integer" "INT_DIVIDES_0", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_ADD_RINV"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.045894

INT_EXP
Statistics
  infstep : 529
  nodes   : 113
  maxdepth: 5
Time: 10.002006
  inferstep time: 6.300214
  node_find time: 0.350502
  node_crea time: 2.070998
    pred time: 0.432994
    thmpred time: 0.000023
    mc time: 1.0943
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.107999

INT_EXP_EQ0
Statistics
  infstep : 296
  nodes   : 55
  maxdepth: 5
Time: 10.135155
  inferstep time: 7.172894
  node_find time: 0.191145
  node_crea time: 2.096369
    pred time: 0.669758
    thmpred time: 0.000021
    mc time: 0.949681
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.366243

INT_MUL_SIGN_CASES
Statistics
  infstep : 384
  nodes   : 99
  maxdepth: 5
Time: 10.11647
  inferstep time: 7.112037
  node_find time: 0.20717
  node_crea time: 2.067039
    pred time: 0.569832
    thmpred time: 0.000023
    mc time: 0.761495
    inst time: 0.0
Proof status: Time Out
Org tac number: 27
Original proof time: 0.0
Replaying proof: 1.480791

INT_EXP_NEG
Statistics
  infstep : 445
  nodes   : 85
  maxdepth: 6
Time: 10.118207
  inferstep time: 7.346303
  node_find time: 0.251698
  node_crea time: 1.496188
    pred time: 0.350258
    thmpred time: 0.000015
    mc time: 0.737221
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082688

INT_EXP_ADD_EXPONENTS
Statistics
  infstep : 428
  nodes   : 81
  maxdepth: 6
Time: 10.025552
  inferstep time: 7.399522
  node_find time: 0.286025
  node_crea time: 1.240805
    pred time: 0.382753
    thmpred time: 0.000028
    mc time: 0.510846
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.103528

INT_EXP_MULTIPLY_EXPONENTS
proof length: 3
proof time: 0.051103
Statistics
  infstep : 66
  nodes   : 16
  maxdepth: 4
Time: 1.822512
  inferstep time: 1.38493
  node_find time: 0.035156
  node_crea time: 0.220076
    pred time: 0.057041
    thmpred time: 0.000001
    mc time: 0.126081
    inst time: 0.0
Proof found: let
  fun INDUCT_TAC g = Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC g
in
  INDUCT_TAC
end THENL [metisTools.METIS_TAC [DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_EQ0", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", arithmeticTheory.MULT_CLAUSES, numeralTheory.numeral_distrib, arithmeticTheory.MULT_0, DB.fetch "integer" "INT_EXP", DB.fetch "integer" "INT_EXP_NEG", arithmeticTheory.EQ_MULT_LCANCEL, arithmeticTheory.EQ_MULT_RCANCEL, arithmeticTheory.LE_MULT_LCANCEL, arithmeticTheory.LE_MULT_RCANCEL, arithmeticTheory.LT_MULT_LCANCEL, arithmeticTheory.LT_MULT_RCANCEL, arithmeticTheory.MOD_COMMON_FACTOR, arithmeticTheory.DIV_P], BasicProvers.SRW_TAC [] [DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0", arithmeticTheory.MULT_SUC_EQ, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.MULT_SUC, DB.fetch "integer" "INT_EXP", DB.fetch "integer" "INT_EXP_NEG", arithmeticTheory.tactictoe_thm_11, arithmeticTheory.MULT_EXP_MONO, numeralTheory.numeral_distrib, arithmeticTheory.EXP, arithmeticTheory.MULT, arithmeticTheory.MULT_INCREASES, arithmeticTheory.DIV_EQ_X, arithmeticTheory.EQ_MULT_LCANCEL]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.070731

INT_EXP_MOD
Statistics
  infstep : 410
  nodes   : 102
  maxdepth: 6
Time: 10.127514
  inferstep time: 7.176414
  node_find time: 0.262408
  node_crea time: 1.651903
    pred time: 0.366855
    thmpred time: 0.000024
    mc time: 0.823214
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.070483

INT_EXP_SUBTRACT_EXPONENTS
Statistics
  infstep : 404
  nodes   : 89
  maxdepth: 5
Time: 10.003452
  inferstep time: 7.440495
  node_find time: 0.228377
  node_crea time: 1.386027
    pred time: 0.328813
    thmpred time: 0.000015
    mc time: 0.688667
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.635732

INT_MIN_LT
Statistics
  infstep : 582
  nodes   : 75
  maxdepth: 5
Time: 10.058828
  inferstep time: 7.508313
  node_find time: 0.319257
  node_crea time: 1.144632
    pred time: 0.28953
    thmpred time: 0.000019
    mc time: 0.446293
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.122383

INT_MAX_LT
proof length: 2
proof time: 0.021705
Statistics
  infstep : 40
  nodes   : 12
  maxdepth: 3
Time: 1.37367
  inferstep time: 1.09529
  node_find time: 0.021567
  node_crea time: 0.147826
    pred time: 0.049256
    thmpred time: 0.000004
    mc time: 0.060357
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "integer" "INT_MAX", DB.fetch "integer" "INT_LET_ADD2", DB.fetch "integer" "INT_LTE_TRANS", DB.fetch "integer" "INT_LET_TRANS", DB.fetch "integer" "tactictoe_thm_30", DB.fetch "integer" "INT_LTE_ADD2", DB.fetch "integer" "tactictoe_thm_29", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "tactictoe_thm_35", DB.fetch "integer" "INT_LT_TRANS", DB.fetch "integer" "INT_MIN_LT", DB.fetch "integer" "tactictoe_thm_160", DB.fetch "integer" "tactictoe_thm_108", DB.fetch "integer" "tactictoe_thm_162", DB.fetch "integer" "tactictoe_thm_23", DB.fetch "integer" "tactictoe_thm_77"] THEN BasicProvers.PROVE_TAC [DB.fetch "integer" "INT_LE_LADD", DB.fetch "integer" "INT_LE_RADD", DB.fetch "integer" "INT_LT_ADD2", DB.fetch "integer" "INT_LET_TRANS", DB.fetch "integer" "INT_LE_TRANS", DB.fetch "integer" "INT_LTE_TRANS", DB.fetch "integer" "INT_LET_ANTISYM", DB.fetch "integer" "INT_LE_ANTISYM", DB.fetch "integer" "INT_LTE_ANTSYM", DB.fetch "integer" "INT_LT_LE", DB.fetch "integer" "INT_LT_IMP_LE", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "INT_LET_TOTAL", DB.fetch "integer" "INT_LE_TOTAL", DB.fetch "integer" "INT_LTE_TOTAL"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.146934

INT_MIN_NUM
proof length: 2
proof time: 0.072388
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.271597
  inferstep time: 0.212621
  node_find time: 0.001937
  node_crea time: 0.031062
    pred time: 0.008269
    thmpred time: 0.000001
    mc time: 0.026658
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "integer" "INT_MIN", DB.fetch "integer" "INT_MIN_LT", arithmeticTheory.MIN_ASSOC, arithmeticTheory.MIN_DEF, arithmeticTheory.MIN_COMM, arithmeticTheory.MIN_LE, arithmeticTheory.MIN_LT, arithmeticTheory.MIN_MAX_EQ, arithmeticTheory.MIN_MAX_LT, arithmeticTheory.MIN_EQ_0, arithmeticTheory.MIN_MAX_LE, arithmeticTheory.MIN_MAX_PRED, arithmeticTheory.MIN_IDEM, arithmeticTheory.MIN_0, pred_setTheory.MIN_SET_THM, numeralTheory.numeral_MIN] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_LT_CALCULATE", arithmeticTheory.MIN_DEF, arithmeticTheory.MAX_DEF, numeralTheory.numeral_MIN, arithmeticTheory.SUB, DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "tactictoe_thm_75", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "INT_ADD", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_INJ"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013378

INT_MAX_NUM
proof length: 2
proof time: 0.071036
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.294234
  inferstep time: 0.213584
  node_find time: 0.002154
  node_crea time: 0.046344
    pred time: 0.020183
    thmpred time: 0.000002
    mc time: 0.028923
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "integer" "INT_MAX", DB.fetch "integer" "INT_MAX_LT", arithmeticTheory.MAX_ASSOC, arithmeticTheory.MAX_DEF, arithmeticTheory.MAX_COMM, arithmeticTheory.MAX_LE, arithmeticTheory.MAX_LT, arithmeticTheory.MIN_MAX_EQ, arithmeticTheory.MIN_MAX_LT, arithmeticTheory.MAX_EQ_0, arithmeticTheory.MIN_MAX_LE, arithmeticTheory.MIN_MAX_PRED, arithmeticTheory.MAX_IDEM, arithmeticTheory.MAX_0, pred_setTheory.MAX_SET_THM, numeralTheory.numeral_MAX] THEN metisTools.METIS_TAC [DB.fetch "integer" "INT_LT", DB.fetch "integer" "INT_LT_CALCULATE", arithmeticTheory.MAX_DEF, arithmeticTheory.MIN_DEF, numeralTheory.numeral_MAX, arithmeticTheory.SUB, DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_LT_NZ", DB.fetch "integer" "INT_NZ_IMP_LT", DB.fetch "integer" "tactictoe_thm_75", DB.fetch "integer" "NUM_POSINT_EX", DB.fetch "integer" "INT_ADD", DB.fetch "integer" "INT_DIV", DB.fetch "integer" "INT_LE", DB.fetch "integer" "INT_INJ"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013002

INT_LT_MONO
Statistics
  infstep : 304
  nodes   : 127
  maxdepth: 6
Time: 10.122589
  inferstep time: 6.66191
  node_find time: 0.18272
  node_crea time: 2.636428
    pred time: 0.76
    thmpred time: 0.000024
    mc time: 0.847475
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.117487

INT_LE_MONO
proof length: 4
proof time: 0.109761
Statistics
  infstep : 307
  nodes   : 81
  maxdepth: 5
Time: 7.937117
  inferstep time: 5.671269
  node_find time: 0.17976
  node_crea time: 1.331933
    pred time: 0.369962
    thmpred time: 0.000012
    mc time: 0.543747
    inst time: 0.0
Proof found: boolLib.SUBST1_TAC (HolKernel.SYM (HolKernel.SPEC (Parse.Term [HolKernel.QUOTE " (*#loc 1 17553*)y:int"]) (DB.fetch "integer" "INT_ADD_LINV"))) THEN simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [DB.fetch "integer" "INT_ADD_LINV", DB.fetch "integer" "tactictoe_thm_6", DB.fetch "integer" "INT_NEG_ADD", DB.fetch "integer" "int_sub", DB.fetch "integer" "INT_LT_ADDNEG", DB.fetch "integer" "INT_LT_ADDNEG2", DB.fetch "integer" "INT_ADD_RINV", DB.fetch "integer" "INT_NEG_GE0", DB.fetch "integer" "INT_LE_NEGR", DB.fetch "integer" "INT_LE_LADD", DB.fetch "integer" "INT_LE_RADD", DB.fetch "integer" "INT_LE_ADD2", DB.fetch "integer" "INT_LT_ADD1", DB.fetch "integer" "int_le", DB.fetch "integer" "INT_LE_LT", DB.fetch "integer" "INT_NOT_LE"] THEN
  boolLib.REPEAT boolLib.STRIP_TAC THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_LT_MONO", DB.fetch "integer" "INT_LT_MUL2", DB.fetch "integer" "INT_MUL_SIGN_CASES", DB.fetch "integer" "INT_DIV_FORALL_P", DB.fetch "integer" "INT_DIV_P", DB.fetch "integer" "INT_MOD_FORALL_P", DB.fetch "integer" "INT_MOD_P", DB.fetch "integer" "INT_MOD_UNIQUE", DB.fetch "integer" "INT_DIV_UNIQUE", DB.fetch "integer" "tactictoe_thm_103", DB.fetch "integer" "tactictoe_thm_101", DB.fetch "integer" "INT_POASQ", DB.fetch "integer" "tactictoe_thm_33", DB.fetch "integer" "tactictoe_thm_48", DB.fetch "integer" "INT_LT_MUL", DB.fetch "integer" "tactictoe_thm_65"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.172941

INFINITE_INT_UNIV
Statistics
  infstep : 478
  nodes   : 89
  maxdepth: 5
Time: 10.003657
  inferstep time: 7.577153
  node_find time: 0.316212
  node_crea time: 1.128955
    pred time: 0.294155
    thmpred time: 0.000051
    mc time: 0.388342
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.336444

INT_ADD_CALCULATE
Statistics
  infstep : 343
  nodes   : 117
  maxdepth: 5
Time: 10.002666
  inferstep time: 7.071808
  node_find time: 0.209519
  node_crea time: 1.935384
    pred time: 0.423542
    thmpred time: 0.000024
    mc time: 0.743491
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.065435

INT_ADD_REDUCE
proof length: 1
proof time: 0.000793
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 1
Time: 0.194574
  inferstep time: 0.141877
  node_find time: 0.002532
  node_crea time: 0.03218
    pred time: 0.008908
    thmpred time: 0.000001
    mc time: 0.013182
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ numeralTheory.numeral_distrib , DB.fetch "integer" "INT_ADD_CALCULATE" , DB.fetch "integer" "INT_ADD_LID" , DB.fetch "integer" "INT_NEGNEG" , DB.fetch "integer" "INT_NEG_0" , numeralTheory.numeral_add , numeralTheory.numeral_sub , DB.fetch "integer" "INT_ADD_RID" , numeralTheory.internal_mult_characterisation , numeralTheory.numeral_mult , numeralTheory.iZ , arithmeticTheory.SUB_LEFT_ADD , arithmeticTheory.SUB_LEFT_SUB , arithmeticTheory.SUB_RIGHT_ADD , numeralTheory.tactictoe_thm_35 , numeralTheory.tactictoe_thm_39 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.041013

INT_SUB_REDUCE
proof length: 1
proof time: 0.000675
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.178637
  inferstep time: 0.146098
  node_find time: 0.00164
  node_crea time: 0.017664
    pred time: 0.003783
    thmpred time: 0.000001
    mc time: 0.01097
    inst time: 0.0
Proof found: (boolLib.REWRITE_TAC [ DB.fetch "integer" "INT_ADD_REDUCE" , DB.fetch "integer" "INT_SUB_LZERO" , DB.fetch "integer" "INT_SUB_RZERO" , numeralTheory.numeral_distrib , arithmeticTheory.MODEQ_NUMERAL , numeralTheory.numeral_div2 , listTheory.GENLIST_NUMERALS , arithmeticTheory.NUMERAL_MULT_EQ_DIV , numeralTheory.numeral_MAX , numeralTheory.numeral_MIN , arithmeticTheory.NUMERAL_DEF , DB.fetch "integer" "INT_MOD_NEG_NUMERATOR" , DB.fetch "integer" "int_sub" , DB.fetch "integer" "INT_ADD_SUB2" , DB.fetch "integer" "INT_SUB_CALCULATE" , DB.fetch "integer" "INT_SUB_RNEG" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013422

INT_MUL_REDUCE
proof length: 1
proof time: 0.00209
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.195602
  inferstep time: 0.14977
  node_find time: 0.001763
  node_crea time: 0.025312
    pred time: 0.00491
    thmpred time: 0.0
    mc time: 0.020477
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "integer" "INT_MUL_LZERO" , DB.fetch "integer" "INT_ADD_REDUCE" , DB.fetch "integer" "INT_SUB_REDUCE" , numeralTheory.numeral_distrib , DB.fetch "integer" "INT_MUL_RZERO" , arithmeticTheory.NUMERAL_MULT_EQ_DIV , arithmeticTheory.MODEQ_NUMERAL , numeralTheory.numeral_div2 , listTheory.GENLIST_NUMERALS , numeralTheory.numeral_MAX , numeralTheory.numeral_MIN , arithmeticTheory.NUMERAL_DEF , DB.fetch "integer" "INT_MUL_CALCULATE" , DB.fetch "integer" "INT_MUL_EQ_1" , DB.fetch "integer" "INT_MUL" , DB.fetch "integer" "INT_MUL_DIV" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.026023
Replaying proof: 0.000634

INT_DIV_REDUCE
Statistics
  infstep : 295
  nodes   : 90
  maxdepth: 5
Time: 10.047614
  inferstep time: 6.999338
  node_find time: 0.168948
  node_crea time: 1.960919
    pred time: 0.460367
    thmpred time: 0.000018
    mc time: 1.02203
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.263089

INT_QUOT_REDUCE
Statistics
  infstep : 332
  nodes   : 90
  maxdepth: 4
Time: 10.013076
  inferstep time: 7.134774
  node_find time: 0.195577
  node_crea time: 1.729806
    pred time: 0.48518
    thmpred time: 0.000021
    mc time: 0.888176
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.027036

INT_MOD_REDUCE
Statistics
  infstep : 269
  nodes   : 76
  maxdepth: 5
Time: 10.013679
  inferstep time: 7.063814
  node_find time: 0.166285
  node_crea time: 1.912877
    pred time: 0.548612
    thmpred time: 0.000015
    mc time: 0.851352
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.097854

INT_REM_REDUCE
Statistics
  infstep : 304
  nodes   : 85
  maxdepth: 5
Time: 10.02313
  inferstep time: 6.412788
  node_find time: 0.212461
  node_crea time: 2.520208
    pred time: 0.705137
    thmpred time: 0.000023
    mc time: 1.076941
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.080669
Replaying proof: 0.000267
Replaying proof: 0.000284

INT_EXP_CALCULATE
proof length: 7
proof time: 0.014389
Statistics
  infstep : 197
  nodes   : 79
  maxdepth: 5
Time: 8.817549
  inferstep time: 5.905951
  node_find time: 0.140192
  node_crea time: 1.928884
    pred time: 0.407175
    thmpred time: 0.000025
    mc time: 1.171074
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "integer" "INT_EXP", arithmeticTheory.EXP_SUB_NUMERAL, DB.fetch "integer" "INT_EXP_NEG", DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_MOD", DB.fetch "integer" "INT_EXP_SUBTRACT_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_MULTIPLY_EXPONENTS", numeralTheory.numeral_distrib, DB.fetch "integer" "INT_DIV_REDUCE", numeralTheory.TWO_EXP_THM, DB.fetch "integer" "INT_MOD_REDUCE", DB.fetch "integer" "INT_QUOT_REDUCE", DB.fetch "integer" "INT_REM_REDUCE", DB.fetch "integer" "INT_ADD_CALCULATE"] THEN (simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "arithmetic" "MODEQ_NONZERO_MODEQUALITY"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "MOD_MOD"), prim_recTheory.LESS_0] THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [arithmeticTheory.EVEN, arithmeticTheory.ODD, boolLib.GSYM arithmeticTheory.EVEN_ODD, boolLib.GSYM arithmeticTheory.ODD_EVEN, (DB.fetch "integer" "int_exp"), arithmeticTheory.EXP, boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEGNEG")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "integer" "INT_EXP_NEG", DB.fetch "integer" "INT_MUL", arithmeticTheory.EVEN_EXISTS, arithmeticTheory.ODD_EXISTS, arithmeticTheory.TIMES2, DB.fetch "integer" "INT_EXP", DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_MULTIPLY_EXPONENTS", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_MOD", DB.fetch "integer" "INT_EXP_SUBTRACT_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0", DB.fetch "integer" "tactictoe_thm_87", DB.fetch "integer" "tactictoe_thm_88", DB.fetch "integer" "INT_ADD_CALCULATE", DB.fetch "integer" "INT_LT_CALCULATE"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040451

INT_EXP_REDUCE
proof length: 6
proof time: 0.089916
Statistics
  infstep : 43
  nodes   : 23
  maxdepth: 4
Time: 2.888111
  inferstep time: 2.274123
  node_find time: 0.024683
  node_crea time: 0.414954
    pred time: 0.106256
    thmpred time: 0.000012
    mc time: 0.208525
    inst time: 0.0
Proof found: simpLib.SIMP_TAC BasicProvers.bool_ss [(DB.fetch "arithmetic" "NUMERAL_DEF"), (DB.fetch "arithmetic" "BIT1"), (DB.fetch "arithmetic" "BIT2"), (DB.fetch "arithmetic" "ALT_ZERO"), (DB.fetch "arithmetic" "ADD_CLAUSES"), (DB.fetch "arithmetic" "SUB_MONO_EQ"), (DB.fetch "arithmetic" "SUB_0")] THEN BasicProvers.SRW_TAC [] [DB.fetch "integer" "INT_EXP_CALCULATE", DB.fetch "integer" "INT_EXP", DB.fetch "integer" "INT_EXP_NEG", DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_MOD", DB.fetch "integer" "INT_EXP_SUBTRACT_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0", DB.fetch "integer" "INT_EXP_MULTIPLY_EXPONENTS", numeralTheory.tactictoe_thm_2, numeralTheory.tactictoe_thm_3, numeralTheory.numeral_distrib, DB.fetch "integer" "INT_NUM_CASES", DB.fetch "integer" "tactictoe_thm_78", DB.fetch "integer" "tactictoe_thm_79", DB.fetch "integer" "INT_LT_CALCULATE"] THENL
  [simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [arithmeticTheory.EVEN, arithmeticTheory.ODD, boolLib.GSYM arithmeticTheory.EVEN_ODD, boolLib.GSYM arithmeticTheory.ODD_EVEN, (DB.fetch "integer" "int_exp"), arithmeticTheory.EXP, boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEGNEG")] THEN
  metisTools.METIS_TAC [DB.fetch "integer" "INT_EXP_CALCULATE", DB.fetch "integer" "INT_EXP_NEG", DB.fetch "integer" "INT_MUL", ind_typeTheory.NUMPAIR, arithmeticTheory.EVEN_EXISTS, arithmeticTheory.ODD_EXISTS, arithmeticTheory.TIMES2, arithmeticTheory.DOUBLE_LT, DB.fetch "integer" "INT_EXP", pred_setTheory.tactictoe_thm_72, DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_MULTIPLY_EXPONENTS", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_MOD", DB.fetch "integer" "INT_EXP_SUBTRACT_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0"],
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [arithmeticTheory.EVEN, arithmeticTheory.ODD, boolLib.GSYM arithmeticTheory.EVEN_ODD, boolLib.GSYM arithmeticTheory.ODD_EVEN, (DB.fetch "integer" "int_exp"), arithmeticTheory.EXP, boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEGNEG")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "integer" "INT_EXP_CALCULATE", DB.fetch "integer" "INT_EXP_NEG", DB.fetch "integer" "INT_MUL", ind_typeTheory.NUMPAIR, arithmeticTheory.EVEN_EXISTS, arithmeticTheory.ODD_EXISTS, arithmeticTheory.TIMES2, arithmeticTheory.DOUBLE_LT, DB.fetch "integer" "INT_EXP", pred_setTheory.tactictoe_thm_72, DB.fetch "integer" "int_exp", DB.fetch "integer" "INT_EXP_MULTIPLY_EXPONENTS", DB.fetch "integer" "INT_EXP_ADD_EXPONENTS", DB.fetch "integer" "INT_EXP_MOD", DB.fetch "integer" "INT_EXP_SUBTRACT_EXPONENTS", DB.fetch "integer" "INT_EXP_EQ0"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013304

INT_LT_REDUCE
proof length: 2
proof time: 0.012263
Statistics
  infstep : 13
  nodes   : 8
  maxdepth: 2
Time: 0.824488
  inferstep time: 0.607377
  node_find time: 0.007596
  node_crea time: 0.145262
    pred time: 0.0311
    thmpred time: 0.000002
    mc time: 0.084462
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_MOD_CALCULATE"), arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.NUMERAL_DEF, arithmeticTheory.ALT_ZERO, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "int_mod"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_DIV_0"), (DB.fetch "integer" "INT_MUL_LZERO"), (DB.fetch "integer" "INT_SUB_RZERO"), (DB.fetch "integer" "INT_NEG_SUB"), (DB.fetch "integer" "INT_SUB_RNEG")] THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_LT"), boolLib.GSYM boolTheory.AND_IMP_INTRO, (DB.fetch "integer" "INT_MUL_RZERO"), (DB.fetch "integer" "INT_ABS_NUM"), (DB.fetch "integer" "INT_ADD_LID"), (DB.fetch "integer" "INT_ABS_NEG"), (DB.fetch "integer" "INT_LE_REFL"), (DB.fetch "integer" "tactictoe_thm_114"), (DB.fetch "integer" "INT_NEGNEG"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_RMUL"), boolLib.GSYM (DB.fetch "integer" "INT_NEG_LMUL"), (DB.fetch "integer" "INT_MUL"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_ADD_LID"), (DB.fetch "integer" "INT_ABS_LT0"), (DB.fetch "integer" "INT_ADD"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "INT_LE"), (DB.fetch "integer" "INT_QUOT"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_LT_CALCULATE"), (DB.fetch "integer" "INT_EQ_NEG"), (DB.fetch "integer" "INT_QUOT_NEG"), arithmeticTheory.LESS_DIV_EQ_ZERO, (DB.fetch "integer" "INT_NEG_LE0"), (DB.fetch "integer" "tactictoe_thm_115"), (DB.fetch "integer" "tactictoe_thm_116"), (DB.fetch "integer" "INT_ADD_RINV"), (DB.fetch "integer" "INT_ADD_LINV"), (DB.fetch "integer" "tactictoe_thm_117"), (DB.fetch "integer" "tactictoe_thm_118"), (DB.fetch "integer" "tactictoe_thm_119")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04717

INT_LE_REDUCE
proof length: 2
proof time: 0.013334
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.41397
  inferstep time: 0.320262
  node_find time: 0.004111
  node_crea time: 0.053276
    pred time: 0.011699
    thmpred time: 0.000001
    mc time: 0.034034
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_MOD_CALCULATE"), arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.NUMERAL_DEF, arithmeticTheory.ALT_ZERO, arithmeticTheory.ZERO_MOD, (DB.fetch "integer" "int_mod"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_DIV_0"), (DB.fetch "integer" "INT_MUL_LZERO"), (DB.fetch "integer" "INT_SUB_RZERO"), (DB.fetch "integer" "INT_NEG_SUB"), (DB.fetch "integer" "INT_SUB_RNEG")] THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.old_ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close pairSimps.PAIR_ss) [(DB.fetch "integer" "INT_ABS_NUM"), (DB.fetch "integer" "INT_ABS_NEG"), (DB.fetch "integer" "INT_NEG_LT0"), (DB.fetch "integer" "INT_NEG_0"), (DB.fetch "integer" "INT_NEGNEG"), (DB.fetch "integer" "INT_NEG_GT0"), (DB.fetch "integer" "int_le"), (DB.fetch "integer" "INT_LT_CALCULATE")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.078217

INT_EQ_REDUCE
proof length: 2
proof time: 0.022725
Statistics
  infstep : 15
  nodes   : 7
  maxdepth: 2
Time: 0.875058
  inferstep time: 0.664094
  node_find time: 0.010696
  node_crea time: 0.140627
    pred time: 0.041698
    thmpred time: 0.000003
    mc time: 0.057995
    inst time: 0.0
Proof found: simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, (DB.fetch "integer" "INT_LE_CALCULATE"), (DB.fetch "integer" "INT_LT_CALCULATE"), (DB.fetch "integer" "tactictoe_thm_170"), (DB.fetch "integer" "INT_INJ"), (DB.fetch "integer" "INT_EQ_NEG"), arithmeticTheory.BIT1, arithmeticTheory.BIT2] THEN boolLib.CONV_TAC numLib.ARITH_CONV
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.050951

INT_DIVIDES_REDUCE
Statistics
  infstep : 211
  nodes   : 77
  maxdepth: 5
Time: 10.08485
  inferstep time: 7.080479
  node_find time: 0.161358
  node_crea time: 2.130459
    pred time: 0.576703
    thmpred time: 0.000018
    mc time: 0.727897
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.146127
Bad stac: 22
