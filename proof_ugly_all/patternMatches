Replaying proof: 0.00066
Replaying proof: 0.001186

some_var_bool_T
proof length: 2
proof time: 0.029196
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.155644
  inferstep time: 0.141993
  node_find time: 0.000048
  node_crea time: 0.010301
    pred time: 0.004375
    thmpred time: 0.0
    mc time: 0.006867
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [optionTheory.some_EQ, optionTheory.some_def, optionTheory.some_intro, optionTheory.some_elim, quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM, optionTheory.some_F, quantHeuristicsTheory.GUESS_RULES_BOOL, quantHeuristicsTheory.GUESSES_UEXISTS_THM4, quantHeuristicsTheory.GUESS_RULES_CONSTANT_EXISTS, quantHeuristicsTheory.GUESS_RULES_CONSTANT_FORALL, ConseqConvTheory.ASM_MARKER_DEF, combinTheory.FAIL_DEF, combinTheory.K_DEF, listTheory.LIST_BIND_ID, listTheory.MAP_ID, oneTheory.tactictoe_thm_0] THEN metisTools.METIS_TAC [optionTheory.some_def, pred_setTheory.LINV_OPT_def, ind_typeTheory.ZBOT, oneTheory.one_DEF, quantHeuristicsTheory.GUESS_RULES_BOOL, ConseqConvTheory.ASM_MARKER_DEF, combinTheory.FAIL_DEF, combinTheory.K_DEF, listTheory.LIST_BIND_ID, listTheory.MAP_ID, oneTheory.tactictoe_thm_0, pred_setTheory.IMAGE_ID, prim_recTheory.PRIM_REC_FUN, quantHeuristicsTheory.GUESS_RULES_EQUATION_EXISTS_GAP, quantHeuristicsTheory.GUESS_RULES_EQUATION_EXISTS_POINT, rich_listTheory.MAP_FST_funs]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.164626

some_var_bool_F
proof length: 2
proof time: 0.097675
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.230148
  inferstep time: 0.210395
  node_find time: 0.000078
  node_crea time: 0.015383
    pred time: 0.004997
    thmpred time: 0.0
    mc time: 0.00991
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [optionTheory.some_F, optionTheory.some_intro, optionTheory.some_elim, optionTheory.some_def, optionTheory.some_EQ, DB.fetch "patternMatches" "some_var_bool_T", quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM, sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8, sumTheory.INR_DEF, sumTheory.tactictoe_thm_4, sumTheory.tactictoe_thm_7, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_NEG, quantHeuristicsTheory.SIMPLE_GUESS_FORALL_NEG, optionTheory.option_CLAUSES, optionTheory.IS_SOME_DEF] THEN metisTools.METIS_TAC [sumTheory.IS_SUM_REP, sumTheory.tactictoe_thm_8, sumTheory.INR_DEF, sumTheory.tactictoe_thm_4, sumTheory.tactictoe_thm_7, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_NEG, quantHeuristicsTheory.SIMPLE_GUESS_FORALL_NEG, optionTheory.some_def, pred_setTheory.LINV_OPT_def, quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM, optionTheory.some_intro, optionTheory.some_elim, optionTheory.NOT_NONE_SOME, optionTheory.option_CLAUSES, optionTheory.NOT_SOME_NONE, optionTheory.NOT_IS_SOME_EQ_NONE]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.15635
Replaying proof: 0.000468
Replaying proof: 0.0007
Replaying proof: 0.000857
Replaying proof: 0.002059
Replaying proof: 0.001901

PMATCH_CONG
proof length: 1
proof time: 0.006649
Statistics
  infstep : 4
  nodes   : 2
  maxdepth: 1
Time: 0.144102
  inferstep time: 0.131836
  node_find time: 0.000088
  node_crea time: 0.008463
    pred time: 0.002525
    thmpred time: 0.0
    mc time: 0.007516
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , optionTheory.option_case_cong , listTheory.list_case_cong , arithmeticTheory.num_case_cong , optionTheory.tactictoe_thm_0 , optionTheory.tactictoe_thm_1 , arithmeticTheory.tactictoe_thm_21 , numTheory.tactictoe_thm_2 , numTheory.tactictoe_thm_6 , optionTheory.option_REP_ABS_DEF , arithmeticTheory.DIV_P , arithmeticTheory.DIV_P_UNIV , arithmeticTheory.MOD_P , arithmeticTheory.MOD_P_UNIV , ind_typeTheory.ZRECSPACE_def ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00566
Replaying proof: 0.025783

PMATCH_ROW_EQ_NONE
proof length: 1
proof time: 0.002883
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.121473
  inferstep time: 0.110662
  node_find time: 0.000044
  node_crea time: 0.007818
    pred time: 0.002595
    thmpred time: 0.0
    mc time: 0.006598
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ numSimps.ARITH_ss ] [ DB.fetch "patternMatches" "PMATCH_ROW_def" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX" , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_COND_def" , listTheory.INDEX_FIND_def , quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM , optionTheory.OPTION_BIND_EQUALS_OPTION , optionTheory.NOT_NONE_SOME , optionTheory.NOT_IS_SOME_EQ_NONE , optionTheory.NOT_SOME_NONE , optionTheory.option_CLAUSES , DB.fetch "patternMatches" "tactictoe_thm_5" , quantHeuristicsTheory.IS_SOME_EQ_NOT_NONE , optionTheory.IF_EQUALS_OPTION , optionTheory.IF_NONE_EQUALS_OPTION , optionTheory.some_elim ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00716

PMATCH_ROW_EQ_SOME
proof length: 3
proof time: 0.084602
Statistics
  infstep : 93
  nodes   : 10
  maxdepth: 3
Time: 1.103116
  inferstep time: 1.001341
  node_find time: 0.001975
  node_crea time: 0.08152
    pred time: 0.02773
    thmpred time: 0.000004
    mc time: 0.046171
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_ROW_def", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_COND_def", quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM, optionTheory.OPTION_BIND_EQUALS_OPTION, optionTheory.OPTION_MAP_EQ_SOME, optionTheory.OPTREL_def, DB.fetch "patternMatches" "tactictoe_thm_2", optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION, optionTheory.some_elim, optionTheory.option_Axiom, DB.fetch "patternMatches" "tactictoe_thm_4", optionTheory.OPTION_MAP2_SOME, optionTheory.EXISTS_OPTION] THEN simpLib.SIMP_TAC numLib.std_ss [(DB.fetch "quantHeuristics" "SIMPLE_GUESS_EXISTS_def"), optionTheory.some_def] THEN
  metisTools.METIS_TAC [pred_setTheory.LINV_OPT_def, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_FUN, quantHeuristicsTheory.GUESS_RULES_EQUIV, quantHeuristicsTheory.GUESS_RULES_EQUATION_EXISTS_POINT, quantHeuristicsTheory.GUESS_RULES_EQUATION_FORALL_POINT, quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, optionTheory.some_def, relationTheory.the_fun_def, ind_typeTheory.ZBOT, DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_CONG"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.159912

PMATCH_COND_SELECT_UNIQUE
proof length: 2
proof time: 0.089311
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.279015
  inferstep time: 0.239515
  node_find time: 0.000105
  node_crea time: 0.033714
    pred time: 0.0119
    thmpred time: 0.0
    mc time: 0.019076
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_ROW_def", DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_ROW_COND_def", pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046611

PMATCH_ROW_COND_DEF_GSYM
proof length: 2
proof time: 0.011053
Statistics
  infstep : 6
  nodes   : 3
  maxdepth: 2
Time: 0.243418
  inferstep time: 0.225523
  node_find time: 0.000217
  node_crea time: 0.012299
    pred time: 0.004462
    thmpred time: 0.000001
    mc time: 0.010238
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_ROW_COND_def", DB.fetch "patternMatches" "PMATCH_ROW_def", DB.fetch "patternMatches" "PMATCH_COND_SELECT_UNIQUE", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", arithmeticTheory.num_case_cong, arithmeticTheory.num_case_def, combinTheory.K_o_THM, listTheory.SET_TO_LIST_IND, listTheory.list_case_cong, listTheory.list_case_def, optionTheory.OPTION_MAP2_SOME, optionTheory.option_CLAUSES, optionTheory.option_case_def, optionTheory.option_case_cong] THEN metisLib.METIS_TAC [(DB.fetch "option" "option_nchotomy")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031545

PMATCH_EVAL
proof length: 1
proof time: 0.006882
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.130872
  inferstep time: 0.118125
  node_find time: 0.000045
  node_crea time: 0.008886
    pred time: 0.002599
    thmpred time: 0.0
    mc time: 0.008208
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_COND_SELECT_UNIQUE" , DB.fetch "patternMatches" "PMATCH_ROW_def" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_COND_def" , DB.fetch "patternMatches" "PMATCH_ROW_COND_DEF_GSYM" , DB.fetch "patternMatches" "PMATCH_INCOMPLETE_def" , quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM , optionTheory.some_def , pred_setTheory.LINV_OPT_def , listTheory.SET_TO_LIST_primitive_def , pred_setTheory.tactictoe_thm_44 ])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.162693

PMATCH_EVAL_MATCH
proof length: 1
proof time: 0.006501
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.292514
  inferstep time: 0.118698
  node_find time: 0.000091
  node_crea time: 0.165764
    pred time: 0.145292
    thmpred time: 0.0
    mc time: 0.023106
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_ROW_def" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME" , DB.fetch "patternMatches" "PMATCH_COND_SELECT_UNIQUE" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_COND_def" , DB.fetch "patternMatches" "PMATCH_ROW_COND_DEF_GSYM" , optionTheory.some_def , pred_setTheory.LINV_OPT_def , quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM , pred_setTheory.tactictoe_thm_44 , pred_setTheory.tactictoe_thm_49 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008849

PMATCH_EXTEND_BASE
proof length: 1
proof time: 0.035397
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.091374
  inferstep time: 0.076985
  node_find time: 0.000038
  node_crea time: 0.010745
    pred time: 0.003723
    thmpred time: 0.0
    mc time: 0.008612
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , listTheory.INDEX_FIND_def , listTheory.OPT_MMAP_def , listTheory.splitAtPki_EQN , listTheory.FIND_def , listTheory.INDEX_OF_def , listTheory.LUPDATE_SOME_MAP , optionTheory.option_nchotomy , optionTheory.option_case_def , optionTheory.OPTION_MAP_EQ_SOME , optionTheory.some_def , DB.fetch "patternMatches" "PMATCH_ROW_def" , DB.fetch "patternMatches" "tactictoe_thm_7"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003544

PMATCH_EXTEND_BOTH
proof length: 1
proof time: 0.001574
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.13821
  inferstep time: 0.117145
  node_find time: 0.000089
  node_crea time: 0.016541
    pred time: 0.006425
    thmpred time: 0.000001
    mc time: 0.010582
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_EXTEND_BASE" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , listTheory.INDEX_FIND_def , listTheory.OPT_MMAP_def , listTheory.FILTER_COND_REWRITE , listTheory.FORALL_LIST , listTheory.LENGTH_EQ_CONS , listTheory.LIST_REL_def , listTheory.list_case_cong , rich_listTheory.tactictoe_thm_2 , rich_listTheory.tactictoe_thm_39 , listTheory.list_INDUCT0 , listTheory.list_induction ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.02723

PMATCH_EXTEND_BOTH_ID
proof length: 1
proof time: 0.004592
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.141652
  inferstep time: 0.115403
  node_find time: 0.000089
  node_crea time: 0.015643
    pred time: 0.004475
    thmpred time: 0.0
    mc time: 0.01938
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_EXTEND_BASE" , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE" , optionTheory.option_REP_ABS_DEF , optionTheory.tactictoe_thm_0 , optionTheory.tactictoe_thm_1 , listTheory.list_case_cong , listTheory.FOLDL2_ind , listTheory.MAP2_ind ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004881

PMATCH_EXTEND_OLD
proof length: 1
proof time: 0.117526
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.120529
  inferstep time: 0.107553
  node_find time: 0.00003
  node_crea time: 0.008551
    pred time: 0.002925
    thmpred time: 0.000001
    mc time: 0.007836
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , DB.fetch "patternMatches" "PMATCH_EXTEND_BASE" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , listTheory.INDEX_FIND_def , optionTheory.option_CLAUSES , optionTheory.option_case_cong , quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM , optionTheory.option_induction , optionTheory.some_elim , optionTheory.some_intro , whileTheory.OLEAST_INTRO , optionTheory.option_case_def])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006451

PMATCH_ROW_REMOVE_FUN
Statistics
  infstep : 823
  nodes   : 106
  maxdepth: 5
Time: 10.017955
  inferstep time: 7.464337
  node_find time: 0.072627
  node_crea time: 2.353477
    pred time: 0.569906
    thmpred time: 0.000022
    mc time: 0.853097
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.152085

PMATCH_ROW_EXTEND_INPUT
Statistics
  infstep : 419
  nodes   : 85
  maxdepth: 5
Time: 10.019923
  inferstep time: 8.141426
  node_find time: 0.035318
  node_crea time: 1.780184
    pred time: 0.399606
    thmpred time: 0.000017
    mc time: 0.722726
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.377708

PMATCH_ROW_REMOVE_FUN_VAR
Statistics
  infstep : 418
  nodes   : 110
  maxdepth: 6
Time: 10.013434
  inferstep time: 7.09784
  node_find time: 0.045661
  node_crea time: 2.783889
    pred time: 0.582924
    thmpred time: 0.00003
    mc time: 1.074318
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.385582

PMATCH_EQUIV_ROWS_EQUIV_EXPAND
Statistics
  infstep : 490
  nodes   : 125
  maxdepth: 6
Time: 10.017167
  inferstep time: 7.308483
  node_find time: 0.053596
  node_crea time: 2.5609
    pred time: 0.75339
    thmpred time: 0.000027
    mc time: 0.819801
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.272835

PMATCH_EQUIV_ROWS_is_equiv_1
proof length: 1
proof time: 0.00075
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.119802
  inferstep time: 0.107157
  node_find time: 0.000083
  node_crea time: 0.009116
    pred time: 0.003097
    thmpred time: 0.0
    mc time: 0.00735
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC numLib.std_ss [ ( DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def" ) , boolLib.FUN_EQ_THM ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007205

PMATCH_EQUIV_ROWS_is_equiv_2
proof length: 2
proof time: 0.011906
Statistics
  infstep : 26
  nodes   : 8
  maxdepth: 2
Time: 0.525863
  inferstep time: 0.445848
  node_find time: 0.001096
  node_crea time: 0.069395
    pred time: 0.024454
    thmpred time: 0.0
    mc time: 0.02648
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_EQUIV_EXPAND", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_1", DB.fetch "patternMatches" "PMATCH_CONG", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID", DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", optionTheory.option_case_def, DB.fetch "patternMatches" "PMATCH_ROW_def", optionTheory.option_CLAUSES, optionTheory.option_case_cong, DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_EXTEND_INPUT", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR"] THEN BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.083334

PMATCH_EQUIV_ROWS_is_equiv_3
proof length: 1
proof time: 0.006171
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.124346
  inferstep time: 0.113785
  node_find time: 0.000094
  node_crea time: 0.007563
    pred time: 0.002421
    thmpred time: 0.000001
    mc time: 0.005844
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_2" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_EQUIV_EXPAND" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_1" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , optionTheory.option_CLAUSES , optionTheory.option_case_cong , DB.fetch "patternMatches" "PMATCH_ROW_CONG" , DB.fetch "patternMatches" "PMATCH_ROW_EXTEND_INPUT" , DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN" , DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR" , quantHeuristicsTheory.SIMPLE_GUESS_SOME_THM ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009574

PMATCH_EQUIV_ROWS_MATCH
proof length: 1
proof time: 0.124354
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.108892
  inferstep time: 0.098191
  node_find time: 0.000047
  node_crea time: 0.00753
    pred time: 0.002695
    thmpred time: 0.0
    mc time: 0.006104
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_3" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_EQUIV_EXPAND" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_2" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_1" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH" , DB.fetch "patternMatches" "PMATCH_EXTEND_OLD" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_EXTEND_BASE" , optionTheory.option_CLAUSES , optionTheory.option_case_cong , DB.fetch "patternMatches" "PMATCH_ROW_CONG"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006723

PMATCH_APPEND_SEM
Statistics
  infstep : 492
  nodes   : 121
  maxdepth: 6
Time: 10.010456
  inferstep time: 7.814717
  node_find time: 0.040823
  node_crea time: 2.066814
    pred time: 0.57077
    thmpred time: 0.00004
    mc time: 0.74899
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.257628

PMATCH_EQUIV_APPEND
proof length: 3
proof time: 0.040943
Statistics
  infstep : 194
  nodes   : 48
  maxdepth: 5
Time: 3.237793
  inferstep time: 2.442756
  node_find time: 0.011349
  node_crea time: 0.737683
    pred time: 0.166681
    thmpred time: 0.000007
    mc time: 0.216247
    inst time: 0.0
Proof found: simpLib.SIMP_TAC numLib.std_ss [(DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def"), boolLib.FUN_EQ_THM] THEN BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_APPEND_SEM", listTheory.MEM_APPEND, DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def", listTheory.LIST_TO_SET_APPEND, listTheory.UNION_APPEND, DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_CONG", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_MATCH", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", optionTheory.option_CLAUSES, DB.fetch "patternMatches" "tactictoe_thm_9", DB.fetch "patternMatches" "tactictoe_thm_11", DB.fetch "patternMatches" "tactictoe_thm_8", DB.fetch "patternMatches" "tactictoe_thm_10"] THEN
  simpLib.ASM_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "PMATCH_def"), boolLib.RIGHT_AND_OVER_OR, boolLib.EXISTS_OR_THM]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036711

PMATCH_EQUIV_ROWS_CONS_NONE
proof length: 2
proof time: 0.00727
Statistics
  infstep : 11
  nodes   : 5
  maxdepth: 2
Time: 0.53254
  inferstep time: 0.474823
  node_find time: 0.000669
  node_crea time: 0.042564
    pred time: 0.014796
    thmpred time: 0.000002
    mc time: 0.0267
    inst time: 0.0
Proof found: simpLib.SIMP_TAC numLib.std_ss [(DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def"), boolLib.FUN_EQ_THM] THEN simpLib.ASM_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "PMATCH_def"), boolLib.RIGHT_AND_OVER_OR, boolLib.EXISTS_OR_THM]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011281

PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV
Statistics
  infstep : 1803
  nodes   : 153
  maxdepth: 5
Time: 10.008132
  inferstep time: 7.138865
  node_find time: 0.211565
  node_crea time: 2.314091
    pred time: 0.451709
    thmpred time: 0.00002
    mc time: 1.019174
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.353046

PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS
proof length: 1
proof time: 0.00153
Statistics
  infstep : 6
  nodes   : 3
  maxdepth: 1
Time: 0.157032
  inferstep time: 0.119896
  node_find time: 0.00033
  node_crea time: 0.03167
    pred time: 0.017539
    thmpred time: 0.0
    mc time: 0.013116
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV" , rich_listTheory.SNOC_EL_TAKE , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def" , DB.fetch "patternMatches" "PMATCH_APPEND_SEM" , rich_listTheory.TAKE , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_MATCH" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH" , DB.fetch "patternMatches" "PMATCH_EXTEND_OLD" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_1" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_EXTEND_BASE" ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.077278

PMATCH_ROWS_DROP_REDUNDANT
Statistics
  infstep : 854
  nodes   : 158
  maxdepth: 6
Time: 10.000301
  inferstep time: 7.270461
  node_find time: 0.125848
  node_crea time: 2.386395
    pred time: 0.604894
    thmpred time: 0.000025
    mc time: 1.003256
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.26998

PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS
Statistics
  infstep : 279
  nodes   : 112
  maxdepth: 5
Time: 10.034525
  inferstep time: 6.947208
  node_find time: 0.036061
  node_crea time: 2.968282
    pred time: 0.833717
    thmpred time: 0.00003
    mc time: 1.070187
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.179587

PMATCH_ROWS_DROP_SUBSUMED
Statistics
  infstep : 284
  nodes   : 106
  maxdepth: 5
Time: 10.022279
  inferstep time: 7.014803
  node_find time: 0.037153
  node_crea time: 2.826499
    pred time: 0.941244
    thmpred time: 0.000027
    mc time: 0.787865
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.473803

PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS
Statistics
  infstep : 315
  nodes   : 107
  maxdepth: 6
Time: 10.065754
  inferstep time: 7.155944
  node_find time: 0.040858
  node_crea time: 2.719666
    pred time: 0.773925
    thmpred time: 0.000029
    mc time: 0.785499
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.551822

PMATCH_REMOVE_ARB
Statistics
  infstep : 495
  nodes   : 125
  maxdepth: 6
Time: 10.100172
  inferstep time: 6.838549
  node_find time: 0.073905
  node_crea time: 3.028747
    pred time: 0.915496
    thmpred time: 0.000024
    mc time: 1.111721
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063766

PMATCH_INTRO_CATCHALL
proof length: 1
proof time: 0.017764
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.147844
  inferstep time: 0.119744
  node_find time: 0.000217
  node_crea time: 0.024001
    pred time: 0.008991
    thmpred time: 0.0
    mc time: 0.012066
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_REMOVE_ARB" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_MATCH" , DB.fetch "patternMatches" "PMATCH_APPEND_SEM" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH" , DB.fetch "patternMatches" "PMATCH_EXTEND_OLD" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004643

PMATCH_REMOVE_ARB_NO_OVERLAP
Statistics
  infstep : 488
  nodes   : 117
  maxdepth: 5
Time: 10.09614
  inferstep time: 7.566168
  node_find time: 0.066819
  node_crea time: 2.268385
    pred time: 0.613567
    thmpred time: 0.000021
    mc time: 0.697092
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.114345

PMATCH_ROW_REDUNDANT_NIL
proof length: 1
proof time: 0.005552
Statistics
  infstep : 12
  nodes   : 4
  maxdepth: 2
Time: 0.318604
  inferstep time: 0.274805
  node_find time: 0.001095
  node_crea time: 0.029816
    pred time: 0.009989
    thmpred time: 0.000002
    mc time: 0.021206
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def" , quantHeuristicsTheory.GUESS_POINT_THM , quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM , optionTheory.option_CLAUSES , quantHeuristicsTheory.GUESS_FORALL_POINT_THM , whileTheory.OLEAST_EQNS , optionTheory.IS_SOME_DEF , optionTheory.IS_NONE_DEF , DB.fetch "patternMatches" "some_var_bool_F" , optionTheory.OPTION_GUARD_def , optionTheory.some_F , listTheory.EXISTS_DEF , listTheory.LIST_TO_SET_DEF , listTheory.LLEX_def , listTheory.MEM , listTheory.NULL_DEF ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007603

PMATCH_ROW_REDUNDANT_0
proof length: 1
proof time: 0.003803
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.144402
  inferstep time: 0.118312
  node_find time: 0.000232
  node_crea time: 0.018267
    pred time: 0.006812
    thmpred time: 0.000001
    mc time: 0.014769
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_NIL" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL" , DB.fetch "patternMatches" "PMATCH_REMOVE_ARB_NO_OVERLAP" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS" , DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EXTEND_BOTH_ID" , listTheory.INDEX_FIND_def , DB.fetch "patternMatches" "PMATCH_EXTEND_OLD" , optionTheory.option_case_def , optionTheory.option_CLAUSES ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.015504

PMATCH_ROW_REDUNDANT_SUC
Statistics
  infstep : 360
  nodes   : 112
  maxdepth: 6
Time: 10.005854
  inferstep time: 6.490284
  node_find time: 0.061398
  node_crea time: 3.298801
    pred time: 1.202943
    thmpred time: 0.000033
    mc time: 1.136007
    inst time: 0.0
Proof status: Time Out
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.473724

PMATCH_ROW_REDUNDANT_APPEND_LT
Statistics
  infstep : 647
  nodes   : 110
  maxdepth: 5
Time: 10.087813
  inferstep time: 7.38599
  node_find time: 0.096327
  node_crea time: 2.305097
    pred time: 0.664178
    thmpred time: 0.000031
    mc time: 0.995837
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.111272

PMATCH_ROW_REDUNDANT_APPEND_GE
Statistics
  infstep : 492
  nodes   : 124
  maxdepth: 5
Time: 10.001553
  inferstep time: 6.280118
  node_find time: 0.105044
  node_crea time: 3.398929
    pred time: 0.897504
    thmpred time: 0.000022
    mc time: 1.538709
    inst time: 0.0
Proof status: Time Out
Org tac number: 18
Original proof time: 0.0
Replaying proof: 0.60741

IS_REDUNDANT_ROWS_INFO_NIL
proof length: 1
proof time: 0.007443
Statistics
  infstep : 4
  nodes   : 2
  maxdepth: 1
Time: 0.146779
  inferstep time: 0.121499
  node_find time: 0.000395
  node_crea time: 0.017056
    pred time: 0.005236
    thmpred time: 0.0
    mc time: 0.015168
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "PMATCH_INTRO_CATCHALL" , optionTheory.option_CLAUSES , pred_setTheory.GSPECIFICATION , pred_setTheory.GSPECIFICATION_applied , quantHeuristicsTheory.GUESS_POINT_THM , quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_T , optionTheory.IS_SOME_DEF , optionTheory.IS_NONE_DEF , optionTheory.OPTION_ALL_def , optionTheory.option_REP_ABS_DEF , optionTheory.option_TY_DEF , DB.fetch "patternMatches" "some_var_bool_T" , whileTheory.OLEAST_EQNS , optionTheory.OPTION_GUARD_def , listTheory.ALL_DISTINCT ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010056

IS_REDUNDANT_ROWS_INFO_SNOC
Statistics
  infstep : 360
  nodes   : 118
  maxdepth: 6
Time: 10.017629
  inferstep time: 6.599713
  node_find time: 0.057178
  node_crea time: 3.207809
    pred time: 0.676024
    thmpred time: 0.000028
    mc time: 0.750352
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.340216

IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW
Statistics
  infstep : 269
  nodes   : 108
  maxdepth: 5
Time: 10.021328
  inferstep time: 6.86543
  node_find time: 0.045338
  node_crea time: 2.968657
    pred time: 0.807373
    thmpred time: 0.000032
    mc time: 0.908106
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.166168

IS_REDUNDANT_ROWS_INFO_CONS
Statistics
  infstep : 406
  nodes   : 120
  maxdepth: 6
Time: 10.003957
  inferstep time: 7.148138
  node_find time: 0.069355
  node_crea time: 2.620605
    pred time: 0.73956
    thmpred time: 0.000031
    mc time: 0.83835
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.405592

APPLY_REDUNDANT_ROWS_INFO_THMS
proof length: 1
proof time: 0.010676
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 1
Time: 0.147639
  inferstep time: 0.119159
  node_find time: 0.000407
  node_crea time: 0.022902
    pred time: 0.009721
    thmpred time: 0.0
    mc time: 0.010422
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "APPLY_REDUNDANT_ROWS_INFO_def" , listTheory.DROP_def , listTheory.EVERY2_THM , listTheory.FRONT_CONS_EQ_NIL , listTheory.TAKE_def , listTheory.LIST_REL_CONS1 , listTheory.LIST_REL_CONS2 , listTheory.LENGTH_FRONT_CONS , listTheory.LUPDATE_LENGTH , listTheory.DROP_cons , listTheory.TAKE_cons , listTheory.LIST_APPLY_o , listTheory.LUPDATE_NIL , rich_listTheory.FOLDL_SNOC_NIL , listTheory.MAP_APPEND_MAP_EQ , rich_listTheory.LIST_REL_APPEND_IMP ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014204

PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV
Statistics
  infstep : 434
  nodes   : 117
  maxdepth: 5
Time: 10.08704
  inferstep time: 7.047443
  node_find time: 0.072408
  node_crea time: 2.738583
    pred time: 0.748459
    thmpred time: 0.000029
    mc time: 1.024195
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.632467

REDUNDANT_ROWS_INFO_TO_PMATCH_EQ
Statistics
  infstep : 569
  nodes   : 181
  maxdepth: 6
Time: 10.076825
  inferstep time: 6.983621
  node_find time: 0.106131
  node_crea time: 2.645796
    pred time: 0.516826
    thmpred time: 0.000026
    mc time: 1.340432
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091321

PMATCH_IS_EXHAUSTIVE_REWRITES
proof length: 4
proof time: 0.081104
Statistics
  infstep : 10
  nodes   : 7
  maxdepth: 3
Time: 0.623512
  inferstep time: 0.546957
  node_find time: 0.001171
  node_crea time: 0.057481
    pred time: 0.02251
    thmpred time: 0.000001
    mc time: 0.034358
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THENL [metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_NIL", optionTheory.option_CLAUSES, quantHeuristicsTheory.GUESS_POINT_THM, quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM, optionTheory.IS_SOME_DEF, optionTheory.IS_NONE_DEF, whileTheory.OLEAST_EQNS, DB.fetch "patternMatches" "some_var_bool_F", optionTheory.OPTION_GUARD_def, optionTheory.some_F, listTheory.MEM, listTheory.EXISTS_DEF, listTheory.LIST_TO_SET_DEF, rich_listTheory.IS_SUBLIST, listTheory.NULL_DEF], BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_SUC", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_0", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB_NO_OVERLAP", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "PMATCH_APPEND_SEM", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_SUC", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_0", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_EVAL", optionTheory.option_CLAUSES, optionTheory.NOT_IS_SOME_EQ_NONE, quantHeuristicsTheory.IS_SOME_EQ_NOT_NONE, optionTheory.IF_NONE_EQUALS_OPTION, optionTheory.IS_SOME_DEF]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007629

IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE
proof length: 4
proof time: 0.063092
Statistics
  infstep : 108
  nodes   : 29
  maxdepth: 4
Time: 2.565377
  inferstep time: 2.057426
  node_find time: 0.014201
  node_crea time: 0.40407
    pred time: 0.112107
    thmpred time: 0.000021
    mc time: 0.193308
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def"), quantHeuristicsTheory.IS_SOME_EQ_NOT_NONE] THEN boolLib.REPEAT boolLib.STRIP_TAC THEN
  simpLib.FULL_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def"), listTheory.SNOC_APPEND] THEN
  metisTools.METIS_TAC [DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_FUN, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "PMATCH_CONG", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", DB.fetch "patternMatches" "PMATCH_INTRO_CATCHALL", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_is_equiv_1", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00932

REDUNDANT_ROWS_INFOS_CONJ_REWRITE
proof length: 1
proof time: 0.003015
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.127409
  inferstep time: 0.114031
  node_find time: 0.000218
  node_crea time: 0.009541
    pred time: 0.003817
    thmpred time: 0.0
    mc time: 0.00559
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_def" , ind_typeTheory.CONSTR_INJ , quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_1 , quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_2 , rich_listTheory.EVERY_FOLDL , quantHeuristicsTheory.GUESS_RULES_CONJ , listTheory.FOLDL , listTheory.EVERY_DEF , listTheory.ALL_DISTINCT , listTheory.APPEND , listTheory.APPEND_EQ_CONS , listTheory.DROP_compute , listTheory.DROP_def , listTheory.EVERY2_THM , listTheory.LIST_REL_def , listTheory.EVERYi_def ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007075

REDUNDANT_ROWS_INFOS_CONJ_THM
Statistics
  infstep : 467
  nodes   : 127
  maxdepth: 6
Time: 10.102926
  inferstep time: 6.970526
  node_find time: 0.083925
  node_crea time: 2.735351
    pred time: 0.610063
    thmpred time: 0.000039
    mc time: 1.026972
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013719

REDUNDANT_ROWS_INFOS_DISJ_THM
proof length: 3
proof time: 0.154794
Statistics
  infstep : 73
  nodes   : 25
  maxdepth: 4
Time: 2.465996
  inferstep time: 1.854902
  node_find time: 0.00879
  node_crea time: 0.545884
    pred time: 0.148043
    thmpred time: 0.000005
    mc time: 0.19142
    inst time: 0.0
Proof found: simpLib.ASM_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_def", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_1, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_AND_2, DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_def", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_REWRITE", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_NIL", rich_listTheory.EVERY_FOLDL, quantHeuristicsTheory.GUESS_RULES_CONJ] THEN simpLib.SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def"), (DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_def"), listTheory.MAP2_MAP, listTheory.EL_MAP, listTheory.EL_ZIP] THEN
  metisTools.METIS_TAC [DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_SUC", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_LT", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_0", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_NIL", rich_listTheory.EVERY_FOLDL, DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.073917

LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX
proof length: 4
proof time: 0.006247
Statistics
  infstep : 183
  nodes   : 34
  maxdepth: 4
Time: 2.852803
  inferstep time: 2.365977
  node_find time: 0.021963
  node_crea time: 0.360531
    pred time: 0.108028
    thmpred time: 0.000009
    mc time: 0.208924
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 23000*)rows"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", listTheory.LENGTH, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", listTheory.ZIP_MAP, pairTheory.UNCURRY, pairTheory.UNCURRY_VAR, listTheory.MEM_ZIP_MEM_MAP, pairTheory.ELIM_PFORALL], BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", listTheory.LENGTH, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", relationTheory.tactictoe_thm_24, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_CONG", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040683

FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX
proof length: 4
proof time: 0.009471
Statistics
  infstep : 8
  nodes   : 6
  maxdepth: 3
Time: 0.442157
  inferstep time: 0.353041
  node_find time: 0.000978
  node_crea time: 0.060648
    pred time: 0.020531
    thmpred time: 0.0
    mc time: 0.048708
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 23000*)rows"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", pred_setTheory.LINV_OPT_def, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_FUN, listTheory.MAP_EQ_EVERY2], BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", pred_setTheory.LINV_OPT_def, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_FUN, listTheory.MAP_EQ_EVERY2] THEN
  metisTools.METIS_TAC [DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", pred_setTheory.LINV_OPT_def, quantHeuristicsTheory.SIMPLE_GUESS_EXISTS_EQ_FUN, listTheory.MAP_EQ_EVERY2, quantHeuristicsTheory.GUESS_RULES_EQUIV, quantHeuristicsTheory.GUESS_RULES_EQUATION_EXISTS_POINT, quantHeuristicsTheory.GUESS_RULES_EQUATION_FORALL_POINT, relationTheory.WF_RECURSION_THM, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038735

EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX
Statistics
  infstep : 408
  nodes   : 111
  maxdepth: 5
Time: 10.050492
  inferstep time: 7.791075
  node_find time: 0.071872
  node_crea time: 1.856259
    pred time: 0.478692
    thmpred time: 0.000026
    mc time: 0.996534
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04388

EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX
Statistics
  infstep : 339
  nodes   : 99
  maxdepth: 6
Time: 10.048134
  inferstep time: 7.447201
  node_find time: 0.058035
  node_crea time: 2.315658
    pred time: 0.60486
    thmpred time: 0.000021
    mc time: 1.07728
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.521609

LENGTH_STRONGEST_REDUNDANT_ROWS_INFO
proof length: 1
proof time: 0.001982
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.150617
  inferstep time: 0.122229
  node_find time: 0.000578
  node_crea time: 0.012686
    pred time: 0.00272
    thmpred time: 0.000001
    mc time: 0.019137
    inst time: 0.0
Proof found: (simpLib.ASM_SIMP_TAC ( ( numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss ) hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.EQUIV_EXTRACT_ss ) [ DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS" , DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV" , DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def" , DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW" , DB.fetch "patternMatches" "PMATCH_CONG" , DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE" , DB.fetch "patternMatches" "PMATCH_INTRO_CATCHALL" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014097

FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX
proof length: 3
proof time: 0.00553
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.434173
  inferstep time: 0.347021
  node_find time: 0.001002
  node_crea time: 0.053394
    pred time: 0.020365
    thmpred time: 0.000008
    mc time: 0.048953
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 23000*)rows"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", pred_setTheory.LINV_OPT_def, DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV"], BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_DISJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFOS_CONJ_THM", DB.fetch "patternMatches" "REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039944

EL_STRONGEST_REDUNDANT_ROWS_INFO
proof length: 1
proof time: 0.003794
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.133355
  inferstep time: 0.112453
  node_find time: 0.000254
  node_crea time: 0.014133
    pred time: 0.004348
    thmpred time: 0.000001
    mc time: 0.012176
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "patternMatches" "LENGTH_STRONGEST_REDUNDANT_ROWS_INFO" , DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_def" , DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def" , listTheory.splitAtPki_EQN , listTheory.LLEX_EL_THM , rich_listTheory.SNOC_EL_TAKE , rich_listTheory.TAKE_EL_SNOC , DB.fetch "patternMatches" "EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009534

STRONGEST_REDUNDANT_ROWS_INFO_OK
Statistics
  infstep : 499
  nodes   : 127
  maxdepth: 5
Time: 10.093878
  inferstep time: 7.278203
  node_find time: 0.09561
  node_crea time: 2.426191
    pred time: 0.60135
    thmpred time: 0.00003
    mc time: 1.061361
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.648704

PMATCH_ROW_COND_EX_FULL_DEF
proof length: 3
proof time: 0.015819
Statistics
  infstep : 47
  nodes   : 7
  maxdepth: 3
Time: 0.612086
  inferstep time: 0.518864
  node_find time: 0.005907
  node_crea time: 0.056171
    pred time: 0.021033
    thmpred time: 0.000002
    mc time: 0.030818
    inst time: 0.0
Proof found: simpLib.FULL_SIMP_TAC numLib.std_ss [(DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE"), (DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def")] THEN boolLib.REWRITE_TAC [DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def", DB.fetch "patternMatches" "PMATCH_COND_SELECT_UNIQUE", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", DB.fetch "patternMatches" "PMATCH_ROW_def", DB.fetch "patternMatches" "PMATCH_ROW_COND_def", pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_37, rich_listTheory.LIST_REL_GENLIST, DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROW_EXTEND_INPUT", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR"] THEN
  metisLib.METIS_TAC [(DB.fetch "option" "option_nchotomy")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041505

PMATCH_ROW_COND_EX_WEAKEN
proof length: 2
proof time: 0.025844
Statistics
  infstep : 28
  nodes   : 13
  maxdepth: 3
Time: 0.86979
  inferstep time: 0.711757
  node_find time: 0.003985
  node_crea time: 0.129831
    pred time: 0.043753
    thmpred time: 0.000001
    mc time: 0.054136
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FULL_DEF", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", ind_typeTheory.ISO_FUN, whileTheory.WHILE_RULE, quantHeuristicsTheory.GUESS_RULES_CONJ, listTheory.EVERY_CONJ, pred_setTheory.GSPEC_AND, rich_listTheory.EVERY_FOLDR, rich_listTheory.FILTER_FILTER, DB.fetch "patternMatches" "PMATCH_ROW_EXTEND_INPUT", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR"] THEN metisLib.METIS_TAC []
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.133195

PMATCH_ROW_COND_EX_FALSE
proof length: 1
proof time: 0.070475
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.111941
  inferstep time: 0.094075
  node_find time: 0.000146
  node_crea time: 0.010536
    pred time: 0.00296
    thmpred time: 0.000001
    mc time: 0.011192
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_WEAKEN" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW" , DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FULL_DEF" , DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def" , optionTheory.option_CLAUSES , DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_REWRITES" , quantHeuristicsTheory.GUESS_POINT_THM , quantHeuristicsTheory.SIMPLE_GUESS_SELECT_THM , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_NIL" , listTheory.LLEX_def , ConseqConvTheory.COND_CLAUSES_TF , DB.fetch "patternMatches" "some_var_bool_F" , ConseqConvTheory.IMP_CLAUSES_XF , satTheory.EQF_Imp1 , satTheory.OR_DUAL2 , satTheory.OR_DUAL3])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00434

PMATCH_ROW_COND_EX_IMP_REWRITE
proof length: 2
proof time: 0.006609
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.324538
  inferstep time: 0.258549
  node_find time: 0.000702
  node_crea time: 0.045852
    pred time: 0.013997
    thmpred time: 0.000002
    mc time: 0.03623
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_WEAKEN", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FALSE", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FULL_DEF", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_EXTEND_INPUT", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR", ind_typeTheory.ISO_FUN, pairTheory.PROD_ALL_CONG, oneTheory.tactictoe_thm_0, DB.fetch "patternMatches" "tactictoe_thm_2", quantHeuristicsTheory.IS_REMOVABLE_QUANT_FUN___EXISTS_THM] THEN BasicProvers.PROVE_TAC []
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.016442

PMATCH_IS_EXHAUSTIVE_CONTRADICT
proof length: 1
proof time: 0.104124
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.114315
  inferstep time: 0.094167
  node_find time: 0.00015
  node_crea time: 0.012433
    pred time: 0.003403
    thmpred time: 0.000001
    mc time: 0.011797
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_REWRITES" , DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE" , DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_APPEND_GE" , DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_OK" , DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED" , DB.fetch "patternMatches" "EL_STRONGEST_REDUNDANT_ROWS_INFO" , DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX" , DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_SUC" , DB.fetch "patternMatches" "PMATCH_ROW_REDUNDANT_0" , DB.fetch "patternMatches" "PMATCH_EVAL_MATCH" , DB.fetch "patternMatches" "PMATCH_def" , DB.fetch "patternMatches" "PMATCH_EVAL"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037576

PMATCH_ROW_EVAL_COND_EX
proof length: 3
proof time: 0.108082
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 3
Time: 0.395601
  inferstep time: 0.314796
  node_find time: 0.001017
  node_crea time: 0.058339
    pred time: 0.021562
    thmpred time: 0.000001
    mc time: 0.03722
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_EVAL_MATCH", DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_ROW_def", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def", DB.fetch "patternMatches" "PMATCH_COND_SELECT_UNIQUE", DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FULL_DEF", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_FALSE", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_IMP_REWRITE", DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_WEAKEN", DB.fetch "patternMatches" "PMATCH_ROW_COND_def", DB.fetch "patternMatches" "PMATCH_ROW_COND_DEF_GSYM", DB.fetch "patternMatches" "PMATCH_ROW_CONG"] THEN simpLib.SIMP_TAC numLib.std_ss [(DB.fetch "quantHeuristics" "SIMPLE_GUESS_EXISTS_def"), optionTheory.some_def] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26, arithmeticTheory.tactictoe_thm_11, DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_IMP_REWRITE", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006348

PMATCH_ROW_NEQ_NONE
proof length: 1
proof time: 0.000645
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.152821
  inferstep time: 0.138726
  node_find time: 0.00025
  node_crea time: 0.00885
    pred time: 0.002716
    thmpred time: 0.000001
    mc time: 0.007114
    inst time: 0.0
Proof found: (simpLib.FULL_SIMP_TAC numLib.std_ss [ ( DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE" ) , ( DB.fetch "patternMatches" "PMATCH_ROW_COND_EX_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008598

PMATCH_ROW_REMOVE_DOUBLE_BINDS_THM
Statistics
  infstep : 728
  nodes   : 87
  maxdepth: 5
Time: 10.008888
  inferstep time: 7.183552
  node_find time: 0.158417
  node_crea time: 2.266535
    pred time: 0.536446
    thmpred time: 0.000031
    mc time: 0.6392
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.354519

GUARDS_ELIM_THM
Statistics
  infstep : 525
  nodes   : 98
  maxdepth: 5
Time: 10.022001
  inferstep time: 6.990852
  node_find time: 0.126553
  node_crea time: 2.58277
    pred time: 0.779545
    thmpred time: 0.000027
    mc time: 0.976095
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.371936
Replaying proof: 0.01096

PMATCH_FLATTEN_THM_SINGLE
Statistics
  infstep : 328
  nodes   : 91
  maxdepth: 5
Time: 10.108373
  inferstep time: 7.158719
  node_find time: 0.081165
  node_crea time: 2.572336
    pred time: 0.775581
    thmpred time: 0.000021
    mc time: 1.196582
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.31464

PMATCH_FLATTEN_THM
Statistics
  infstep : 310
  nodes   : 75
  maxdepth: 5
Time: 10.031474
  inferstep time: 7.506949
  node_find time: 0.073363
  node_crea time: 2.186692
    pred time: 0.599489
    thmpred time: 0.000042
    mc time: 1.099701
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.302667
Replaying proof: 0.016889

PMATCH_ROW_COND_NOT_EX_OR_EQ_FIRST_ROW
Statistics
  infstep : 441
  nodes   : 89
  maxdepth: 5
Time: 10.01239
  inferstep time: 7.556198
  node_find time: 0.098587
  node_crea time: 2.088891
    pred time: 0.608987
    thmpred time: 0.000022
    mc time: 0.829137
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.122491

PMATCH_ROW_COND_NOT_EX_OR_EQ_NIL
proof length: 1
proof time: 0.000645
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.126635
  inferstep time: 0.110273
  node_find time: 0.000293
  node_crea time: 0.010507
    pred time: 0.003208
    thmpred time: 0.0
    mc time: 0.008318
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC ( numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss ) [ ( DB.fetch "patternMatches" "PMATCH_ROW_COND_NOT_EX_OR_EQ_def" ) , ( DB.fetch "patternMatches" "PMATCH_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012918

PMATCH_ROW_COND_NOT_EX_OR_EQ_NOT_FIRST_ROW
proof length: 4
proof time: 0.011442
Statistics
  infstep : 52
  nodes   : 19
  maxdepth: 3
Time: 2.437884
  inferstep time: 1.811485
  node_find time: 0.011865
  node_crea time: 0.483708
    pred time: 0.150579
    thmpred time: 0.000007
    mc time: 0.279283
    inst time: 0.0
Proof found: simpLib.SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "PMATCH_ROW_COND_NOT_EX_OR_EQ_def"), (DB.fetch "patternMatches" "PMATCH_def")] THEN BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 37820*)r' i"] THENL
  [simpLib.FULL_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [DB.fetch "patternMatches" "PMATCH_ROW_COND_NOT_EX_OR_EQ_def", optionTheory.option_case_def, DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_FLATTEN_FUN_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB_NO_OVERLAP", DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "EL_STRONGEST_REDUNDANT_ROWS_INFO", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_OK", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE", DB.fetch "patternMatches" "PMATCH_CONG"],
  simpLib.FULL_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [DB.fetch "patternMatches" "PMATCH_ROW_COND_NOT_EX_OR_EQ_def", optionTheory.THE_DEF, optionTheory.option_case_def, DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "PMATCH_def", DB.fetch "patternMatches" "PMATCH_FLATTEN_FUN_def", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB_NO_OVERLAP", DB.fetch "patternMatches" "EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "EL_STRONGEST_REDUNDANT_ROWS_INFO", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", DB.fetch "patternMatches" "FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_OK", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_CONS", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_CONS_NONE"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.122861

PMATCH_PRED_UNROLL_NIL
proof length: 1
proof time: 0.00071
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.139649
  inferstep time: 0.114215
  node_find time: 0.000309
  node_crea time: 0.017422
    pred time: 0.00668
    thmpred time: 0.000001
    mc time: 0.013663
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC ( numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss ) [ ( DB.fetch "patternMatches" "PMATCH_EVAL" ) , ( DB.fetch "patternMatches" "PMATCH_INCOMPLETE_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011936

PMATCH_PRED_UNROLL_CONS
Statistics
  infstep : 395
  nodes   : 114
  maxdepth: 6
Time: 10.001921
  inferstep time: 6.567886
  node_find time: 0.101385
  node_crea time: 3.080389
    pred time: 0.783803
    thmpred time: 0.000025
    mc time: 1.327406
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.138432

PMATCH_EXPAND_PRED_THM_GEN
Statistics
  infstep : 667
  nodes   : 110
  maxdepth: 5
Time: 10.044873
  inferstep time: 6.657111
  node_find time: 0.166306
  node_crea time: 2.794554
    pred time: 0.650822
    thmpred time: 0.000023
    mc time: 1.295658
    inst time: 0.0
Proof status: Time Out
Org tac number: 26
Original proof time: 0.0
Replaying proof: 1.062476

PMATCH_EXPAND_PRED_THM
Statistics
  infstep : 510
  nodes   : 104
  maxdepth: 5
Time: 10.066405
  inferstep time: 7.765204
  node_find time: 0.099446
  node_crea time: 1.879647
    pred time: 0.610532
    thmpred time: 0.000024
    mc time: 0.834607
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007443

PMATCH_LIFT_THM
Statistics
  infstep : 481
  nodes   : 91
  maxdepth: 5
Time: 10.017795
  inferstep time: 7.686686
  node_find time: 0.118669
  node_crea time: 1.908309
    pred time: 0.608595
    thmpred time: 0.000016
    mc time: 0.797167
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.278319

PMATCH_ROW_LIFT_THM
proof length: 3
proof time: 0.013984
Statistics
  infstep : 323
  nodes   : 119
  maxdepth: 6
Time: 6.6528
  inferstep time: 4.330553
  node_find time: 0.079212
  node_crea time: 1.938239
    pred time: 0.427654
    thmpred time: 0.000018
    mc time: 0.963499
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_ROW_LIFT_def", DB.fetch "patternMatches" "PMATCH_LIFT_THM", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB_NO_OVERLAP", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_DOUBLE_BINDS_THM", DB.fetch "patternMatches" "PMATCH_FLATTEN_FUN_PMATCH_ROW", DB.fetch "patternMatches" "GUARDS_ELIM_THM", DB.fetch "patternMatches" "PMATCH_REMOVE_ARB", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", DB.fetch "patternMatches" "PMATCH_ROW_CONG", DB.fetch "patternMatches" "PMATCH_ROW_EQ_AUX", DB.fetch "patternMatches" "PMATCH_ROW_EQ_SOME", DB.fetch "patternMatches" "PMATCH_ROW_EQ_NONE", DB.fetch "patternMatches" "PMATCH_EVAL", DB.fetch "patternMatches" "PMATCH_EVAL_MATCH"] THEN simpLib.SIMP_TAC (numLib.std_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.CONJ_ss) [(DB.fetch "patternMatches" "PMATCH_ROW_def"), boolLib.FUN_EQ_THM, optionTheory.some_def, (DB.fetch "patternMatches" "PMATCH_ROW_COND_def"), boolLib.GSYM boolLib.RIGHT_EXISTS_AND_THM] THEN
  BasicProvers.SRW_TAC [] [pred_setTheory.LINV_OPT_def, DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN_VAR", DB.fetch "patternMatches" "PMATCH_ROW_REMOVE_FUN", DB.fetch "patternMatches" "PMATCH_FLATTEN_FUN_PMATCH_ROW", ind_typeTheory.CONSTR_REC, ind_typeTheory.ZRECSPACE_def, combinTheory.o_DEF, combinTheory.o_ABS_L, combinTheory.o_ABS_R, optionTheory.OPTION_MAP_DEF, optionTheory.OPTION_APPLY_def, listTheory.EVERY_MAP, listTheory.EXISTS_MAP, optionTheory.OPTION_MAP_EQ_SOME, optionTheory.OPTION_MAP_EQ_NONE_both_ways, DB.fetch "patternMatches" "PMATCH_ROW_LIFT_def"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.090157

PMATCH_IS_EXHAUSTIVE_LIFT
proof length: 6
proof time: 0.048705
Statistics
  infstep : 104
  nodes   : 57
  maxdepth: 5
Time: 4.163134
  inferstep time: 2.868887
  node_find time: 0.026353
  node_crea time: 1.048639
    pred time: 0.220136
    thmpred time: 0.000008
    mc time: 0.683283
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 41591*)rows"] THENL [metisTools.METIS_TAC [DB.fetch "patternMatches" "PMATCH_LIFT_THM", DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_REWRITES", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_def", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_THM", DB.fetch "patternMatches" "PMATCH_FLATTEN_THM_SINGLE", DB.fetch "patternMatches" "PMATCH_FLATTEN_THM", DB.fetch "patternMatches" "PMATCH_EXPAND_PRED_def", DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_CONTRADICT", DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "tactictoe_thm_15", listTheory.LUPDATE_SOME_MAP, listTheory.LAST_MAP, listTheory.MAP, listTheory.MAP_EQ_NIL, rich_listTheory.MAP_FOLDL], simpLib.FULL_SIMP_TAC (numLib.arith_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close listSimps.LIST_ss) [(DB.fetch "patternMatches" "PMATCH_def"), (DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "PMATCH_LIFT_THM", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_def", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_THM", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def", DB.fetch "patternMatches" "PMATCH_APPEND_SEM", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", DB.fetch "patternMatches" "PMATCH_ROW_COND_NOT_EX_OR_EQ_def", DB.fetch "patternMatches" "PMATCH_FLATTEN_THM", DB.fetch "patternMatches" "PMATCH_FLATTEN_THM_SINGLE", listTheory.EXISTS_DEF, DB.fetch "patternMatches" "IS_REDUNDANT_ROWS_INFO_def", DB.fetch "patternMatches" "STRONGEST_REDUNDANT_ROWS_INFO_AUX_def"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "patternMatches" "PMATCH_LIFT_THM", DB.fetch "patternMatches" "PMATCH_IS_EXHAUSTIVE_def", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_def", DB.fetch "patternMatches" "PMATCH_ROW_LIFT_THM", DB.fetch "patternMatches" "PMATCH_EQUIV_ROWS_def", DB.fetch "patternMatches" "PMATCH_APPEND_SEM", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_REDUNDANT", DB.fetch "patternMatches" "PMATCH_ROWS_DROP_SUBSUMED", optionTheory.option_CLAUSES, DB.fetch "patternMatches" "tactictoe_thm_16", DB.fetch "patternMatches" "tactictoe_thm_12", DB.fetch "patternMatches" "tactictoe_thm_13", listTheory.LUPDATE_SOME_MAP, DB.fetch "patternMatches" "PMATCH_ROW_def", optionTheory.OPTION_MAP_DEF, optionTheory.OPTION_MAP_EQ_SOME]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009744
Bad stac: 7
