
IS_GCD_UNIQUE
proof length: 19
proof time: 0.448325
Statistics
  infstep : 362
  nodes   : 55
  maxdepth: 4
Time: 6.09727
  inferstep time: 5.301408
  node_find time: 0.01287
  node_crea time: 0.626779
    pred time: 0.23418
    thmpred time: 0.000042
    mc time: 0.354351
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "is_gcd_def", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, arithmeticTheory.DIV_LESS, arithmeticTheory.MOD_EQ_0_DIVISOR, dividesTheory.DIVIDES_ADD_1, dividesTheory.DIVIDES_ADD_2, dividesTheory.DIVIDES_SUB, dividesTheory.DIVIDES_TRANS, combinTheory.UPD_SAME_KEY_UNWIND, arithmeticTheory.LESS_EQ_ADD_SUB] THEN boolLib.REPEAT BasicProvers.Cases THENL
  [metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.DIV_LESS, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides],
  boolLib.REWRITE_TAC [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, pairTheory.LEX_CONG, arithmeticTheory.MOD_EQ_0_DIVISOR, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, dividesTheory.PRIME_FACTOR, dividesTheory.prime_divides_only_self, dividesTheory.DIVIDES_ANTISYM, dividesTheory.prime_def, dividesTheory.DIVIDES_ADD_1],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  metisLib.METIS_TAC [arithmeticTheory.LESS_EQUAL_ANTISYM, (DB.fetch "divides" "DIVIDES_LE"), prim_recTheory.LESS_0],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  metisLib.METIS_TAC [arithmeticTheory.LESS_EQUAL_ANTISYM, (DB.fetch "divides" "DIVIDES_LE"), prim_recTheory.LESS_0],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  BasicProvers.SRW_TAC [] [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.DIV_LESS, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.MOD_EQ_0_DIVISOR, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.DIVIDES_FACT],
  metisLib.METIS_TAC [arithmeticTheory.LESS_EQUAL_ANTISYM, (DB.fetch "divides" "DIVIDES_LE"), prim_recTheory.LESS_0]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.012147

IS_GCD_REF
proof length: 2
proof time: 0.064364
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.187455
  inferstep time: 0.15336
  node_find time: 0.000127
  node_crea time: 0.027455
    pred time: 0.006115
    thmpred time: 0.0
    mc time: 0.021438
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "IS_GCD_UNIQUE", DB.fetch "gcd" "is_gcd_def", dividesTheory.DIVIDES_ANTISYM, arithmeticTheory.ADD_MOD, arithmeticTheory.SUC_MOD, arithmeticTheory.ADD_SUB, arithmeticTheory.DIVMOD_CORRECT, arithmeticTheory.findq_eq_0, arithmeticTheory.EXP_EXP_LE_MONO, arithmeticTheory.tactictoe_thm_35, arithmeticTheory.tactictoe_thm_36, arithmeticTheory.EXP_EXP_LT_MONO, arithmeticTheory.tactictoe_thm_33, arithmeticTheory.tactictoe_thm_34, arithmeticTheory.LESS_EQ_ADD_SUB, arithmeticTheory.LESS_EQ_SUB_LESS] THEN metisTools.METIS_TAC [dividesTheory.DIVIDES_ANTISYM, DB.fetch "gcd" "is_gcd_def", dividesTheory.divides_def, dividesTheory.DIVIDES_ADD_1, dividesTheory.DIVIDES_ADD_2, dividesTheory.DIVIDES_LE, dividesTheory.DIVIDES_MULT, dividesTheory.DIVIDES_REFL, dividesTheory.DIVIDES_SUB, dividesTheory.DIVIDES_TRANS, dividesTheory.NOT_LT_DIVIDES, dividesTheory.compute_divides, dividesTheory.prime_def, dividesTheory.ALL_DIVIDES_0, dividesTheory.ONE_DIVIDES_ALL, DB.fetch "gcd" "IS_GCD_UNIQUE"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008511

IS_GCD_SYM
proof length: 11
proof time: 0.076506
Statistics
  infstep : 152
  nodes   : 41
  maxdepth: 4
Time: 4.011274
  inferstep time: 3.495572
  node_find time: 0.008974
  node_crea time: 0.363276
    pred time: 0.116569
    thmpred time: 0.000007
    mc time: 0.289072
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "IS_GCD_UNIQUE", DB.fetch "gcd" "is_gcd_def", DB.fetch "gcd" "IS_GCD_REF", arithmeticTheory.LESS_EQ_ADD_SUB, arithmeticTheory.LESS_EQ_SUB_LESS, arithmeticTheory.SUB_PLUS, arithmeticTheory.SUB_SUB, dividesTheory.DIVIDES_ADD_1, dividesTheory.DIVIDES_ADD_2, dividesTheory.DIVIDES_MULT, dividesTheory.DIVIDES_SUB, dividesTheory.DIVIDES_TRANS, combinTheory.APPLY_UPDATE_THM, combinTheory.UPDATE_def, combinTheory.SAME_KEY_UPDATE_DIFFER, combinTheory.UPD11_SAME_BASE] THEN boolLib.REPEAT BasicProvers.Cases THENL
  [metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_thm, arithmeticTheory.findq_def, DB.fetch "gcd" "IS_GCD_UNIQUE", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides, dividesTheory.DIVIDES_ANTISYM, dividesTheory.prime_def],
  metisLib.METIS_TAC [arithmeticTheory.LESS_EQUAL_ANTISYM, (DB.fetch "divides" "DIVIDES_LE"), prim_recTheory.LESS_0],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_thm, arithmeticTheory.findq_def, DB.fetch "gcd" "IS_GCD_UNIQUE", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides, dividesTheory.DIVIDES_ANTISYM, dividesTheory.prime_def],
  metisLib.METIS_TAC [arithmeticTheory.LESS_EQUAL_ANTISYM, (DB.fetch "divides" "DIVIDES_LE"), prim_recTheory.LESS_0],
  metisTools.METIS_TAC [dividesTheory.ALL_DIVIDES_0, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_thm, arithmeticTheory.findq_def, DB.fetch "gcd" "IS_GCD_UNIQUE", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides, dividesTheory.DIVIDES_ANTISYM, dividesTheory.prime_def],
  boolLib.REWRITE_TAC [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_thm, arithmeticTheory.findq_def, DB.fetch "gcd" "IS_GCD_UNIQUE", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides, dividesTheory.DIVIDES_ANTISYM],
  boolLib.REWRITE_TAC [dividesTheory.ALL_DIVIDES_0, arithmeticTheory.tactictoe_thm_8, DB.fetch "gcd" "is_gcd_def", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.findq_thm, arithmeticTheory.findq_def, DB.fetch "gcd" "IS_GCD_UNIQUE", pairTheory.LEX_CONG, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, combinTheory.UPDATE_COMMUTES, dividesTheory.DIVIDES_LE, dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_FACT, dividesTheory.compute_divides, dividesTheory.DIVIDES_ANTISYM] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_8, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.MULT_CLAUSES, numeralTheory.numeral_distrib, arithmeticTheory.EXP, arithmeticTheory.LE, arithmeticTheory.SUB, numeralTheory.texp_help_def, prim_recTheory.DC, arithmeticTheory.FACT, arithmeticTheory.ADD, prim_recTheory.num_Axiom, arithmeticTheory.MULT, arithmeticTheory.EVEN, arithmeticTheory.ODD, arithmeticTheory.FORALL_NUM],
  metisLib.METIS_TAC [(DB.fetch "divides" "divides_def"), arithmeticTheory.RIGHT_SUB_DISTRIB]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.019606

IS_GCD_0R
proof length: 1
proof time: 0.073381
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.08818
  inferstep time: 0.077909
  node_find time: 0.000027
  node_crea time: 0.007162
    pred time: 0.002093
    thmpred time: 0.0
    mc time: 0.007052
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "IS_GCD_REF" , DB.fetch "gcd" "is_gcd_def" , DB.fetch "gcd" "IS_GCD_SYM" , DB.fetch "gcd" "IS_GCD_UNIQUE" , arithmeticTheory.ADD_MOD , arithmeticTheory.SUC_MOD , arithmeticTheory.DIVMOD_CORRECT , arithmeticTheory.findq_eq_0 , arithmeticTheory.EXP_EXP_LE_MONO , arithmeticTheory.tactictoe_thm_35 , arithmeticTheory.tactictoe_thm_36 , arithmeticTheory.EXP_EXP_LT_MONO , arithmeticTheory.tactictoe_thm_33 , arithmeticTheory.tactictoe_thm_34 , arithmeticTheory.SUB_ELIM_THM , dividesTheory.ALL_DIVIDES_0])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00594

IS_GCD_0L
proof length: 1
proof time: 0.03475
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.047468
  inferstep time: 0.036541
  node_find time: 0.00003
  node_crea time: 0.007682
    pred time: 0.002356
    thmpred time: 0.000001
    mc time: 0.00754
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "IS_GCD_0R" , DB.fetch "gcd" "is_gcd_def" , DB.fetch "gcd" "IS_GCD_REF" , DB.fetch "gcd" "IS_GCD_SYM" , DB.fetch "gcd" "IS_GCD_UNIQUE" , dividesTheory.ALL_DIVIDES_0 , arithmeticTheory.ADD_MOD , arithmeticTheory.SUC_MOD , arithmeticTheory.DIVMOD_CORRECT , arithmeticTheory.findq_eq_0 , arithmeticTheory.EXP_EXP_LE_MONO , arithmeticTheory.tactictoe_thm_35 , arithmeticTheory.tactictoe_thm_36 , arithmeticTheory.EXP_EXP_LT_MONO , arithmeticTheory.tactictoe_thm_33 , arithmeticTheory.tactictoe_thm_34])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00829

PRIME_IS_GCD
proof length: 3
proof time: 0.090373
Statistics
  infstep : 53
  nodes   : 17
  maxdepth: 3
Time: 1.527846
  inferstep time: 1.304931
  node_find time: 0.001581
  node_crea time: 0.165658
    pred time: 0.053038
    thmpred time: 0.000006
    mc time: 0.134402
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "is_gcd_def", DB.fetch "gcd" "IS_GCD_UNIQUE", DB.fetch "gcd" "IS_GCD_SYM", DB.fetch "gcd" "IS_GCD_REF", DB.fetch "gcd" "IS_GCD_0R", dividesTheory.prime_def, dividesTheory.PRIME_FACTOR, dividesTheory.prime_divides_only_self, DB.fetch "gcd" "IS_GCD_0L", dividesTheory.ONE_LT_PRIME, dividesTheory.PRIMES_def, dividesTheory.PRIMES_NO_GAP, dividesTheory.PRIMES_ONTO, dividesTheory.PRIME_POS, dividesTheory.EUCLID, dividesTheory.PRIME_INDEX] THEN (BasicProvers.RW_TAC numLib.arith_ss) [(DB.fetch "divides" "divides_def")] THEN
  metisTools.METIS_TAC [arithmeticTheory.DIV_LESS, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, combinTheory.UPD11_SAME_BASE, pairTheory.LEX_DEF_THM, DB.fetch "gcd" "is_gcd_def", DB.fetch "gcd" "IS_GCD_UNIQUE", arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.ONE_LT_MULT_IMP, arithmeticTheory.tactictoe_thm_10, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, numeralTheory.divmod_POS, arithmeticTheory.DIVMOD_THM, arithmeticTheory.DIVMOD_DEF, arithmeticTheory.DOUBLE_LT]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.202529

IS_GCD_MINUS_L
Statistics
  infstep : 401
  nodes   : 103
  maxdepth: 5
Time: 10.088058
  inferstep time: 8.786086
  node_find time: 0.027473
  node_crea time: 1.119583
    pred time: 0.426209
    thmpred time: 0.000018
    mc time: 0.39518
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068366

IS_GCD_MINUS_R
proof length: 1
proof time: 0.055518
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.074578
  inferstep time: 0.061519
  node_find time: 0.000035
  node_crea time: 0.008014
    pred time: 0.003095
    thmpred time: 0.0
    mc time: 0.008382
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "IS_GCD_MINUS_L" , DB.fetch "gcd" "is_gcd_def" , DB.fetch "gcd" "IS_GCD_UNIQUE" , DB.fetch "gcd" "IS_GCD_SYM" , DB.fetch "gcd" "IS_GCD_REF" , DB.fetch "gcd" "PRIME_IS_GCD" , DB.fetch "gcd" "IS_GCD_0R" , DB.fetch "gcd" "IS_GCD_0L" , arithmeticTheory.LESS_EQ_ADD_SUB , arithmeticTheory.LESS_EQ_SUB_LESS , arithmeticTheory.SUB_SUB , dividesTheory.DIVIDES_SUB , arithmeticTheory.SUB_PLUS , arithmeticTheory.SUB_EQUAL_0 , arithmeticTheory.BOUNDED_EXISTS_THM , arithmeticTheory.BOUNDED_FORALL_THM])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005644

GCD_IS_GCD
Statistics
  infstep : 592
  nodes   : 131
  maxdepth: 5
Time: 10.004513
  inferstep time: 8.546981
  node_find time: 0.043512
  node_crea time: 1.278159
    pred time: 0.378183
    thmpred time: 0.000025
    mc time: 0.64332
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.089294

GCD_REF
proof length: 3
proof time: 0.087197
Statistics
  infstep : 37
  nodes   : 8
  maxdepth: 2
Time: 0.571462
  inferstep time: 0.492857
  node_find time: 0.001257
  node_crea time: 0.057297
    pred time: 0.02192
    thmpred time: 0.000001
    mc time: 0.04071
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "gcd_def_compute", DB.fetch "gcd" "GCD_IS_GCD", DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR", arithmeticTheory.ADD_CLAUSES, arithmeticTheory.MULT_CLAUSES, numeralTheory.numeral_distrib, arithmeticTheory.num_case_def, arithmeticTheory.SUB_RIGHT_LESS, arithmeticTheory.ADD_MOD, arithmeticTheory.SUC_MOD, arithmeticTheory.SUB_0, arithmeticTheory.DIVMOD_CORRECT, arithmeticTheory.ONE, arithmeticTheory.LESS_ADD_NONZERO], (BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [(DB.fetch "gcd" "tactictoe_thm_0")]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004783

GCD_SYM
Statistics
  infstep : 762
  nodes   : 92
  maxdepth: 4
Time: 10.022182
  inferstep time: 8.892963
  node_find time: 0.051337
  node_crea time: 0.927614
    pred time: 0.309625
    thmpred time: 0.000009
    mc time: 0.457707
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003462

GCD_0R
proof length: 1
proof time: 0.076581
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.102827
  inferstep time: 0.08302
  node_find time: 0.000042
  node_crea time: 0.010057
    pred time: 0.002333
    thmpred time: 0.0
    mc time: 0.015704
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "GCD_REF" , DB.fetch "gcd" "GCD_SYM" , DB.fetch "gcd" "GCD_IS_GCD" , DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR" , DB.fetch "gcd" "tactictoe_thm_0" , DB.fetch "gcd" "gcd_def" , DB.fetch "gcd" "gcd_def_compute" , arithmeticTheory.ADD_MOD , arithmeticTheory.SUC_MOD , arithmeticTheory.DIVMOD_CORRECT , arithmeticTheory.findq_eq_0 , arithmeticTheory.EXP_EXP_LE_MONO , arithmeticTheory.EXP_EXP_LT_MONO , arithmeticTheory.SUB_ELIM_THM , dividesTheory.compute_divides , numeralTheory.divmod_POS])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005997

GCD_0L
proof length: 1
proof time: 0.036934
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.068507
  inferstep time: 0.057394
  node_find time: 0.000042
  node_crea time: 0.0077
    pred time: 0.002322
    thmpred time: 0.000001
    mc time: 0.007329
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "gcd_def" , DB.fetch "gcd" "gcd_def_compute" , DB.fetch "gcd" "tactictoe_thm_0" , DB.fetch "gcd" "GCD_0R" , DB.fetch "gcd" "GCD_REF" , DB.fetch "gcd" "GCD_SYM" , DB.fetch "gcd" "GCD_IS_GCD" , DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR" , arithmeticTheory.ADD_MOD , arithmeticTheory.SUC_MOD , arithmeticTheory.DIVMOD_CORRECT , arithmeticTheory.findq_eq_0 , arithmeticTheory.EXP_EXP_LE_MONO , arithmeticTheory.EXP_EXP_LT_MONO , arithmeticTheory.SUB_ELIM_THM , dividesTheory.compute_divides])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004437

GCD_ADD_R
Statistics
  infstep : 550
  nodes   : 92
  maxdepth: 5
Time: 10.011387
  inferstep time: 8.90753
  node_find time: 0.040898
  node_crea time: 0.929674
    pred time: 0.298525
    thmpred time: 0.000014
    mc time: 0.414209
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.065125

GCD_ADD_L
proof length: 1
proof time: 0.056327
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.074269
  inferstep time: 0.063391
  node_find time: 0.000055
  node_crea time: 0.007654
    pred time: 0.00255
    thmpred time: 0.000001
    mc time: 0.006649
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "GCD_ADD_R" , DB.fetch "gcd" "GCD_ADD_R_THM" , DB.fetch "gcd" "GCD_SYM" , DB.fetch "gcd" "GCD_IS_GCD" , DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR" , DB.fetch "gcd" "GCD_REF" , DB.fetch "gcd" "GCD_0R" , DB.fetch "gcd" "GCD_0L" , DB.fetch "gcd" "tactictoe_thm_0" , DB.fetch "gcd" "gcd_def" , DB.fetch "gcd" "gcd_def_compute" , arithmeticTheory.ADD_MOD , arithmeticTheory.LESS_EQ_ADD_SUB , arithmeticTheory.LESS_EQ_SUB_LESS , arithmeticTheory.SUB_ELIM_THM , arithmeticTheory.SUB_PLUS])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003179

GCD_EQ_0
proof length: 6
proof time: 0.070362
Statistics
  infstep : 658
  nodes   : 102
  maxdepth: 5
Time: 8.239003
  inferstep time: 7.20593
  node_find time: 0.048249
  node_crea time: 0.791383
    pred time: 0.246594
    thmpred time: 0.000014
    mc time: 0.435687
    inst time: 0.0
Proof found: Induction.recInduct (DB.fetch "gcd" "gcd_ind") THEN boolLib.REPEAT boolLib.STRIP_TAC THENL
  [(BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [(DB.fetch "gcd" "tactictoe_thm_0")],
  (BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss)) [(DB.fetch "gcd" "tactictoe_thm_0")],
  BasicProvers.SRW_TAC [] [arithmeticTheory.tactictoe_thm_11, DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "gcd_def_compute", DB.fetch "gcd" "GCD_0R", DB.fetch "gcd" "GCD_0L", DB.fetch "gcd" "GCD_ADD_L_THM", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR", DB.fetch "gcd" "GCD_ADD_L", DB.fetch "gcd" "GCD_ADD_R", DB.fetch "gcd" "GCD_SYM", DB.fetch "gcd" "GCD_REF", DB.fetch "gcd" "GCD_IS_GCD", arithmeticTheory.NRC] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "gcd_def_compute", DB.fetch "gcd" "GCD_0R", DB.fetch "gcd" "GCD_0L", DB.fetch "gcd" "GCD_ADD_L_THM", DB.fetch "gcd" "GCD_ADD_L", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_ADD_R", DB.fetch "gcd" "GCD_SYM", DB.fetch "gcd" "GCD_REF", DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR", DB.fetch "gcd" "GCD_IS_GCD", DB.fetch "gcd" "gcd_ind"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.043225

GCD_1
Statistics
  infstep : 1009
  nodes   : 123
  maxdepth: 6
Time: 10.099564
  inferstep time: 8.444837
  node_find time: 0.090536
  node_crea time: 1.337389
    pred time: 0.305204
    thmpred time: 0.00002
    mc time: 0.851156
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.102339

PRIME_GCD
proof length: 3
proof time: 0.102942
Statistics
  infstep : 28
  nodes   : 11
  maxdepth: 3
Time: 1.03754
  inferstep time: 0.886668
  node_find time: 0.001723
  node_crea time: 0.124865
    pred time: 0.041221
    thmpred time: 0.0
    mc time: 0.075061
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN numTheory.INDUCTION boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [dividesTheory.ZERO_DIVIDES, dividesTheory.NOT_PRIME_0, DB.fetch "gcd" "gcd_def_compute", DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "tactictoe_thm_2", DB.fetch "gcd" "GCD_0L", DB.fetch "gcd" "gcd_def", dividesTheory.prime_def, DB.fetch "gcd" "PRIME_IS_GCD", dividesTheory.PRIME_FACTOR, dividesTheory.prime_divides_only_self, DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR", dividesTheory.ONE_LT_PRIME, dividesTheory.NOT_PRIME_1, dividesTheory.PRIME_3], metisTools.METIS_TAC [DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "tactictoe_thm_2", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "PRIME_IS_GCD", dividesTheory.prime_def, dividesTheory.PRIME_FACTOR, dividesTheory.prime_divides_only_self, DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR", dividesTheory.ONE_LT_PRIME, dividesTheory.NOT_PRIME_1, dividesTheory.PRIME_3, dividesTheory.PRIMES_def, dividesTheory.PRIME_2, dividesTheory.PRIMES_NO_GAP, DB.fetch "gcd" "gcd_def_compute"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005793
Replaying proof: 0.015809

L_EUCLIDES
Statistics
  infstep : 425
  nodes   : 72
  maxdepth: 4
Time: 10.003818
  inferstep time: 8.840773
  node_find time: 0.03629
  node_crea time: 0.958194
    pred time: 0.286212
    thmpred time: 0.000018
    mc time: 0.514742
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.157581

P_EUCLIDES
Statistics
  infstep : 352
  nodes   : 85
  maxdepth: 5
Time: 10.00464
  inferstep time: 8.719922
  node_find time: 0.032398
  node_crea time: 1.056578
    pred time: 0.341986
    thmpred time: 0.000027
    mc time: 0.545768
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.179246

FACTOR_OUT_GCD
Statistics
  infstep : 568
  nodes   : 92
  maxdepth: 5
Time: 10.034731
  inferstep time: 8.468113
  node_find time: 0.055744
  node_crea time: 1.320621
    pred time: 0.314584
    thmpred time: 0.000026
    mc time: 0.773391
    inst time: 0.0
Proof status: Time Out
Org tac number: 17
Original proof time: 0.0
Replaying proof: 1.366264

GCD_SUCfree_ind
Statistics
  infstep : 918
  nodes   : 143
  maxdepth: 6
Time: 10.003782
  inferstep time: 7.892632
  node_find time: 0.100016
  node_crea time: 1.752877
    pred time: 0.346378
    thmpred time: 0.00003
    mc time: 0.978819
    inst time: 0.0
Proof status: Time Out
Org tac number: 16
Original proof time: 0.0
Replaying proof: 0.625668
Replaying proof: 0.034478

LINEAR_GCD
proof length: 6
proof time: 0.153658
Statistics
  infstep : 236
  nodes   : 50
  maxdepth: 5
Time: 6.297088
  inferstep time: 5.572868
  node_find time: 0.021759
  node_crea time: 0.566856
    pred time: 0.160667
    thmpred time: 0.00001
    mc time: 0.343328
    inst time: 0.0
Proof found: Induction.recInduct (DB.fetch "gcd" "gcd_ind") THEN boolLib.REPEAT boolLib.STRIP_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "gcd" "GCD_0R", arithmeticTheory.tactictoe_thm_11, arithmeticTheory.MULT_CLAUSES, numeralTheory.numeral_distrib, arithmeticTheory.MULT_0, DB.fetch "gcd" "tactictoe_thm_10", DB.fetch "gcd" "FACTOR_OUT_GCD", DB.fetch "gcd" "L_EUCLIDES", DB.fetch "gcd" "tactictoe_thm_4", DB.fetch "gcd" "PRIME_GCD", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_ADD_L", DB.fetch "gcd" "GCD_ADD_R", DB.fetch "gcd" "GCD_ADD_L_THM", DB.fetch "gcd" "GCD_EQ_0", DB.fetch "gcd" "GCD_REF"],
  boolLib.ASM_REWRITE_TAC [(DB.fetch "arithmetic" "MULT_CLAUSES"), (DB.fetch "arithmetic" "ADD_CLAUSES"), boolLib.GSYM numTheory.NOT_SUC, numTheory.NOT_SUC] THEN
  metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.MULT_SUC, DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "tactictoe_thm_2", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "tactictoe_thm_3", DB.fetch "gcd" "gcd_def_compute", DB.fetch "gcd" "GCD_0L", DB.fetch "gcd" "tactictoe_thm_10", DB.fetch "gcd" "L_EUCLIDES", DB.fetch "gcd" "tactictoe_thm_4", DB.fetch "gcd" "FACTOR_OUT_GCD", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_ADD_L"],
  BasicProvers.SRW_TAC [] [arithmeticTheory.tactictoe_thm_11, DB.fetch "gcd" "tactictoe_thm_1", DB.fetch "gcd" "tactictoe_thm_0", DB.fetch "gcd" "tactictoe_thm_2", DB.fetch "gcd" "gcd_def", DB.fetch "gcd" "tactictoe_thm_3", arithmeticTheory.MULT_SUC_EQ, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.MULT_SUC, DB.fetch "gcd" "tactictoe_thm_10", DB.fetch "gcd" "FACTOR_OUT_GCD", DB.fetch "gcd" "L_EUCLIDES", DB.fetch "gcd" "tactictoe_thm_4", DB.fetch "gcd" "PRIME_GCD", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_ADD_L"]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.106776
Replaying proof: 0.014727
Replaying proof: 0.028463

GCD_EFFICIENTLY
Statistics
  infstep : 644
  nodes   : 103
  maxdepth: 5
Time: 10.011721
  inferstep time: 8.54697
  node_find time: 0.077328
  node_crea time: 1.177487
    pred time: 0.271349
    thmpred time: 0.000017
    mc time: 0.657419
    inst time: 0.0
Proof status: Time Out
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.622403

LCM_IS_LEAST_COMMON_MULTIPLE
Statistics
  infstep : 464
  nodes   : 96
  maxdepth: 5
Time: 10.020133
  inferstep time: 8.76943
  node_find time: 0.061181
  node_crea time: 1.03831
    pred time: 0.375108
    thmpred time: 0.000022
    mc time: 0.351208
    inst time: 0.0
Proof status: Time Out
Org tac number: 36
Original proof time: 0.0
Replaying proof: 1.857606

LCM_0
proof length: 1
proof time: 0.088073
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.120204
  inferstep time: 0.098749
  node_find time: 0.00012
  node_crea time: 0.016059
    pred time: 0.004151
    thmpred time: 0.0
    mc time: 0.013925
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "gcd" "lcm_def" , DB.fetch "gcd" "LCM_IS_LEAST_COMMON_MULTIPLE" , arithmeticTheory.ADD_MODULUS , arithmeticTheory.DIV_DIV_DIV_MULT , arithmeticTheory.DIV_EQ_X , arithmeticTheory.EXP_SUB_NUMERAL , arithmeticTheory.FUNPOW , arithmeticTheory.MOD_LIFT_PLUS , arithmeticTheory.MOD_SUC , arithmeticTheory.MOD_MULT_MOD , arithmeticTheory.MULT_EQ_DIV , arithmeticTheory.NRC , arithmeticTheory.NUMERAL_MULT_EQ_DIV , arithmeticTheory.ONE_LT_EXP , arithmeticTheory.ONE_LT_MULT , DB.fetch "gcd" "gcd_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.003929

LCM_1
proof length: 2
proof time: 0.003036
Statistics
  infstep : 16
  nodes   : 8
  maxdepth: 3
Time: 0.578738
  inferstep time: 0.472328
  node_find time: 0.001506
  node_crea time: 0.085707
    pred time: 0.025971
    thmpred time: 0.0
    mc time: 0.061206
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "LCM_0", DB.fetch "gcd" "LCM_IS_LEAST_COMMON_MULTIPLE", DB.fetch "gcd" "lcm_def", arithmeticTheory.EXP_SUB_NUMERAL, arithmeticTheory.MULT_EQ_1, arithmeticTheory.ONE_LT_EXP, arithmeticTheory.ONE_LT_MULT, DB.fetch "gcd" "GCD_1", DB.fetch "gcd" "gcd_def_compute", arithmeticTheory.DIV_LE_X, arithmeticTheory.X_LT_DIV, arithmeticTheory.FUNPOW_1, arithmeticTheory.LE_LT1, arithmeticTheory.NRC_1, arithmeticTheory.X_LT_EXP_X_IFF, arithmeticTheory.ZERO_EXP] THEN BasicProvers.SRW_TAC [] [arithmeticTheory.MULT_CLAUSES, DB.fetch "gcd" "lcm_def", arithmeticTheory.MULT_LEFT_1, arithmeticTheory.MULT_RIGHT_1, arithmeticTheory.DIVMOD_DEF, arithmeticTheory.DIVMOD_THM, arithmeticTheory.ZERO_EXP, dividesTheory.compute_divides, arithmeticTheory.findq_def, arithmeticTheory.findq_thm, arithmeticTheory.tactictoe_thm_59, arithmeticTheory.tactictoe_thm_60, arithmeticTheory.DIV_LE_X, arithmeticTheory.X_LT_DIV, arithmeticTheory.EXP_SUB_NUMERAL, arithmeticTheory.DIVMOD_ID]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006022

LCM_COMM
proof length: 3
proof time: 0.063815
Statistics
  infstep : 91
  nodes   : 35
  maxdepth: 4
Time: 3.740414
  inferstep time: 3.231659
  node_find time: 0.009598
  node_crea time: 0.41993
    pred time: 0.14108
    thmpred time: 0.000005
    mc time: 0.202225
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [DB.fetch "gcd" "lcm_def", DB.fetch "gcd" "LCM_IS_LEAST_COMMON_MULTIPLE", DB.fetch "gcd" "LCM_0", DB.fetch "gcd" "LCM_1", dividesTheory.divides_def, DB.fetch "gcd" "L_EUCLIDES", arithmeticTheory.ADD_MOD, arithmeticTheory.SUC_MOD, arithmeticTheory.EXP_EXP_LE_MONO, arithmeticTheory.EXP_EXP_LT_MONO, arithmeticTheory.LESS_EQ_ADD_SUB, arithmeticTheory.LESS_EQ_SUB_LESS, arithmeticTheory.MODEQ_DEF, arithmeticTheory.SUB_ELIM_THM, arithmeticTheory.SUB_PLUS, arithmeticTheory.SUB_SUB] THEN BasicProvers.SRW_TAC [numSimps.ARITH_ss] [] THEN
  metisTools.METIS_TAC [DB.fetch "gcd" "lcm_def", arithmeticTheory.tactictoe_thm_53, arithmeticTheory.tactictoe_thm_11, DB.fetch "gcd" "L_EUCLIDES", DB.fetch "gcd" "tactictoe_thm_13", DB.fetch "gcd" "tactictoe_thm_4", DB.fetch "gcd" "FACTOR_OUT_GCD", DB.fetch "gcd" "GCD_ADD_L", DB.fetch "gcd" "GCD_SYM", DB.fetch "gcd" "GCD_ADD_R", DB.fetch "gcd" "GCD_ADD_L_THM", DB.fetch "gcd" "GCD_ADD_R_THM", DB.fetch "gcd" "GCD_EFFICIENTLY", DB.fetch "gcd" "tactictoe_thm_12", DB.fetch "gcd" "GCD_IS_GCD", DB.fetch "gcd" "GCD_IS_GREATEST_COMMON_DIVISOR"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007729

LCM_LE
Statistics
  infstep : 282
  nodes   : 106
  maxdepth: 6
Time: 10.01338
  inferstep time: 8.2577
  node_find time: 0.03625
  node_crea time: 1.415284
    pred time: 0.400896
    thmpred time: 0.000015
    mc time: 0.823006
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.672996

LCM_LEAST
proof length: 2
proof time: 0.079829
Statistics
  infstep : 41
  nodes   : 18
  maxdepth: 4
Time: 1.904834
  inferstep time: 1.526424
  node_find time: 0.005272
  node_crea time: 0.330409
    pred time: 0.092964
    thmpred time: 0.000002
    mc time: 0.166952
    inst time: 0.0
Proof found: numLib.completeInduct_on [HolKernel.QUOTE " (*#loc 1 5768*)n"] THEN metisTools.METIS_TAC [arithmeticTheory.tactictoe_thm_11, DB.fetch "gcd" "LCM_IS_LEAST_COMMON_MULTIPLE", DB.fetch "gcd" "LCM_LE", DB.fetch "gcd" "lcm_def", DB.fetch "gcd" "LCM_COMM", DB.fetch "gcd" "LCM_0", DB.fetch "gcd" "LCM_1", dividesTheory.NOT_LT_DIVIDES, dividesTheory.DIVIDES_LE, dividesTheory.prime_def, DB.fetch "gcd" "P_EUCLIDES", DB.fetch "gcd" "PRIME_GCD", DB.fetch "gcd" "PRIME_IS_GCD", dividesTheory.DIVIDES_LEQ_OR_ZERO, dividesTheory.PRIME_FACTOR, dividesTheory.compute_divides]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.235943

GCD_COMMON_FACTOR
Statistics
  infstep : 437
  nodes   : 102
  maxdepth: 6
Time: 10.108175
  inferstep time: 8.623667
  node_find time: 0.059035
  node_crea time: 1.208917
    pred time: 0.322619
    thmpred time: 0.000024
    mc time: 0.693599
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.185755
Replaying proof: 0.011898
Replaying proof: 0.002227

GCD_CANCEL_MULT
Statistics
  infstep : 406
  nodes   : 88
  maxdepth: 5
Time: 10.074699
  inferstep time: 8.693887
  node_find time: 0.053336
  node_crea time: 1.101168
    pred time: 0.275506
    thmpred time: 0.000028
    mc time: 0.655959
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.527207
Replaying proof: 0.000639

BINARY_GCD
Statistics
  infstep : 554
  nodes   : 120
  maxdepth: 5
Time: 10.00524
  inferstep time: 7.933496
  node_find time: 0.085626
  node_crea time: 1.766358
    pred time: 0.376065
    thmpred time: 0.000024
    mc time: 1.041578
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.167463
Bad stac: 0
