
list_Axiom_old
Statistics
  infstep : 1318
  nodes   : 213
  maxdepth: 7
Time: 10.044176
  inferstep time: 7.881928
  node_find time: 0.096727
  node_crea time: 1.879563
    pred time: 0.341288
    thmpred time: 0.00002
    mc time: 0.991739
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.218072

LIST_TO_SET
Statistics
  infstep : 1276
  nodes   : 155
  maxdepth: 5
Time: 10.032278
  inferstep time: 8.060891
  node_find time: 0.09431
  node_crea time: 1.712826
    pred time: 0.395546
    thmpred time: 0.000026
    mc time: 0.763228
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004136

MAP2
proof length: 1
proof time: 0.003707
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.125281
  inferstep time: 0.113921
  node_find time: 0.000066
  node_crea time: 0.008434
    pred time: 0.003099
    thmpred time: 0.0
    mc time: 0.006328
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "MAP2_DEF" , DB.fetch "list" "tactictoe_thm_1" , DB.fetch "list" "MAP2_ind" , pred_setTheory.partition_elements_disjoint , DB.fetch "list" "list_case_def" , DB.fetch "list" "FOLDL" , DB.fetch "list" "list_case_cong" , DB.fetch "list" "list_Axiom" , DB.fetch "list" "tactictoe_thm_0" , DB.fetch "list" "list_size_def" , DB.fetch "list" "FOLDR" , DB.fetch "list" "MAP" , DB.fetch "list" "list_Axiom_old" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "FILTER" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.030856

NULL
proof length: 1
proof time: 0.086092
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.108194
  inferstep time: 0.090216
  node_find time: 0.000039
  node_crea time: 0.007375
    pred time: 0.002343
    thmpred time: 0.0
    mc time: 0.014098
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "NULL_DEF" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "FILTER" , DB.fetch "list" "FLAT" , DB.fetch "list" "INDEX_FIND_def" , DB.fetch "list" "LENGTH" , DB.fetch "list" "LIST_TO_SET_DEF" , DB.fetch "list" "MAP" , DB.fetch "list" "SUM" , DB.fetch "list" "list_Axiom_old" , DB.fetch "list" "LIST_TO_SET" , DB.fetch "list" "APPEND" , DB.fetch "list" "list_distinct" , DB.fetch "list" "tactictoe_thm_0" , DB.fetch "list" "FOLDL"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.002715

list_INDUCT
proof length: 2
proof time: 0.003143
Statistics
  infstep : 9
  nodes   : 4
  maxdepth: 2
Time: 0.271931
  inferstep time: 0.219264
  node_find time: 0.000468
  node_crea time: 0.034936
    pred time: 0.007989
    thmpred time: 0.000001
    mc time: 0.036725
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "APPEND", DB.fetch "list" "list_nchotomy", DB.fetch "list" "EL", numpairTheory.tactictoe_thm_4, numpairTheory.nfoldl_def, numpairTheory.tactictoe_thm_2, numpairTheory.tactictoe_thm_3, pred_setTheory.tactictoe_thm_33, DB.fetch "list" "list_Axiom_old", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "list_Axiom", DB.fetch "list" "EVERY_DEF"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005009

FORALL_LIST
proof length: 2
proof time: 0.01316
Statistics
  infstep : 22
  nodes   : 3
  maxdepth: 2
Time: 0.304314
  inferstep time: 0.269157
  node_find time: 0.00073
  node_crea time: 0.017607
    pred time: 0.005704
    thmpred time: 0.000001
    mc time: 0.022212
    inst time: 0.0
Proof found: simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "list_INDUCT", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "list_Axiom", DB.fetch "list" "datatype_list", DB.fetch "list" "APPEND", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_nchotomy", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "MAP"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01915

list_CASES
proof length: 1
proof time: 0.065706
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.083764
  inferstep time: 0.07414
  node_find time: 0.000036
  node_crea time: 0.00712
    pred time: 0.002654
    thmpred time: 0.0
    mc time: 0.005465
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "FORALL_LIST" , DB.fetch "list" "list_INDUCT" , DB.fetch "list" "APPEND" , DB.fetch "list" "list_nchotomy" , DB.fetch "list" "tactictoe_thm_2" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR" , DB.fetch "list" "list_induction" , DB.fetch "list" "list_INDUCT0" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "LIST_TO_SET_DEF" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "FILTER" , DB.fetch "list" "FLAT" , DB.fetch "list" "INDEX_FIND_def" , DB.fetch "list" "LENGTH"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004372

list_case_compute
proof length: 2
proof time: 0.093143
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.251273
  inferstep time: 0.21975
  node_find time: 0.000156
  node_crea time: 0.023338
    pred time: 0.005914
    thmpred time: 0.000001
    mc time: 0.01532
    inst time: 0.0
Proof found: boolLib.HO_MATCH_MP_TAC (TypeBase.induction_of (Parse.Type [HolKernel.QUOTE " (*#loc 1 3903*):'a list"])) THEN metisTools.METIS_TAC [DB.fetch "list" "list_case_def", DB.fetch "list" "EL", DB.fetch "list" "list_case_cong", DB.fetch "list" "NULL_DEF", DB.fetch "list" "NULL", DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "APPEND"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037186

LIST_NOT_EQ
proof length: 2
proof time: 0.004377
Statistics
  infstep : 10
  nodes   : 4
  maxdepth: 2
Time: 0.312636
  inferstep time: 0.269775
  node_find time: 0.000416
  node_crea time: 0.034645
    pred time: 0.011733
    thmpred time: 0.000001
    mc time: 0.022146
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN BasicProvers.SRW_TAC [] [pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, numeralTheory.numeral_distrib, numeralTheory.numeral_lt, numeralTheory.numeral_lte, satTheory.AND_INV_IMP, satTheory.OR_DUAL2, satTheory.OR_DUAL3, satTheory.AND_INV2, DB.fetch "list" "NULL_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "LIST_TO_SET_DEF", pred_setTheory.EMPTY_applied]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.081328

NOT_EQ_LIST
proof length: 4
proof time: 0.003184
Statistics
  infstep : 15
  nodes   : 9
  maxdepth: 4
Time: 0.503501
  inferstep time: 0.4263
  node_find time: 0.000582
  node_crea time: 0.062086
    pred time: 0.012557
    thmpred time: 0.000001
    mc time: 0.048747
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN boolLib.STRIP_TAC THEN
  boolLib.STRIP_TAC THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "APPEND", numpairTheory.napp_def, DB.fetch "list" "MAP2", DB.fetch "list" "tactictoe_thm_1", DB.fetch "list" "MAP2_DEF", DB.fetch "list" "MAP2_ind", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "list_distinct", DB.fetch "list" "NULL"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.047911

EQ_LIST
proof length: 1
proof time: 0.060006
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.076924
  inferstep time: 0.064962
  node_find time: 0.000042
  node_crea time: 0.008545
    pred time: 0.002756
    thmpred time: 0.000001
    mc time: 0.007435
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LIST_NOT_EQ" , DB.fetch "list" "NOT_EQ_LIST" , DB.fetch "list" "APPEND" , numpairTheory.napp_def , DB.fetch "list" "MAP2_ind" , DB.fetch "list" "MAP2" , DB.fetch "list" "tactictoe_thm_1" , DB.fetch "list" "MAP2_DEF" , DB.fetch "list" "FORALL_LIST" , DB.fetch "list" "list_case_cong" , DB.fetch "list" "list_induction" , DB.fetch "list" "list_INDUCT" , DB.fetch "list" "list_INDUCT0" , DB.fetch "list" "CONS_11" , DB.fetch "list" "list_size_def" , DB.fetch "list" "list_case_def"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.022908

CONS
proof length: 3
proof time: 0.093395
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.236487
  inferstep time: 0.196558
  node_find time: 0.000212
  node_crea time: 0.028399
    pred time: 0.009972
    thmpred time: 0.000002
    mc time: 0.02221
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "list_case_compute", DB.fetch "list" "NULL", DB.fetch "list" "NULL_DEF", DB.fetch "list" "EL", DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "list_distinct", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_case_cong", DB.fetch "list" "list_INDUCT", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "MAP2_ind", DB.fetch "list" "list_case_def"], metisTools.METIS_TAC [DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "list_case_compute", DB.fetch "list" "NULL", DB.fetch "list" "NULL_DEF", DB.fetch "list" "EL", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "APPEND", DB.fetch "list" "list_CASES", DB.fetch "list" "list_induction"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.097483

APPEND_NIL
proof length: 2
proof time: 0.089939
Statistics
  infstep : 30
  nodes   : 8
  maxdepth: 3
Time: 0.529966
  inferstep time: 0.469142
  node_find time: 0.001101
  node_crea time: 0.047408
    pred time: 0.020852
    thmpred time: 0.0
    mc time: 0.023615
    inst time: 0.0
Proof found: boolLib.HO_MATCH_MP_TAC (TypeBase.induction_of (Parse.Type [HolKernel.QUOTE " (*#loc 1 3903*):'a list"])) THEN metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_CASES", DB.fetch "list" "CONS", DB.fetch "list" "list_case_cong", DB.fetch "list" "MAP2_ind", DB.fetch "list" "list_case_def", DB.fetch "list" "NULL_DEF"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.03429

APPEND_ASSOC
proof length: 3
proof time: 0.072076
Statistics
  infstep : 28
  nodes   : 8
  maxdepth: 2
Time: 0.444347
  inferstep time: 0.372331
  node_find time: 0.001009
  node_crea time: 0.056004
    pred time: 0.024848
    thmpred time: 0.000001
    mc time: 0.028826
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "FLAT", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "list_nchotomy", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "LENGTH"], metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "LENGTH", DB.fetch "list" "LIST_TO_SET_DEF"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031861

LENGTH_APPEND
proof length: 4
proof time: 0.001628
Statistics
  infstep : 94
  nodes   : 15
  maxdepth: 3
Time: 1.361491
  inferstep time: 1.150284
  node_find time: 0.004665
  node_crea time: 0.169592
    pred time: 0.060915
    thmpred time: 0.000006
    mc time: 0.097409
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "FLAT", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "SUM", DB.fetch "list" "list_size_def", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "list_nchotomy", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", arithmeticTheory.tactictoe_thm_52, arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "SUM", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "EVERY_DEF"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035083

MAP_APPEND
proof length: 4
proof time: 0.043424
Statistics
  infstep : 172
  nodes   : 32
  maxdepth: 4
Time: 1.986919
  inferstep time: 1.670756
  node_find time: 0.008659
  node_crea time: 0.254563
    pred time: 0.080108
    thmpred time: 0.000003
    mc time: 0.134288
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "FLAT", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "MAP2", DB.fetch "list" "tactictoe_thm_1", DB.fetch "list" "MAP2_DEF", DB.fetch "list" "list_case_def"],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "LENGTH", DB.fetch "list" "NULL_DEF", DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "EVERY_DEF"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.060304

MAP_ID
Statistics
  infstep : 1263
  nodes   : 167
  maxdepth: 5
Time: 10.046701
  inferstep time: 8.565808
  node_find time: 0.133743
  node_crea time: 1.090493
    pred time: 0.465672
    thmpred time: 0.000026
    mc time: 0.300219
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033863

LENGTH_MAP
proof length: 3
proof time: 0.088346
Statistics
  infstep : 14
  nodes   : 7
  maxdepth: 3
Time: 0.531989
  inferstep time: 0.462558
  node_find time: 0.000688
  node_crea time: 0.043735
    pred time: 0.015226
    thmpred time: 0.000001
    mc time: 0.041026
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_ID", DB.fetch "list" "list_size_def", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_case_def", DB.fetch "list" "MAP2", DB.fetch "list" "tactictoe_thm_1", DB.fetch "list" "MAP2_DEF", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "list_case_cong", DB.fetch "list" "MAP2_ind", DB.fetch "list" "INDEX_FIND_def"], BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_ID", DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_CASES", DB.fetch "list" "list_INDUCT", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_Axiom_old"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.028441

MAP_EQ_NIL
proof length: 3
proof time: 0.004595
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 2
Time: 0.478981
  inferstep time: 0.400279
  node_find time: 0.000674
  node_crea time: 0.050221
    pred time: 0.018234
    thmpred time: 0.000002
    mc time: 0.045851
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_ID", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_case_def", DB.fetch "list" "MAP2", DB.fetch "list" "tactictoe_thm_1", DB.fetch "list" "MAP2_DEF", DB.fetch "list" "list_size_def", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "list_case_cong", DB.fetch "list" "MAP2_ind", DB.fetch "list" "LENGTH", DB.fetch "list" "APPEND"], BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.023037

MAP_EQ_CONS
proof length: 4
proof time: 0.114526
Statistics
  infstep : 219
  nodes   : 38
  maxdepth: 4
Time: 3.159489
  inferstep time: 2.748919
  node_find time: 0.01302
  node_crea time: 0.32372
    pred time: 0.104553
    thmpred time: 0.000006
    mc time: 0.159779
    inst time: 0.0
Proof found: simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "MAP", pred_setTheory.INJ_SUBSET, DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_APPEND", optionTheory.OPTREL_def, pred_setTheory.tactictoe_thm_74, arithmeticTheory.MODEQ_MULT_CONG, arithmeticTheory.MODEQ_PLUS_CONG, DB.fetch "list" "MAP_ID", DB.fetch "list" "list_CASES", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF"],
  BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077887

MAP_EQ_SING
proof length: 1
proof time: 0.003092
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.123147
  inferstep time: 0.11141
  node_find time: 0.000152
  node_crea time: 0.008055
    pred time: 0.002804
    thmpred time: 0.0
    mc time: 0.006306
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "MAP_EQ_CONS" , DB.fetch "list" "MAP_EQ_NIL" , DB.fetch "list" "MAP" , DB.fetch "list" "LENGTH_MAP" , DB.fetch "list" "MAP_APPEND" , DB.fetch "list" "MAP_ID" , optionTheory.OPTREL_def , pred_setTheory.tactictoe_thm_74 , arithmeticTheory.MODEQ_MULT_CONG , arithmeticTheory.MODEQ_PLUS_CONG , DB.fetch "list" "list_nchotomy" , DB.fetch "list" "list_CASES" , DB.fetch "list" "tactictoe_thm_2" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR" , DB.fetch "list" "FORALL_LIST" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006096

MAP_EQ_f
proof length: 7
proof time: 0.130941
Statistics
  infstep : 503
  nodes   : 148
  maxdepth: 6
Time: 9.928307
  inferstep time: 7.478564
  node_find time: 0.059648
  node_crea time: 1.915577
    pred time: 0.45675
    thmpred time: 0.000018
    mc time: 1.079499
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "MAP", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_APPEND", pred_setTheory.SUM_IMAGE_CONG, optionTheory.OPTION_BIND_cong, optionTheory.OPTION_MAP2_cong, optionTheory.OPTION_MAP_CONG, combinTheory.UPD_SAME_KEY_UNWIND, ind_typeTheory.INJF_INJ, ind_typeTheory.INJP, ind_typeTheory.INJP_INJ],
  BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THENL
  [metisTools.METIS_TAC [combinTheory.UPD_SAME_KEY_UNWIND, ind_typeTheory.INJP, pred_setTheory.SUM_IMAGE_CONG, optionTheory.OPTION_BIND_cong, optionTheory.OPTION_MAP2_cong, optionTheory.OPTION_MAP_CONG, ind_typeTheory.INJF_INJ, ind_typeTheory.INJP_INJ, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43],
  metisTools.METIS_TAC [pred_setTheory.SUM_IMAGE_CONG, optionTheory.OPTION_BIND_cong, optionTheory.OPTION_MAP2_cong, optionTheory.OPTION_MAP_CONG, combinTheory.UPD_SAME_KEY_UNWIND, ind_typeTheory.INJF_INJ, ind_typeTheory.INJP, ind_typeTheory.INJP_INJ, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43]]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030743

MAP_o
proof length: 6
proof time: 0.045171
Statistics
  infstep : 1575
  nodes   : 150
  maxdepth: 6
Time: 9.409857
  inferstep time: 6.748569
  node_find time: 0.236432
  node_crea time: 1.930171
    pred time: 0.388094
    thmpred time: 0.000039
    mc time: 1.018635
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")] THEN boolLib.CONV_TAC boolLib.FUN_EQ_CONV THEN
  BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")] THEN
  BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP_ID", combinTheory.o_ASSOC, combinTheory.o_DEF, combinTheory.o_THM, pred_setTheory.BIJ_INV, pred_setTheory.IMAGE_COMPOSE, pred_setTheory.IMAGE_IMAGE, pred_setTheory.PREIMAGE_COMP, pred_setTheory.SUM_IMAGE_INJ_o],
  BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.075636

MAP_MAP_o
proof length: 1
proof time: 0.057521
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.066554
  inferstep time: 0.049317
  node_find time: 0.000065
  node_crea time: 0.009385
    pred time: 0.002923
    thmpred time: 0.0
    mc time: 0.011425
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "MAP_o" , DB.fetch "list" "LENGTH_MAP" , DB.fetch "list" "MAP_EQ_NIL" , DB.fetch "list" "MAP_EQ_CONS" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "MAP_EQ_f" , DB.fetch "list" "MAP" , DB.fetch "list" "MAP_APPEND" , DB.fetch "list" "MAP_ID" , combinTheory.o_THM , combinTheory.o_ASSOC , combinTheory.o_DEF , pred_setTheory.BIJ_INV , pred_setTheory.IMAGE_COMPOSE , pred_setTheory.IMAGE_IMAGE , pred_setTheory.PREIMAGE_COMP])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.096202

EL_MAP
Statistics
  infstep : 751
  nodes   : 140
  maxdepth: 6
Time: 10.000372
  inferstep time: 8.007969
  node_find time: 0.091025
  node_crea time: 1.665721
    pred time: 0.468798
    thmpred time: 0.000031
    mc time: 0.780716
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.061989

EL_APPEND_EQN
Statistics
  infstep : 781
  nodes   : 98
  maxdepth: 5
Time: 10.034104
  inferstep time: 8.363761
  node_find time: 0.089909
  node_crea time: 1.339534
    pred time: 0.400666
    thmpred time: 0.000026
    mc time: 0.564261
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.110969

MAP_TL
proof length: 3
proof time: 0.082063
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.22419
  inferstep time: 0.185603
  node_find time: 0.000328
  node_crea time: 0.023614
    pred time: 0.007693
    thmpred time: 0.000001
    mc time: 0.023309
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "NULL", DB.fetch "list" "NULL_DEF", DB.fetch "list" "CONS", DB.fetch "list" "list_case_compute", DB.fetch "list" "TL", DB.fetch "list" "EL", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_f"], metisTools.METIS_TAC [DB.fetch "list" "TL", DB.fetch "list" "MAP", DB.fetch "list" "NULL", DB.fetch "list" "NULL_DEF", DB.fetch "list" "CONS", DB.fetch "list" "list_case_compute", DB.fetch "list" "EL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_APPEND"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030989

EVERY_EL
Statistics
  infstep : 716
  nodes   : 157
  maxdepth: 7
Time: 10.007439
  inferstep time: 7.866943
  node_find time: 0.097092
  node_crea time: 1.772355
    pred time: 0.376922
    thmpred time: 0.000026
    mc time: 0.794134
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.343148

EVERY_CONJ
proof length: 4
proof time: 0.011017
Statistics
  infstep : 32
  nodes   : 15
  maxdepth: 4
Time: 0.909233
  inferstep time: 0.799327
  node_find time: 0.002755
  node_crea time: 0.084313
    pred time: 0.025996
    thmpred time: 0.000004
    mc time: 0.046068
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [whileTheory.WHILE_RULE, DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_DEF", pred_setTheory.GSPEC_AND, DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "list_INDUCT", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP_ID", DB.fetch "list" "EL", DB.fetch "list" "APPEND"] THEN boolLib.EQ_TAC THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "list_INDUCT", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "APPEND", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING"]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.148449

EVERY_MEM
proof length: 3
proof time: 0.004857
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.376393
  inferstep time: 0.328033
  node_find time: 0.000491
  node_crea time: 0.027368
    pred time: 0.009725
    thmpred time: 0.000002
    mc time: 0.030172
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.087931

EVERY_MAP
proof length: 4
proof time: 0.008227
Statistics
  infstep : 38
  nodes   : 15
  maxdepth: 4
Time: 0.993042
  inferstep time: 0.830079
  node_find time: 0.003454
  node_crea time: 0.125798
    pred time: 0.043688
    thmpred time: 0.000002
    mc time: 0.067869
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_TL", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP", DB.fetch "list" "MAP_APPEND", combinTheory.o_DEF, combinTheory.o_ABS_L] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM],
  simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.120539

EVERY_SIMP
proof length: 4
proof time: 0.120975
Statistics
  infstep : 23
  nodes   : 12
  maxdepth: 3
Time: 0.808346
  inferstep time: 0.688221
  node_find time: 0.002087
  node_crea time: 0.099912
    pred time: 0.04947
    thmpred time: 0.000001
    mc time: 0.034725
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_ID", numpairTheory.nfoldl_def, oneTheory.tactictoe_thm_0, pred_setTheory.IMAGE_ID, prim_recTheory.PRIM_REC_FUN, combinTheory.FAIL_DEF, combinTheory.K_DEF, pred_setTheory.BIJ_ID, pred_setTheory.INJ_ID, pred_setTheory.SURJ_ID, oneTheory.one_TY_DEF], BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN
  metisTools.METIS_TAC [DB.fetch "list" "list_CASES", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "APPEND", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "list_INDUCT", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EL", DB.fetch "list" "MAP_ID"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.139906

MONO_EVERY
proof length: 1
proof time: 0.003204
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.153613
  inferstep time: 0.11468
  node_find time: 0.000255
  node_crea time: 0.008388
    pred time: 0.002563
    thmpred time: 0.0
    mc time: 0.00976
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "EVERY_CONJ" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EVERY_SIMP" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "list_INDUCT" , DB.fetch "list" "FORALL_LIST" , DB.fetch "list" "list_induction" , DB.fetch "list" "MAP_EQ_f" , DB.fetch "list" "list_INDUCT0" , DB.fetch "list" "MAP_EQ_CONS" , DB.fetch "list" "MAP_ID" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.05636

EXISTS_MEM
proof length: 4
proof time: 0.005863
Statistics
  infstep : 15
  nodes   : 9
  maxdepth: 3
Time: 0.664995
  inferstep time: 0.552933
  node_find time: 0.001209
  node_crea time: 0.080886
    pred time: 0.029287
    thmpred time: 0.0
    mc time: 0.05888
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM] THEN
  mesonLib.MESON_TAC []]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.059037

EXISTS_MAP
proof length: 3
proof time: 0.086268
Statistics
  infstep : 86
  nodes   : 43
  maxdepth: 5
Time: 3.732929
  inferstep time: 3.25438
  node_find time: 0.009061
  node_crea time: 0.397284
    pred time: 0.15648
    thmpred time: 0.000012
    mc time: 0.156222
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MAP", combinTheory.o_DEF, combinTheory.o_ABS_L, combinTheory.o_ABS_R, ind_typeTheory.CONSTR_REC, ind_typeTheory.ZRECSPACE_def, DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o"], BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.112059

EXISTS_SIMP
proof length: 5
proof time: 0.052025
Statistics
  infstep : 22
  nodes   : 13
  maxdepth: 4
Time: 1.074627
  inferstep time: 0.943106
  node_find time: 0.001914
  node_crea time: 0.098105
    pred time: 0.037682
    thmpred time: 0.000004
    mc time: 0.059405
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "MAP_ID", numpairTheory.nfoldl_def, oneTheory.tactictoe_thm_0, pred_setTheory.IMAGE_ID, prim_recTheory.PRIM_REC_FUN, combinTheory.FAIL_DEF, combinTheory.K_DEF, pred_setTheory.BIJ_ID, pred_setTheory.INJ_ID, pred_setTheory.SURJ_ID, oneTheory.one_TY_DEF, ind_typeTheory.ISO_REFL] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "list_Axiom", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "list_CASES", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "NULL", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "list_distinct"],
  simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_46, DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_CASES", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_46, DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_nchotomy", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_CASES", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.128467

MONO_EXISTS
proof length: 3
proof time: 0.167016
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.289004
  inferstep time: 0.26105
  node_find time: 0.000366
  node_crea time: 0.018503
    pred time: 0.007684
    thmpred time: 0.000001
    mc time: 0.012478
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "list_INDUCT", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "MAP2_ind", DB.fetch "list" "list_case_cong", DB.fetch "list" "MAP", DB.fetch "list" "EVERY_DEF"], metisTools.METIS_TAC [DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_INDUCT", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "APPEND", DB.fetch "list" "list_CASES", DB.fetch "list" "MAP_EQ_SING"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057805

EVERY_NOT_EXISTS
proof length: 3
proof time: 0.100238
Statistics
  infstep : 21
  nodes   : 8
  maxdepth: 3
Time: 0.528953
  inferstep time: 0.446243
  node_find time: 0.001833
  node_crea time: 0.062074
    pred time: 0.019848
    thmpred time: 0.000001
    mc time: 0.040905
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.GEN_TAC THEN BasicProvers.SRW_TAC [] [whileTheory.WHILE_RULE, DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "FOLDL"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "list_nchotomy", DB.fetch "list" "list_CASES", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "MONO_EXISTS"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.113849

EXISTS_NOT_EVERY
proof length: 3
proof time: 0.040678
Statistics
  infstep : 8
  nodes   : 4
  maxdepth: 2
Time: 0.429473
  inferstep time: 0.383909
  node_find time: 0.000689
  node_crea time: 0.029963
    pred time: 0.01156
    thmpred time: 0.000001
    mc time: 0.021371
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EXISTS_DEF", whileTheory.WHILE_RULE, DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "NOT_NIL_CONS"], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.147546

MEM_APPEND
proof length: 5
proof time: 0.006977
Statistics
  infstep : 247
  nodes   : 37
  maxdepth: 4
Time: 2.525423
  inferstep time: 2.000351
  node_find time: 0.029865
  node_crea time: 0.368928
    pred time: 0.10317
    thmpred time: 0.000005
    mc time: 0.203695
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "FLAT", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026232

MEM_FILTER
proof length: 7
proof time: 0.075599
Statistics
  infstep : 406
  nodes   : 62
  maxdepth: 5
Time: 3.748222
  inferstep time: 3.065462
  node_find time: 0.051984
  node_crea time: 0.453972
    pred time: 0.139105
    thmpred time: 0.000019
    mc time: 0.172783
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "FILTER", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "MAP", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "FORALL_LIST"],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "FILTER", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38] THENL
  [simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_33, DB.fetch "list" "list_Axiom_old", DB.fetch "list" "FORALL_LIST"],
  metisTools.METIS_TAC [DB.fetch "list" "MEM_APPEND", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48]]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.07723

MEM_FLAT
proof length: 4
proof time: 0.165445
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 3
Time: 0.490574
  inferstep time: 0.442006
  node_find time: 0.000792
  node_crea time: 0.034215
    pred time: 0.01488
    thmpred time: 0.000002
    mc time: 0.019038
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16854*)L"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "list_nchotomy", DB.fetch "list" "list_CASES", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "APPEND", DB.fetch "list" "EXISTS_SIMP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_APPEND", pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_42] THEN
  metisTools.METIS_TAC [DB.fetch "list" "MEM_FILTER", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_APPEND", pred_setTheory.tactictoe_thm_21, DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067081

FLAT_APPEND
proof length: 3
proof time: 0.096319
Statistics
  infstep : 13
  nodes   : 7
  maxdepth: 3
Time: 0.409951
  inferstep time: 0.357999
  node_find time: 0.001187
  node_crea time: 0.037607
    pred time: 0.016884
    thmpred time: 0.000004
    mc time: 0.01799
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [metisTools.METIS_TAC [DB.fetch "list" "FLAT", DB.fetch "list" "APPEND", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "LENGTH", DB.fetch "list" "MAP", DB.fetch "list" "list_nchotomy"], metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST", numpairTheory.napp_def, DB.fetch "list" "APPEND_NIL", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062692

FLAT_compute
proof length: 1
proof time: 0.003981
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.140955
  inferstep time: 0.128729
  node_find time: 0.000172
  node_crea time: 0.0085
    pred time: 0.003131
    thmpred time: 0.0
    mc time: 0.005718
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "FLAT" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "FLAT_APPEND" , DB.fetch "list" "MAP2" , DB.fetch "list" "tactictoe_thm_1" , DB.fetch "list" "MAP2_DEF" , DB.fetch "list" "MAP2_ind" , pred_setTheory.partition_elements_disjoint , DB.fetch "list" "LIST_TO_SET" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "FILTER" , DB.fetch "list" "FORALL_LIST" , DB.fetch "list" "INDEX_FIND_def" , DB.fetch "list" "LENGTH" , DB.fetch "list" "LIST_TO_SET_DEF" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005511

EVERY_APPEND
proof length: 4
proof time: 0.090331
Statistics
  infstep : 16
  nodes   : 8
  maxdepth: 3
Time: 0.629963
  inferstep time: 0.562816
  node_find time: 0.001637
  node_crea time: 0.04975
    pred time: 0.021642
    thmpred time: 0.000002
    mc time: 0.02234
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL"], BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC] THEN
  metisTools.METIS_TAC [DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067058

EXISTS_APPEND
proof length: 3
proof time: 0.176498
Statistics
  infstep : 20
  nodes   : 11
  maxdepth: 3
Time: 0.923572
  inferstep time: 0.812302
  node_find time: 0.00217
  node_crea time: 0.089885
    pred time: 0.034833
    thmpred time: 0.000003
    mc time: 0.034331
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "FLAT"], metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ", DB.fetch "list" "NOT_EQ_LIST"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063694

NOT_EVERY
proof length: 1
proof time: 0.075579
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.107756
  inferstep time: 0.083736
  node_find time: 0.000094
  node_crea time: 0.020817
    pred time: 0.002778
    thmpred time: 0.0
    mc time: 0.01828
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [whileTheory.LEAST_DEF , DB.fetch "list" "EVERY_NOT_EXISTS" , DB.fetch "list" "EVERY_CONJ" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "MONO_EVERY" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EVERY_APPEND" , DB.fetch "list" "EXISTS_NOT_EVERY" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EXISTS_SIMP" , DB.fetch "list" "EXISTS_MAP" , DB.fetch "list" "EXISTS_MEM" , DB.fetch "list" "MONO_EXISTS" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "EXISTS_APPEND"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058449

NOT_EXISTS
proof length: 1
proof time: 0.057745
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.112384
  inferstep time: 0.086944
  node_find time: 0.000125
  node_crea time: 0.022404
    pred time: 0.004013
    thmpred time: 0.000001
    mc time: 0.018105
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "NOT_EVERY" , whileTheory.LEAST_DEF , DB.fetch "list" "EXISTS_NOT_EVERY" , DB.fetch "list" "EXISTS_MEM" , DB.fetch "list" "MONO_EXISTS" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "EXISTS_APPEND" , DB.fetch "list" "EXISTS_MAP" , DB.fetch "list" "EVERY_NOT_EXISTS" , DB.fetch "list" "EXISTS_SIMP" , DB.fetch "list" "EVERY_CONJ" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "EVERY_SIMP" , DB.fetch "list" "MONO_EVERY"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.054991

MEM_MAP
proof length: 7
proof time: 0.136416
Statistics
  infstep : 36
  nodes   : 19
  maxdepth: 4
Time: 1.595021
  inferstep time: 1.368412
  node_find time: 0.003976
  node_crea time: 0.178683
    pred time: 0.064305
    thmpred time: 0.000007
    mc time: 0.08064
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_TL", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "EXISTS_MEM"], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM] THEN
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_21, DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_42]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.114776

LENGTH_NIL
proof length: 3
proof time: 0.056371
Statistics
  infstep : 11
  nodes   : 6
  maxdepth: 2
Time: 0.571603
  inferstep time: 0.515849
  node_find time: 0.00103
  node_crea time: 0.039929
    pred time: 0.016609
    thmpred time: 0.000002
    mc time: 0.02448
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "SUM", DB.fetch "list" "list_size_def", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "EXISTS_SIMP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_CASES", DB.fetch "list" "list_INDUCT", DB.fetch "list" "SUM", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.026128

LENGTH_NIL_SYM
proof length: 1
proof time: 0.060398
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.097232
  inferstep time: 0.081311
  node_find time: 0.000148
  node_crea time: 0.012269
    pred time: 0.003615
    thmpred time: 0.0
    mc time: 0.008262
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LENGTH_NIL" , DB.fetch "list" "LENGTH" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "LENGTH_MAP" , DB.fetch "list" "EL_APPEND_EQN" , DB.fetch "list" "LENGTH_APPEND" , DB.fetch "list" "APPEND" , DB.fetch "list" "APPEND_NIL" , DB.fetch "list" "EVERY_SIMP" , DB.fetch "list" "EXISTS_SIMP" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR" , DB.fetch "list" "FORALL_LIST" , DB.fetch "list" "MAP_EQ_NIL" , DB.fetch "list" "MAP_EQ_SING"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004756

NULL_EQ
proof length: 3
proof time: 0.116686
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 2
Time: 0.308748
  inferstep time: 0.266082
  node_find time: 0.000661
  node_crea time: 0.032648
    pred time: 0.011244
    thmpred time: 0.000002
    mc time: 0.020498
    inst time: 0.0
Proof found: BasicProvers.Induct THENL [metisTools.METIS_TAC [DB.fetch "list" "NULL_DEF", DB.fetch "list" "NULL", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "list_case_compute", DB.fetch "list" "list_nchotomy", DB.fetch "list" "MAP", DB.fetch "list" "list_case_def", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FOLDL"], metisTools.METIS_TAC [DB.fetch "list" "NULL_DEF", DB.fetch "list" "NULL", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "list_case_compute", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "APPEND", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_CASES", DB.fetch "list" "list_INDUCT", arithmeticTheory.tactictoe_thm_11]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030688

NULL_LENGTH
proof length: 1
proof time: 0.06609
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.121995
  inferstep time: 0.083874
  node_find time: 0.000209
  node_crea time: 0.031326
    pred time: 0.00446
    thmpred time: 0.0
    mc time: 0.029343
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "CONS" , DB.fetch "list" "MAP_TL" , DB.fetch "list" "NULL_EQ" , DB.fetch "list" "list_case_compute" , DB.fetch "list" "LENGTH_NIL" , DB.fetch "list" "LENGTH_NIL_SYM" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "LENGTH_MAP" , DB.fetch "list" "LENGTH" , DB.fetch "list" "EL_APPEND_EQN" , DB.fetch "list" "LENGTH_APPEND" , DB.fetch "list" "NULL_DEF" , DB.fetch "list" "NULL" , DB.fetch "list" "EL" , DB.fetch "list" "list_nchotomy"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.01113

LENGTH_CONS
proof length: 3
proof time: 0.003723
Statistics
  infstep : 155
  nodes   : 38
  maxdepth: 4
Time: 3.237605
  inferstep time: 2.819818
  node_find time: 0.017465
  node_crea time: 0.313692
    pred time: 0.103685
    thmpred time: 0.000007
    mc time: 0.124442
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "NULL_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "list_CASES", DB.fetch "list" "SUM", DB.fetch "list" "MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST"], BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.10371

LENGTH_EQ_CONS
proof length: 5
proof time: 0.049135
Statistics
  infstep : 76
  nodes   : 23
  maxdepth: 4
Time: 1.53855
  inferstep time: 1.330508
  node_find time: 0.008334
  node_crea time: 0.150362
    pred time: 0.049309
    thmpred time: 0.000007
    mc time: 0.074999
    inst time: 0.0
Proof found: simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN] THEN boolLib.REPEAT boolLib.STRIP_TAC THENL
  [BasicProvers.SRW_TAC [] [pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, DB.fetch "list" "list_INDUCT", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_induction", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "list_Axiom", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR"],
  boolLib.POP_ASSUM boolLib.MP_TAC THEN
  metisTools.METIS_TAC [DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "NULL_LENGTH", DB.fetch "list" "LENGTH_NIL_SYM", pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, DB.fetch "list" "LENGTH", DB.fetch "list" "EL_APPEND_EQN"]]
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.307321

LENGTH_EQ_SUM
Statistics
  infstep : 1142
  nodes   : 161
  maxdepth: 6
Time: 10.035263
  inferstep time: 8.309998
  node_find time: 0.173063
  node_crea time: 1.085356
    pred time: 0.292438
    thmpred time: 0.000021
    mc time: 0.413081
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.119762

LENGTH_EQ_NUM
proof length: 1
proof time: 0.002369
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 1
Time: 0.161785
  inferstep time: 0.136393
  node_find time: 0.000542
  node_crea time: 0.019277
    pred time: 0.007421
    thmpred time: 0.000001
    mc time: 0.009101
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LENGTH_EQ_SUM" , DB.fetch "list" "LENGTH_CONS" , DB.fetch "list" "LENGTH_APPEND" , DB.fetch "list" "EL_APPEND_EQN" , arithmeticTheory.ABS_DIFF_SUMS , ind_typeTheory.INJN_INJ , pred_setTheory.COUNT_11 , DB.fetch "list" "APPEND" , DB.fetch "list" "EVERY_APPEND" , DB.fetch "list" "APPEND_ASSOC" , DB.fetch "list" "EXISTS_APPEND" , DB.fetch "list" "FLAT_APPEND" , DB.fetch "list" "MAP_APPEND" , DB.fetch "list" "MEM_APPEND" , DB.fetch "list" "LENGTH" , DB.fetch "list" "FLAT" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009213

LENGTH_EQ_NIL
proof length: 1
proof time: 0.006705
Statistics
  infstep : 23
  nodes   : 8
  maxdepth: 3
Time: 0.605471
  inferstep time: 0.539583
  node_find time: 0.002406
  node_crea time: 0.04918
    pred time: 0.020836
    thmpred time: 0.000003
    mc time: 0.019212
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ ( DB.fetch "list" "LENGTH_NIL" ) ])
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.195683

CONS_ACYCLIC
proof length: 3
proof time: 0.006468
Statistics
  infstep : 68
  nodes   : 16
  maxdepth: 3
Time: 1.375209
  inferstep time: 1.251984
  node_find time: 0.007186
  node_crea time: 0.081541
    pred time: 0.036973
    thmpred time: 0.000003
    mc time: 0.026522
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "NULL", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "list_distinct", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "LENGTH", DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MAP", DB.fetch "list" "NULL_DEF"], BasicProvers.SRW_TAC [] [pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.027325

APPEND_eq_NIL
proof length: 8
proof time: 0.009584
Statistics
  infstep : 158
  nodes   : 26
  maxdepth: 4
Time: 1.972996
  inferstep time: 1.665766
  node_find time: 0.017348
  node_crea time: 0.203958
    pred time: 0.091457
    thmpred time: 0.000007
    mc time: 0.049342
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ"] THENL [BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN],
  BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC]], BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ"],
  BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC]]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.109527

MAP_EQ_APPEND
Statistics
  infstep : 577
  nodes   : 143
  maxdepth: 6
Time: 10.013838
  inferstep time: 8.509126
  node_find time: 0.086389
  node_crea time: 1.169984
    pred time: 0.387173
    thmpred time: 0.000034
    mc time: 0.320557
    inst time: 0.0
Proof status: Time Out
Org tac number: 9
Original proof time: 0.0
Replaying proof: 0.320082

APPEND_EQ_SING
proof length: 4
proof time: 0.005872
Statistics
  infstep : 13
  nodes   : 6
  maxdepth: 3
Time: 0.432908
  inferstep time: 0.381553
  node_find time: 0.001326
  node_crea time: 0.034976
    pred time: 0.014358
    thmpred time: 0.000002
    mc time: 0.018338
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 22259*)l1"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "FLAT"], BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "FLAT"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "EQ_LIST", DB.fetch "list" "LIST_NOT_EQ"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034996

APPEND_11
Statistics
  infstep : 844
  nodes   : 168
  maxdepth: 6
Time: 10.003336
  inferstep time: 8.492558
  node_find time: 0.133529
  node_crea time: 1.002274
    pred time: 0.324409
    thmpred time: 0.000019
    mc time: 0.339341
    inst time: 0.0
Proof status: Time Out
Org tac number: 19
Original proof time: 0.0
Replaying proof: 0.491737

APPEND_LENGTH_EQ
proof length: 4
proof time: 0.010037
Statistics
  infstep : 33
  nodes   : 13
  maxdepth: 3
Time: 0.898262
  inferstep time: 0.734294
  node_find time: 0.003815
  node_crea time: 0.120382
    pred time: 0.044141
    thmpred time: 0.000002
    mc time: 0.040798
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "APPEND_11", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND"], BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "APPEND", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EXISTS_APPEND"]]
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.429298
Replaying proof: 0.028175

APPEND_EQ_SELF
Statistics
  infstep : 850
  nodes   : 196
  maxdepth: 6
Time: 10.06524
  inferstep time: 8.396992
  node_find time: 0.151082
  node_crea time: 1.112856
    pred time: 0.342954
    thmpred time: 0.000029
    mc time: 0.395338
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.041788

MEM_SPLIT
Statistics
  infstep : 1018
  nodes   : 236
  maxdepth: 7
Time: 10.114569
  inferstep time: 8.242969
  node_find time: 0.185291
  node_crea time: 1.19144
    pred time: 0.303528
    thmpred time: 0.000022
    mc time: 0.459487
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.425641

LIST_EQ_REWRITE
Statistics
  infstep : 599
  nodes   : 153
  maxdepth: 6
Time: 10.01209
  inferstep time: 8.320791
  node_find time: 0.109425
  node_crea time: 1.192688
    pred time: 0.320018
    thmpred time: 0.000036
    mc time: 0.499202
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.38164

FOLDL_EQ_FOLDR
Statistics
  infstep : 511
  nodes   : 97
  maxdepth: 5
Time: 10.016735
  inferstep time: 8.837123
  node_find time: 0.087514
  node_crea time: 0.793835
    pred time: 0.285492
    thmpred time: 0.000035
    mc time: 0.26189
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.255216

FOLDR_CONS
proof length: 4
proof time: 0.002873
Statistics
  infstep : 17
  nodes   : 8
  maxdepth: 3
Time: 0.763127
  inferstep time: 0.683885
  node_find time: 0.002467
  node_crea time: 0.053185
    pred time: 0.024224
    thmpred time: 0.000002
    mc time: 0.026184
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "FOLDR", DB.fetch "list" "FOLDL_EQ_FOLDR", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MEM_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_TL"],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "FOLDR", DB.fetch "list" "FOLDL_EQ_FOLDR", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MEM_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_TL"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.06445

LENGTH_TL
proof length: 3
proof time: 0.00336
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 2
Time: 0.456449
  inferstep time: 0.369603
  node_find time: 0.001147
  node_crea time: 0.057224
    pred time: 0.015414
    thmpred time: 0.000001
    mc time: 0.047095
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "EL", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "TL", DB.fetch "list" "list_case_compute", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE"], BasicProvers.SRW_TAC [] [DB.fetch "list" "TL", DB.fetch "list" "LENGTH", DB.fetch "list" "CONS", DB.fetch "list" "EL", DB.fetch "list" "MAP_TL", DB.fetch "list" "list_case_compute", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "APPEND", DB.fetch "list" "list_CASES", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "EL_MAP"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034445

FILTER_EQ_NIL
proof length: 4
proof time: 0.05253
Statistics
  infstep : 27
  nodes   : 8
  maxdepth: 3
Time: 0.685958
  inferstep time: 0.610142
  node_find time: 0.003733
  node_crea time: 0.048929
    pred time: 0.021023
    thmpred time: 0.0
    mc time: 0.019494
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "FILTER", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "EVERY_NOT_EXISTS", whileTheory.WHILE_RULE, DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "NOT_CONS_NIL"],
  BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067071

FILTER_NEQ_NIL
proof length: 1
proof time: 0.003286
Statistics
  infstep : 9
  nodes   : 4
  maxdepth: 2
Time: 0.269231
  inferstep time: 0.232602
  node_find time: 0.001404
  node_crea time: 0.027631
    pred time: 0.013257
    thmpred time: 0.000001
    mc time: 0.00837
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "MEM_FILTER" , DB.fetch "list" "FILTER_EQ_NIL" , DB.fetch "list" "FILTER" , DB.fetch "list" "MEM_MAP" , DB.fetch "list" "EXISTS_MEM" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "MEM_SPLIT" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "MAP_EQ_f" , DB.fetch "list" "MEM_APPEND" , DB.fetch "list" "LIST_TO_SET_DEF" , DB.fetch "list" "LIST_TO_SET" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "LENGTH_EQ_NUM" , DB.fetch "list" "LENGTH_EQ_NUM_compute" , DB.fetch "list" "list_CASES" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006296

FILTER_EQ_ID
proof length: 4
proof time: 0.170786
Statistics
  infstep : 11
  nodes   : 6
  maxdepth: 3
Time: 0.468794
  inferstep time: 0.40242
  node_find time: 0.001553
  node_crea time: 0.050396
    pred time: 0.026873
    thmpred time: 0.000002
    mc time: 0.020273
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "FILTER", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "NOT_EXISTS"],
  metisTools.METIS_TAC [DB.fetch "list" "FILTER", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "NOT_EXISTS"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.092226

FILTER_NEQ_ID
proof length: 1
proof time: 0.002313
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.141672
  inferstep time: 0.122936
  node_find time: 0.000275
  node_crea time: 0.014768
    pred time: 0.003992
    thmpred time: 0.0
    mc time: 0.010118
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "FILTER_NEQ_NIL" , DB.fetch "list" "MEM_FILTER" , DB.fetch "list" "FILTER_EQ_NIL" , DB.fetch "list" "FILTER_EQ_ID" , DB.fetch "list" "FILTER" , DB.fetch "list" "MEM_MAP" , DB.fetch "list" "EXISTS_MEM" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "MEM_SPLIT" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "MAP_EQ_f" , DB.fetch "list" "MEM_APPEND" , DB.fetch "list" "LIST_TO_SET_DEF" , DB.fetch "list" "LIST_TO_SET" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "MAP_EQ_CONS" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005924

FILTER_EQ_CONS
Statistics
  infstep : 543
  nodes   : 106
  maxdepth: 6
Time: 10.010597
  inferstep time: 8.067987
  node_find time: 0.115409
  node_crea time: 1.503453
    pred time: 0.496857
    thmpred time: 0.00003
    mc time: 0.511124
    inst time: 0.0
Proof status: Time Out
Org tac number: 21
Replaying proof: 0.026576

FILTER_APPEND_DISTRIB
proof length: 3
proof time: 0.081229
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.359587
  inferstep time: 0.327903
  node_find time: 0.000666
  node_crea time: 0.020312
    pred time: 0.00858
    thmpred time: 0.000002
    mc time: 0.011871
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16854*)L"] THENL [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "FLAT", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "MEM_APPEND"], BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "FILTER", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", relationTheory.tactictoe_thm_24, DB.fetch "list" "FLAT", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MEM_SPLIT", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "APPEND_EQ_SING"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064957

MEM
proof length: 1
proof time: 0.001094
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 1
Time: 0.137531
  inferstep time: 0.117163
  node_find time: 0.000399
  node_crea time: 0.014732
    pred time: 0.005587
    thmpred time: 0.000001
    mc time: 0.007882
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ boolLib.DISJ_ASSOC ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007603

FILTER_EQ_APPEND
Statistics
  infstep : 615
  nodes   : 139
  maxdepth: 6
Time: 10.086718
  inferstep time: 8.490642
  node_find time: 0.116558
  node_crea time: 1.154762
    pred time: 0.399488
    thmpred time: 0.000021
    mc time: 0.324034
    inst time: 0.0
Proof status: Time Out
Org tac number: 47
Replaying proof: 0.35534

EVERY_FILTER
proof length: 4
proof time: 0.115961
Statistics
  infstep : 121
  nodes   : 31
  maxdepth: 4
Time: 2.622344
  inferstep time: 2.271944
  node_find time: 0.019688
  node_crea time: 0.211889
    pred time: 0.074472
    thmpred time: 0.000007
    mc time: 0.084844
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "NOT_EVERY"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "NOT_EXISTS"],
  BasicProvers.SRW_TAC [] [(DB.fetch "pred_set" "INJ_DEF"), (DB.fetch "pred_set" "SUBSET_DEF")]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.091843

EVERY_FILTER_IMP
proof length: 1
proof time: 0.002001
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.143521
  inferstep time: 0.131578
  node_find time: 0.00036
  node_crea time: 0.007534
    pred time: 0.003002
    thmpred time: 0.000001
    mc time: 0.003863
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "EVERY_FILTER" , DB.fetch "list" "FILTER_EQ_ID" , DB.fetch "list" "FILTER_EQ_NIL" , DB.fetch "list" "FILTER_EQ_APPEND" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "FILTER_NEQ_ID" , DB.fetch "list" "FILTER_NEQ_NIL" , DB.fetch "list" "FILTER" , DB.fetch "list" "MEM_FILTER" , DB.fetch "list" "FILTER_APPEND_DISTRIB" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "MONO_EVERY" , DB.fetch "list" "EVERY_NOT_EXISTS" , DB.fetch "list" "EVERY_CONJ" , DB.fetch "list" "NOT_EVERY" ])
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.086842

FILTER_COND_REWRITE
proof length: 1
proof time: 0.002178
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.150928
  inferstep time: 0.136242
  node_find time: 0.000455
  node_crea time: 0.009604
    pred time: 0.003523
    thmpred time: 0.000001
    mc time: 0.004581
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ ( DB.fetch "pred_set" "INJ_DEF" ) , ( DB.fetch "pred_set" "SUBSET_DEF" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005757

NOT_NULL_MEM
proof length: 1
proof time: 0.057857
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.104722
  inferstep time: 0.093201
  node_find time: 0.000229
  node_crea time: 0.007933
    pred time: 0.002762
    thmpred time: 0.0
    mc time: 0.004992
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "CONS" , DB.fetch "list" "MAP_TL" , DB.fetch "list" "NULL_EQ" , DB.fetch "list" "NULL_LENGTH" , DB.fetch "list" "list_case_compute" , DB.fetch "list" "EXISTS_MEM" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "MAP_EQ_f" , DB.fetch "list" "MEM_APPEND" , DB.fetch "list" "FILTER_NEQ_ID" , DB.fetch "list" "FILTER_NEQ_NIL" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "MEM_MAP" , DB.fetch "list" "MEM_SPLIT" , DB.fetch "list" "MEM" , DB.fetch "list" "MEM_FILTER"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032623

EL_compute
proof length: 3
proof time: 0.115287
Statistics
  infstep : 80
  nodes   : 31
  maxdepth: 4
Time: 1.781749
  inferstep time: 1.407023
  node_find time: 0.012903
  node_crea time: 0.299779
    pred time: 0.086007
    thmpred time: 0.000003
    mc time: 0.140703
    inst time: 0.0
Proof found: BasicProvers.Induct THENL [metisTools.METIS_TAC [DB.fetch "list" "EL", DB.fetch "list" "list_case_compute", DB.fetch "list" "CONS", numeralTheory.numeral_distrib, prim_recTheory.PRE, DB.fetch "list" "LENGTH_TL", DB.fetch "list" "MAP_TL", DB.fetch "list" "HD", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "TL", arithmeticTheory.num_case_compute, pred_setTheory.count_EQN], metisTools.METIS_TAC [DB.fetch "list" "EL", DB.fetch "list" "list_case_compute", DB.fetch "list" "CONS", prim_recTheory.PRE, DB.fetch "list" "LENGTH_TL", DB.fetch "list" "MAP_TL", DB.fetch "list" "HD", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "TL", pred_setTheory.tactictoe_thm_33, prim_recTheory.PRE_DEF, arithmeticTheory.num_case_compute]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.024992

EL_simp
proof length: 2
proof time: 0.126752
Statistics
  infstep : 32
  nodes   : 11
  maxdepth: 3
Time: 1.026494
  inferstep time: 0.866361
  node_find time: 0.005076
  node_crea time: 0.110557
    pred time: 0.042227
    thmpred time: 0.000004
    mc time: 0.064243
    inst time: 0.0
Proof found: boolLib.ASM_REWRITE_TAC [arithmeticTheory.FUNPOW, prim_recTheory.PRE, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.NUMERAL_DEF, arithmeticTheory.BIT1, arithmeticTheory.BIT2] THEN metisTools.METIS_TAC [DB.fetch "list" "EL", DB.fetch "list" "EL_compute", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "CONS", DB.fetch "list" "MAP_TL", DB.fetch "list" "list_case_compute", numeralTheory.tactictoe_thm_2, numeralTheory.tactictoe_thm_3, DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "TL", arithmeticTheory.ADD_CLAUSES, numeralTheory.numeral_add]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004613

EL_restricted
proof length: 2
proof time: 0.04236
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.209245
  inferstep time: 0.187646
  node_find time: 0.000629
  node_crea time: 0.012932
    pred time: 0.005873
    thmpred time: 0.0
    mc time: 0.006812
    inst time: 0.0
Proof found: simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [(DB.fetch "list" "EL"), (DB.fetch "list" "HD"), (DB.fetch "list" "TL")] THEN metisTools.METIS_TAC [DB.fetch "list" "EL", DB.fetch "list" "EL_compute", DB.fetch "list" "HD", DB.fetch "list" "CONS", DB.fetch "list" "list_case_compute", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "EL_simp", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "SUM"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004792

EL_simp_restricted
proof length: 2
proof time: 0.000595
Statistics
  infstep : 5
  nodes   : 3
  maxdepth: 2
Time: 0.270019
  inferstep time: 0.239023
  node_find time: 0.001013
  node_crea time: 0.018396
    pred time: 0.005799
    thmpred time: 0.000001
    mc time: 0.014232
    inst time: 0.0
Proof found: boolLib.ASM_REWRITE_TAC [arithmeticTheory.FACT, prim_recTheory.PRE, numTheory.NOT_SUC, arithmeticTheory.NUMERAL_DEF, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ADD_CLAUSES] THEN boolLib.REWRITE_TAC [boolLib.FUN_EQ_THM, (DB.fetch "list" "EL"), (DB.fetch "list" "TL"), (DB.fetch "list" "HD")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006189

SUM_eq_0
proof length: 4
proof time: 0.184331
Statistics
  infstep : 42
  nodes   : 10
  maxdepth: 3
Time: 0.822497
  inferstep time: 0.713078
  node_find time: 0.006551
  node_crea time: 0.06876
    pred time: 0.031429
    thmpred time: 0.000003
    mc time: 0.025631
    inst time: 0.0
Proof found: BasicProvers.Induct THENL [metisTools.METIS_TAC [DB.fetch "list" "SUM", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_MAP", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "NOT_NULL_MEM", DB.fetch "list" "LENGTH_EQ_NIL"], BasicProvers.SRW_TAC [] [DB.fetch "list" "SUM", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EL_restricted", DB.fetch "list" "EL_simp_restricted", DB.fetch "list" "FOLDR_CONS", pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_37] THEN
  metisTools.METIS_TAC [DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "EL_restricted", DB.fetch "list" "EL_simp_restricted", pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090128

NULL_FILTER
Statistics
  infstep : 1530
  nodes   : 141
  maxdepth: 6
Time: 10.071328
  inferstep time: 7.822366
  node_find time: 0.341248
  node_crea time: 1.028239
    pred time: 0.256979
    thmpred time: 0.000022
    mc time: 0.317373
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.113301

WF_LIST_PRED
Statistics
  infstep : 719
  nodes   : 128
  maxdepth: 6
Time: 10.003321
  inferstep time: 7.997059
  node_find time: 0.184889
  node_crea time: 1.358077
    pred time: 0.418696
    thmpred time: 0.000035
    mc time: 0.509061
    inst time: 0.0
Proof status: Time Out
Org tac number: 16
Original proof time: 0.0
Replaying proof: 0.409305
Replaying proof: 0.011514

LIST_REL_def
Statistics
  infstep : 1530
  nodes   : 159
  maxdepth: 5
Time: 10.024338
  inferstep time: 7.513041
  node_find time: 0.355786
  node_crea time: 1.058433
    pred time: 0.167508
    thmpred time: 0.000016
    mc time: 0.600125
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037978

LIST_REL_mono
proof length: 1
proof time: 0.006721
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 2
Time: 0.627966
  inferstep time: 0.555174
  node_find time: 0.002052
  node_crea time: 0.05663
    pred time: 0.022269
    thmpred time: 0.000002
    mc time: 0.015077
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "LIST_REL_strongind" , DB.fetch "list" "LIST_REL_ind" , DB.fetch "list" "LIST_REL_rules" , DB.fetch "list" "tactictoe_thm_3" , DB.fetch "list" "tactictoe_thm_4" , DB.fetch "list" "LIST_REL_cases" , DB.fetch "list" "tactictoe_thm_5" , DB.fetch "list" "LIST_REL_def" , pairTheory.LEX_MONO , relationTheory.RSUBSET , relationTheory.O_DEF , relationTheory.RINTER , relationTheory.RUNION , pairTheory.LEX_CONG , pairTheory.LEX_DEF ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007858

LIST_REL_NIL
proof length: 3
proof time: 0.003538
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.419143
  inferstep time: 0.373474
  node_find time: 0.00148
  node_crea time: 0.032342
    pred time: 0.018648
    thmpred time: 0.000002
    mc time: 0.009648
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN (BasicProvers.SRW_TAC [] [boolLib.Once (DB.fetch "list" "tactictoe_thm_5"), boolSimps.SimpLHS])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.060322

LIST_REL_CONS1
proof length: 1
proof time: 0.004018
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.134376
  inferstep time: 0.115234
  node_find time: 0.000486
  node_crea time: 0.010692
    pred time: 0.003449
    thmpred time: 0.0
    mc time: 0.008226
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ boolLib.Once ( DB.fetch "list" "tactictoe_thm_5" ) , boolSimps.SimpLHS ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031849

LIST_REL_CONS2
proof length: 1
proof time: 0.003846
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.130683
  inferstep time: 0.117348
  node_find time: 0.000334
  node_crea time: 0.008327
    pred time: 0.002799
    thmpred time: 0.0
    mc time: 0.005394
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ boolLib.Once ( DB.fetch "list" "tactictoe_thm_5" ) , boolSimps.SimpLHS ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031949

LIST_REL_CONJ
proof length: 5
proof time: 0.009049
Statistics
  infstep : 107
  nodes   : 17
  maxdepth: 4
Time: 1.989936
  inferstep time: 1.728678
  node_find time: 0.019611
  node_crea time: 0.156664
    pred time: 0.060589
    thmpred time: 0.000004
    mc time: 0.057194
    inst time: 0.0
Proof found: boolLib.REWRITE_TAC [pairTheory.RPROD_DEF, DB.fetch "list" "LIST_REL_def", pairTheory.LET2_RATOR, combinTheory.C_DEF, combinTheory.W_DEF, pairTheory.LET2_RAND, pairTheory.PEXISTS_THM, pairTheory.PFORALL_THM, DB.fetch "list" "LIST_REL_mono", DB.fetch "list" "LIST_REL_EL_EQN", combinTheory.C_ABS_L, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26, DB.fetch "list" "tactictoe_thm_5", DB.fetch "list" "LIST_REL_CONS1", DB.fetch "list" "LIST_REL_CONS2"] THEN boolLib.CONV_TAC (boolLib.DEPTH_CONV HolKernel.BETA_CONV) THEN
  boolLib.EQ_TAC THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "EL_restricted", DB.fetch "list" "EL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "FILTER_EQ_CONS"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.073017

LIST_REL_MAP1
proof length: 1
proof time: 0.002495
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.140878
  inferstep time: 0.125275
  node_find time: 0.000422
  node_crea time: 0.010118
    pred time: 0.003685
    thmpred time: 0.0
    mc time: 0.006138
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "MAP_MAP_o" , DB.fetch "list" "MAP_APPEND" , DB.fetch "list" "MAP_EQ_APPEND" , DB.fetch "list" "MAP_o" , DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "LIST_REL_mono" , DB.fetch "list" "MAP" , DB.fetch "list" "MAP_EQ_CONS" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EXISTS_MAP" , DB.fetch "list" "FOLDR_CONS" , DB.fetch "list" "LENGTH_MAP" , DB.fetch "list" "MAP_EQ_NIL" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "MAP_TL" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011227

LIST_REL_MAP2
Statistics
  infstep : 596
  nodes   : 100
  maxdepth: 6
Time: 10.027594
  inferstep time: 8.5125
  node_find time: 0.150282
  node_crea time: 0.91658
    pred time: 0.310265
    thmpred time: 0.000035
    mc time: 0.304191
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.010197

LIST_REL_LENGTH
proof length: 1
proof time: 0.089832
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.115071
  inferstep time: 0.101369
  node_find time: 0.000221
  node_crea time: 0.008418
    pred time: 0.003057
    thmpred time: 0.000001
    mc time: 0.004816
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "LIST_REL_strongind" , DB.fetch "list" "LIST_REL_ind" , DB.fetch "list" "LIST_REL_rules" , DB.fetch "list" "tactictoe_thm_3" , DB.fetch "list" "tactictoe_thm_4" , DB.fetch "list" "LIST_REL_cases" , DB.fetch "list" "tactictoe_thm_5" , DB.fetch "list" "LIST_REL_CONS1" , DB.fetch "list" "LIST_REL_CONS2" , DB.fetch "list" "LIST_REL_mono" , DB.fetch "list" "LIST_REL_NIL" , DB.fetch "list" "LIST_REL_MAP1" , DB.fetch "list" "LENGTH_EQ_CONS" , DB.fetch "list" "LIST_EQ" , DB.fetch "list" "LIST_EQ_REWRITE"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037347

list_size_cong
proof length: 4
proof time: 0.068991
Statistics
  infstep : 140
  nodes   : 25
  maxdepth: 3
Time: 2.483653
  inferstep time: 2.02209
  node_find time: 0.031936
  node_crea time: 0.293122
    pred time: 0.10623
    thmpred time: 0.000001
    mc time: 0.114199
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "list_size_def", DB.fetch "list" "tactictoe_thm_6", DB.fetch "list" "tactictoe_thm_7", pred_setTheory.BIJ_FINITE_SUBSET, pred_setTheory.BIGUNION_IMAGE_UNIV, pairTheory.LET2_RAND, pairTheory.LET2_RATOR, DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM", DB.fetch "list" "MEM_MAP", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f"], BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "list_size_def", DB.fetch "list" "tactictoe_thm_6", DB.fetch "list" "tactictoe_thm_7", DB.fetch "list" "list_case_cong", arithmeticTheory.num_case_cong, optionTheory.option_case_cong, pairTheory.UNCURRY_CONG, pairTheory.pair_case_cong, sumTheory.sum_case_cong, ind_typeTheory.ISO_FUN, pred_setTheory.IMAGE_CONG, pred_setTheory.inj_surj, prim_recTheory.SIMP_REC, relationTheory.tactictoe_thm_24, DB.fetch "list" "MAP", DB.fetch "list" "list_Axiom_old"]]
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.439631
Replaying proof: 0.001037

FOLDL_CONG
proof length: 4
proof time: 0.100452
Statistics
  infstep : 407
  nodes   : 114
  maxdepth: 6
Time: 7.719588
  inferstep time: 6.412319
  node_find time: 0.094139
  node_crea time: 0.890692
    pred time: 0.292384
    thmpred time: 0.000021
    mc time: 0.334347
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDL_EQ_FOLDR", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "list_size_cong", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM", DB.fetch "list" "MEM_MAP", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f"], simpLib.ASM_SIMP_TAC boolSimps.bool_ss [(DB.fetch "list" "FOLDR"), (DB.fetch "list" "FOLDL")] THEN
  simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) []]
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.326077

MAP_CONG
proof length: 3
proof time: 0.054782
Statistics
  infstep : 56
  nodes   : 25
  maxdepth: 4
Time: 2.397861
  inferstep time: 2.037057
  node_find time: 0.011738
  node_crea time: 0.278187
    pred time: 0.110574
    thmpred time: 0.000009
    mc time: 0.100035
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "MEM_MAP", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "list_size_cong", DB.fetch "list" "LIST_REL_MAP2", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "LIST_REL_MAP1", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MEM"], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM]]
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.424238

MAP2_CONG
Statistics
  infstep : 714
  nodes   : 86
  maxdepth: 5
Time: 10.068515
  inferstep time: 8.479603
  node_find time: 0.161272
  node_crea time: 0.88008
    pred time: 0.295085
    thmpred time: 0.000034
    mc time: 0.369429
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.137359

EXISTS_CONG
proof length: 3
proof time: 0.197227
Statistics
  infstep : 13
  nodes   : 6
  maxdepth: 2
Time: 0.639667
  inferstep time: 0.562376
  node_find time: 0.002594
  node_crea time: 0.054697
    pred time: 0.022338
    thmpred time: 0.000002
    mc time: 0.019582
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [metisTools.METIS_TAC [DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "EXISTS_MAP", optionTheory.OPTION_ALL_CONG, pairTheory.PROD_ALL_CONG, pairTheory.PROD_ALL_MONO, sumTheory.SUM_ALL_MONO, optionTheory.OPTION_ALL_MONO, sumTheory.SUM_ALL_CONG, DB.fetch "list" "MAP2_CONG", DB.fetch "list" "MAP_CONG", DB.fetch "list" "MEM_SPLIT"], metisTools.METIS_TAC [DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "NOT_EXISTS", pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48]]
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.436366

EVERY_CONG
proof length: 2
proof time: 0.012246
Statistics
  infstep : 93
  nodes   : 43
  maxdepth: 5
Time: 3.190984
  inferstep time: 2.66149
  node_find time: 0.019089
  node_crea time: 0.391908
    pred time: 0.144383
    thmpred time: 0.000007
    mc time: 0.130166
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "MAP2_CONG", DB.fetch "list" "MAP_CONG", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "MEM_APPEND", optionTheory.OPTION_ALL_CONG] THEN BasicProvers.PROVE_TAC []
Org tac number: 15
Original proof time: 0.0
Replaying proof: 0.406921

EVERY_MONOTONIC
proof length: 3
proof time: 0.006649
Statistics
  infstep : 50
  nodes   : 9
  maxdepth: 3
Time: 0.953881
  inferstep time: 0.802182
  node_find time: 0.011438
  node_crea time: 0.080451
    pred time: 0.023708
    thmpred time: 0.000002
    mc time: 0.037107
    inst time: 0.0
Proof found: boolLib.REPEAT (boolLib.STRIP_TAC hhs_infixl0_open boolLib.ORELSE hhs_infixl0_close boolLib.EQ_TAC) THEN boolLib.POP_ASSUM boolLib.MP_TAC THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY_SIMP"]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.139297
Replaying proof: 0.000221

UNZIP_THM
proof length: 3
proof time: 0.098752
Statistics
  infstep : 26
  nodes   : 13
  maxdepth: 4
Time: 0.944123
  inferstep time: 0.777983
  node_find time: 0.005413
  node_crea time: 0.11978
    pred time: 0.03309
    thmpred time: 0.000005
    mc time: 0.072153
    inst time: 0.0
Proof found: BasicProvers.RW_TAC BasicProvers.bool_ss [] THENL [metisTools.METIS_TAC [DB.fetch "list" "UNZIP", DB.fetch "list" "ZIP", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "list_Axiom_old", DB.fetch "list" "tactictoe_thm_0", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "APPEND", DB.fetch "list" "FORALL_LIST"], metisTools.METIS_TAC [DB.fetch "list" "ZIP", DB.fetch "list" "WF_LIST_PRED", DB.fetch "list" "UNZIP", DB.fetch "list" "INDEX_FIND_def", pairTheory.UNCURRY_DEF, pairTheory.FST, pairTheory.SND, pairTheory.CLOSED_PAIR_EQ, pairTheory.PAIR_EQ, pairTheory.UNCURRY_CONG, pred_setTheory.GSPEC_PAIR_ETA, pred_setTheory.PAIR_IN_GSPEC_IFF, pairTheory.CURRY_DEF, pairTheory.pair_case_thm, pairTheory.COMMA_DEF, pairTheory.PROD_ALL_CONG]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.058678

UNZIP_MAP
proof length: 5
proof time: 0.076762
Statistics
  infstep : 88
  nodes   : 13
  maxdepth: 4
Time: 1.263394
  inferstep time: 1.039233
  node_find time: 0.018001
  node_crea time: 0.106559
    pred time: 0.027523
    thmpred time: 0.000002
    mc time: 0.06811
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16854*)L"] THENL [BasicProvers.RW_TAC boolSimps.bool_ss [(DB.fetch "list" "UNZIP")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP_CONG", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "MAP_TL", DB.fetch "list" "MEM_MAP", DB.fetch "list" "LIST_REL_MAP1"], BasicProvers.SRW_TAC [] [DB.fetch "list" "UNZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", pairTheory.PAIR_FUN_THM, pairTheory.SWAP_def, arithmeticTheory.DIVMOD_DEF, DB.fetch "list" "MAP", DB.fetch "list" "MAP_EQ_CONS", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR, pairTheory.PAIR_MAP, pred_setTheory.CROSS_DEF, numpairTheory.invtri0_thm]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031589

LENGTH_ZIP
Statistics
  infstep : 724
  nodes   : 109
  maxdepth: 5
Time: 10.011058
  inferstep time: 8.245956
  node_find time: 0.180812
  node_crea time: 1.024135
    pred time: 0.304798
    thmpred time: 0.000031
    mc time: 0.463103
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.174108

LENGTH_UNZIP
proof length: 3
proof time: 0.007991
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.412053
  inferstep time: 0.351373
  node_find time: 0.001701
  node_crea time: 0.039083
    pred time: 0.014718
    thmpred time: 0.000002
    mc time: 0.025357
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "UNZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "UNZIP_MAP", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pred_setTheory.CROSS_applied, pred_setTheory.IN_CROSS, numpairTheory.invtri0_thm, arithmeticTheory.DIVMOD_DEF, numpairTheory.SND_invtri0, pairTheory.ELIM_PFORALL, pairTheory.ELIM_UNCURRY], BasicProvers.SRW_TAC [] [DB.fetch "list" "UNZIP", DB.fetch "list" "LENGTH", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pred_setTheory.CROSS_applied, pred_setTheory.IN_CROSS, numpairTheory.invtri0_thm, arithmeticTheory.DIVMOD_DEF]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037345

ZIP_UNZIP
proof length: 4
proof time: 0.095472
Statistics
  infstep : 10
  nodes   : 7
  maxdepth: 3
Time: 0.459172
  inferstep time: 0.388406
  node_find time: 0.001948
  node_crea time: 0.042139
    pred time: 0.016783
    thmpred time: 0.000001
    mc time: 0.027142
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "UNZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "LENGTH_UNZIP", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "INDEX_FIND_def", DB.fetch "list" "LENGTH", DB.fetch "list" "MAP", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "list_nchotomy", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "FILTER"], BasicProvers.SRW_TAC [] [DB.fetch "list" "UNZIP", DB.fetch "list" "LENGTH", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pred_setTheory.CROSS_applied, pred_setTheory.IN_CROSS, numpairTheory.invtri0_thm, arithmeticTheory.DIVMOD_DEF] THEN
  metisTools.METIS_TAC [DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "UNZIP", DB.fetch "list" "ZIP", DB.fetch "list" "LENGTH_ZIP", pairTheory.PAIR, pairTheory.PAIR_MAP, pairTheory.PAIR_FUN_THM, pairTheory.SWAP_def, pred_setTheory.CROSS_DEF, pairTheory.ELIM_PFORALL, pairTheory.ELIM_UNCURRY, pairTheory.UNCURRY_VAR, pairTheory.UNCURRY, pairTheory.PAIR_FST_SND_EQ, pairTheory.ELIM_PEXISTS, pairTheory.PROD_ALL_def]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034032

UNZIP_ZIP
Statistics
  infstep : 659
  nodes   : 105
  maxdepth: 5
Time: 10.060489
  inferstep time: 7.959543
  node_find time: 0.165091
  node_crea time: 1.397167
    pred time: 0.402282
    thmpred time: 0.000028
    mc time: 0.574148
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.19118

ZIP_MAP
proof length: 8
proof time: 0.082402
Statistics
  infstep : 277
  nodes   : 37
  maxdepth: 4
Time: 4.31764
  inferstep time: 3.539993
  node_find time: 0.061399
  node_crea time: 0.452171
    pred time: 0.168445
    thmpred time: 0.00001
    mc time: 0.171533
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "ZIP", pairTheory.PAIR_MAP, pairTheory.PAIR, DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "UNZIP", DB.fetch "list" "UNZIP_THM", pairTheory.PROD_ALL_def, pairTheory.SND_PAIR_MAP, DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "UNZIP_ZIP", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "ZIP_UNZIP", pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def, pairTheory.ELIM_PEXISTS],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", pairTheory.PAIR_MAP, pairTheory.PAIR, DB.fetch "list" "ZIP", pairTheory.PROD_ALL_def, DB.fetch "list" "UNZIP", pairTheory.SND_PAIR_MAP, DB.fetch "list" "UNZIP_THM", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "UNZIP_ZIP", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "ZIP_UNZIP", pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def, pairTheory.ELIM_PEXISTS]], boolLib.REPEAT (boolLib.FILTER_GEN_TAC (Parse.-- [HolKernel.QUOTE " (*#loc 1 43114*)l2:'b list"] Parse.--)) THEN
  Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", pairTheory.PAIR_MAP, pairTheory.PAIR, DB.fetch "list" "ZIP", pairTheory.PROD_ALL_def, pairTheory.SND_PAIR_MAP, DB.fetch "list" "UNZIP_THM", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "UNZIP_ZIP", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "ZIP_UNZIP", pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def, pairTheory.ELIM_PEXISTS, pairTheory.tactictoe_thm_1],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "ZIP", pairTheory.PAIR_MAP, pairTheory.PAIR, DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "UNZIP_THM", pairTheory.PROD_ALL_def, pairTheory.SND_PAIR_MAP, DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "UNZIP_ZIP", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "ZIP_UNZIP", pairTheory.ELIM_PFORALL, pairTheory.pair_CASE_def, pairTheory.ELIM_PEXISTS, pairTheory.tactictoe_thm_1]]]
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.263709

MEM_ZIP
Statistics
  infstep : 369
  nodes   : 105
  maxdepth: 5
Time: 10.061965
  inferstep time: 8.089272
  node_find time: 0.09983
  node_crea time: 1.456926
    pred time: 0.422928
    thmpred time: 0.000024
    mc time: 0.666047
    inst time: 0.0
Proof status: Time Out
Org tac number: 16
Original proof time: 0.0
Replaying proof: 0.571982

EL_ZIP
Statistics
  infstep : 439
  nodes   : 103
  maxdepth: 6
Time: 10.021357
  inferstep time: 8.110209
  node_find time: 0.127495
  node_crea time: 1.365699
    pred time: 0.377409
    thmpred time: 0.000023
    mc time: 0.605751
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.31703
Replaying proof: 0.000921

MAP_ZIP
Statistics
  infstep : 845
  nodes   : 118
  maxdepth: 5
Time: 10.00359
  inferstep time: 7.87881
  node_find time: 0.222906
  node_crea time: 1.186095
    pred time: 0.380308
    thmpred time: 0.000017
    mc time: 0.449038
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.141322

MEM_EL
Statistics
  infstep : 816
  nodes   : 126
  maxdepth: 6
Time: 10.000483
  inferstep time: 7.973961
  node_find time: 0.213928
  node_crea time: 1.16101
    pred time: 0.331331
    thmpred time: 0.000026
    mc time: 0.486146
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.284501

SUM_MAP_PLUS_ZIP
Statistics
  infstep : 860
  nodes   : 98
  maxdepth: 5
Time: 10.001831
  inferstep time: 7.333033
  node_find time: 0.224295
  node_crea time: 1.773893
    pred time: 0.437978
    thmpred time: 0.000014
    mc time: 0.817612
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.10068

LIST_REL_EVERY_ZIP
Statistics
  infstep : 712
  nodes   : 167
  maxdepth: 6
Time: 10.003132
  inferstep time: 7.712032
  node_find time: 0.199155
  node_crea time: 1.487563
    pred time: 0.357211
    thmpred time: 0.000029
    mc time: 0.601098
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.186209

REVERSE_APPEND
proof length: 5
proof time: 0.160646
Statistics
  infstep : 76
  nodes   : 13
  maxdepth: 4
Time: 1.17693
  inferstep time: 0.962621
  node_find time: 0.018119
  node_crea time: 0.101355
    pred time: 0.042255
    thmpred time: 0.000005
    mc time: 0.045443
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LENGTH_EQ_NUM"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EXISTS_APPEND"],
  BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC] THEN
  metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SELF", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "APPEND_ASSOC"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034291

REVERSE_REVERSE
proof length: 3
proof time: 0.169285
Statistics
  infstep : 15
  nodes   : 7
  maxdepth: 3
Time: 0.605256
  inferstep time: 0.518694
  node_find time: 0.004085
  node_crea time: 0.042615
    pred time: 0.016658
    thmpred time: 0.000001
    mc time: 0.0189
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_NIL", DB.fetch "list" "list_nchotomy", DB.fetch "list" "NOT_NIL_CONS", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "LENGTH", DB.fetch "list" "MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "FILTER_COND_REWRITE"], metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_APPEND", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "APPEND", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "list_CASES", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "list_INDUCT", DB.fetch "list" "HD", DB.fetch "list" "TL", DB.fetch "list" "LENGTH"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033345

REVERSE_11
proof length: 2
proof time: 0.135825
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.246064
  inferstep time: 0.222507
  node_find time: 0.000687
  node_crea time: 0.014466
    pred time: 0.005381
    thmpred time: 0.0
    mc time: 0.008114
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "FLAT_APPEND"] THEN metisTools.METIS_TAC [DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_ASSOC", DB.fetch "list" "APPEND_11", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL_ZIP", DB.fetch "list" "ZIP", DB.fetch "list" "EQ_LIST", DB.fetch "list" "EVERY_APPEND"]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.180896

MEM_REVERSE
proof length: 5
proof time: 0.174496
Statistics
  infstep : 58
  nodes   : 17
  maxdepth: 3
Time: 1.739363
  inferstep time: 1.485263
  node_find time: 0.015527
  node_crea time: 0.16436
    pred time: 0.060068
    thmpred time: 0.000004
    mc time: 0.060332
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "MEM", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_11", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "MEM_EL", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_MAP", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "EVERY_CONG"], BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, DB.fetch "list" "MEM", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "MEM_EL", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_MAP"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057809

LENGTH_REVERSE
proof length: 4
proof time: 0.046038
Statistics
  infstep : 20
  nodes   : 7
  maxdepth: 3
Time: 0.734937
  inferstep time: 0.609416
  node_find time: 0.007034
  node_crea time: 0.071686
    pred time: 0.037143
    thmpred time: 0.000003
    mc time: 0.033683
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "LENGTH", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_11", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_EQ_SUM"], BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044547

REVERSE_EQ_NIL
proof length: 1
proof time: 0.082286
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.118523
  inferstep time: 0.098529
  node_find time: 0.000459
  node_crea time: 0.016193
    pred time: 0.00695
    thmpred time: 0.000001
    mc time: 0.004451
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "LENGTH_REVERSE" , DB.fetch "list" "MEM_REVERSE" , DB.fetch "list" "REVERSE_REVERSE" , DB.fetch "list" "REVERSE_APPEND" , DB.fetch "list" "REVERSE_11" , DB.fetch "list" "APPEND" , DB.fetch "list" "APPEND_NIL" , DB.fetch "list" "EVERY_SIMP" , DB.fetch "list" "EXISTS_SIMP" , DB.fetch "list" "FILTER_COND_REWRITE" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "FILTER_EQ_NIL" , DB.fetch "list" "FILTER_NEQ_NIL" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041588

REVERSE_EQ_SING
proof length: 3
proof time: 0.098071
Statistics
  infstep : 18
  nodes   : 7
  maxdepth: 2
Time: 0.794101
  inferstep time: 0.657312
  node_find time: 0.006945
  node_crea time: 0.084017
    pred time: 0.038978
    thmpred time: 0.000003
    mc time: 0.034649
    inst time: 0.0
Proof found: boolLib.EQ_TAC THEN (metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_11", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDR", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "list_INDUCT", DB.fetch "list" "list_induction"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.042868

FILTER_REVERSE
proof length: 3
proof time: 0.058666
Statistics
  infstep : 18
  nodes   : 10
  maxdepth: 3
Time: 0.891175
  inferstep time: 0.733441
  node_find time: 0.005664
  node_crea time: 0.107151
    pred time: 0.041223
    thmpred time: 0.000003
    mc time: 0.049675
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_EQ_SING"], BasicProvers.SRW_TAC [] [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "LENGTH_REVERSE"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031891

LAST_CONS
proof length: 1
proof time: 0.004779
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 1
Time: 0.204328
  inferstep time: 0.171109
  node_find time: 0.001067
  node_crea time: 0.023794
    pred time: 0.010982
    thmpred time: 0.0
    mc time: 0.009142
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LAST_DEF" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "REVERSE_EQ_SING" , DB.fetch "list" "UNZIP_THM" , DB.fetch "list" "MAP2_DEF" , DB.fetch "list" "tactictoe_thm_1" , DB.fetch "list" "tactictoe_thm_10" , DB.fetch "list" "tactictoe_thm_8" , DB.fetch "list" "tactictoe_thm_9" , DB.fetch "list" "MAP2_ind" , DB.fetch "list" "UNZIP" , DB.fetch "list" "FOLDL" , DB.fetch "list" "FOLDR" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005585

LAST_EL
Statistics
  infstep : 1006
  nodes   : 79
  maxdepth: 5
Time: 10.00067
  inferstep time: 8.135545
  node_find time: 0.283721
  node_crea time: 0.722552
    pred time: 0.196778
    thmpred time: 0.000032
    mc time: 0.278584
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.094064

LAST_MAP
proof length: 4
proof time: 0.04657
Statistics
  infstep : 26
  nodes   : 9
  maxdepth: 3
Time: 0.705426
  inferstep time: 0.585782
  node_find time: 0.006739
  node_crea time: 0.076352
    pred time: 0.035357
    thmpred time: 0.000003
    mc time: 0.024899
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "MAP_TL", DB.fetch "list" "EL_MAP", DB.fetch "list" "MAP_CONG", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o"], BasicProvers.SRW_TAC [] [] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "LAST_EL", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MEM_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_TL", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP_MAP_o"]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.238611

FRONT_CONS
proof length: 1
proof time: 0.006173
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.160481
  inferstep time: 0.143762
  node_find time: 0.000513
  node_crea time: 0.010393
    pred time: 0.003611
    thmpred time: 0.000001
    mc time: 0.006068
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "FRONT_DEF" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "REVERSE_EQ_SING" , DB.fetch "list" "UNZIP_THM" , DB.fetch "list" "MAP2_DEF" , DB.fetch "list" "tactictoe_thm_1" , DB.fetch "list" "tactictoe_thm_10" , DB.fetch "list" "tactictoe_thm_8" , DB.fetch "list" "tactictoe_thm_9" , DB.fetch "list" "MAP2_ind" , DB.fetch "list" "UNZIP" , DB.fetch "list" "FOLDL" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004962

LENGTH_FRONT_CONS
Statistics
  infstep : 298
  nodes   : 12
  maxdepth: 2
Time: 10.000607
  inferstep time: 2.151772
  node_find time: 0.076144
  node_crea time: 0.10998
    pred time: 0.040864
    thmpred time: 0.000001
    mc time: 0.039114
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.064231

FRONT_CONS_EQ_NIL
proof length: 1
proof time: 0.003012
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.156291
  inferstep time: 0.137405
  node_find time: 0.000853
  node_crea time: 0.010413
    pred time: 0.003204
    thmpred time: 0.000001
    mc time: 0.005544
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LENGTH_FRONT_CONS" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "FRONT_DEF" , DB.fetch "list" "LIST_REL_CONS1" , DB.fetch "list" "LIST_REL_CONS2" , DB.fetch "list" "NULL_EQ" , DB.fetch "list" "CONS" , DB.fetch "list" "MAP_TL" , DB.fetch "list" "NOT_NULL_MEM" , DB.fetch "list" "NULL_LENGTH" , DB.fetch "list" "list_case_compute" , DB.fetch "list" "NULL_DEF" , DB.fetch "list" "NULL" , DB.fetch "list" "NULL_FILTER" , DB.fetch "list" "MEM" , DB.fetch "list" "FOLDL" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.084786

APPEND_FRONT_LAST
proof length: 5
proof time: 0.099228
Statistics
  infstep : 76
  nodes   : 20
  maxdepth: 4
Time: 1.519138
  inferstep time: 1.220166
  node_find time: 0.022997
  node_crea time: 0.178208
    pred time: 0.058022
    thmpred time: 0.000007
    mc time: 0.067264
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "FRONT_DEF", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "FRONT_CONS_EQ_NIL", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FLAT", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "APPEND_eq_NIL"], BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FRONT_DEF", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "FRONT_CONS_EQ_NIL", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_EL", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FLAT", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "APPEND_EQ_SING"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "LAST_EL", DB.fetch "list" "FRONT_DEF", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "FRONT_CONS_EQ_NIL", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "MEM_EL", DB.fetch "list" "EL_ZIP", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "EL_simp_restricted", DB.fetch "list" "EL_simp"]]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.182204

LAST_CONS_cond
proof length: 1
proof time: 0.059362
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.075449
  inferstep time: 0.05886
  node_find time: 0.000278
  node_crea time: 0.010413
    pred time: 0.003153
    thmpred time: 0.000001
    mc time: 0.006685
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LAST_DEF" , DB.fetch "list" "FRONT_DEF" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "APPEND_FRONT_LAST" , DB.fetch "list" "LAST_EL" , DB.fetch "list" "LAST_MAP" , DB.fetch "list" "LIST_REL_def" , DB.fetch "list" "FILTER" , DB.fetch "list" "INDEX_FIND_def" , DB.fetch "list" "WF_LIST_PRED" , DB.fetch "list" "LENGTH" , DB.fetch "list" "MAP" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EXISTS_DEF" , DB.fetch "list" "FLAT" , DB.fetch "list" "FLAT_compute"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.0325

LAST_APPEND_CONS
Statistics
  infstep : 676
  nodes   : 172
  maxdepth: 6
Time: 10.060147
  inferstep time: 7.612179
  node_find time: 0.244126
  node_crea time: 1.441982
    pred time: 0.361361
    thmpred time: 0.000024
    mc time: 0.606651
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037154

TAKE_cons
proof length: 1
proof time: 0.004068
Statistics
  infstep : 9
  nodes   : 6
  maxdepth: 2
Time: 0.477697
  inferstep time: 0.367076
  node_find time: 0.00299
  node_crea time: 0.080493
    pred time: 0.022599
    thmpred time: 0.0
    mc time: 0.048727
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "TAKE_def" , DB.fetch "list" "TAKE_nil" , DB.fetch "list" "DROP_def" , DB.fetch "list" "LENGTH_FRONT_CONS" , DB.fetch "list" "FRONT_CONS_EQ_NIL" , DB.fetch "list" "LIST_REL_CONS1" , DB.fetch "list" "LIST_REL_CONS2" , arithmeticTheory.BOUNDED_EXISTS_THM , arithmeticTheory.BOUNDED_FORALL_THM , arithmeticTheory.SUC_ELIM_THM , arithmeticTheory.SUB_LESS_OR , numpairTheory.tactictoe_thm_4 , ind_typeTheory.FCONS_DEST , numpairTheory.tactictoe_thm_2 , numpairTheory.tactictoe_thm_3 , arithmeticTheory.PRE_SUB1 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00641

DROP_cons
proof length: 1
proof time: 0.009915
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.228485
  inferstep time: 0.203074
  node_find time: 0.000748
  node_crea time: 0.014732
    pred time: 0.003191
    thmpred time: 0.0
    mc time: 0.01389
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "DROP_def" , DB.fetch "list" "DROP_nil" , DB.fetch "list" "TAKE_cons" , DB.fetch "list" "TAKE_def" , DB.fetch "list" "LENGTH_FRONT_CONS" , DB.fetch "list" "FRONT_CONS_EQ_NIL" , DB.fetch "list" "LIST_REL_CONS1" , DB.fetch "list" "LIST_REL_CONS2" , arithmeticTheory.BOUNDED_EXISTS_THM , arithmeticTheory.BOUNDED_FORALL_THM , arithmeticTheory.SUC_ELIM_THM , arithmeticTheory.SUB_LESS_OR , numpairTheory.tactictoe_thm_4 , ind_typeTheory.FCONS_DEST , numpairTheory.tactictoe_thm_2 , numpairTheory.tactictoe_thm_3 ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.006034

TAKE_0
proof length: 3
proof time: 0.146831
Statistics
  infstep : 12
  nodes   : 4
  maxdepth: 2
Time: 0.483649
  inferstep time: 0.441845
  node_find time: 0.003259
  node_crea time: 0.019761
    pred time: 0.00817
    thmpred time: 0.000001
    mc time: 0.007625
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 18878*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_cons", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "DROP_def", DB.fetch "list" "SUM", DB.fetch "list" "list_size_def", DB.fetch "list" "tactictoe_thm_6", DB.fetch "list" "tactictoe_thm_7", DB.fetch "list" "DROP_nil", DB.fetch "list" "INDEX_FIND_def"], metisTools.METIS_TAC [DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_nil", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction", DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_def", DB.fetch "list" "SUM", DB.fetch "list" "list_size_def"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033216

TAKE_LENGTH_ID
proof length: 3
proof time: 0.086912
Statistics
  infstep : 24
  nodes   : 10
  maxdepth: 3
Time: 0.870919
  inferstep time: 0.753632
  node_find time: 0.006908
  node_crea time: 0.06576
    pred time: 0.023183
    thmpred time: 0.000002
    mc time: 0.035501
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_cons", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "LAST_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_EQ_SUM"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_nil", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FORALL_LIST"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.027262

LENGTH_TAKE
proof length: 4
proof time: 0.007336
Statistics
  infstep : 169
  nodes   : 52
  maxdepth: 5
Time: 4.981058
  inferstep time: 4.099658
  node_find time: 0.052634
  node_crea time: 0.583979
    pred time: 0.198604
    thmpred time: 0.000011
    mc time: 0.218562
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 53169*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "EL_ZIP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_def", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "MEM_EL", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_TL"] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [(DB.fetch "list" "EL"), (DB.fetch "list" "HD"), (DB.fetch "list" "TL")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04444

MAP_TAKE
proof length: 3
proof time: 0.049231
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.437002
  inferstep time: 0.396007
  node_find time: 0.001347
  node_crea time: 0.023458
    pred time: 0.00891
    thmpred time: 0.000002
    mc time: 0.013371
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 53169*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038445

TAKE_APPEND1
proof length: 4
proof time: 0.013724
Statistics
  infstep : 302
  nodes   : 75
  maxdepth: 6
Time: 7.428327
  inferstep time: 6.18397
  node_find time: 0.101634
  node_crea time: 0.719095
    pred time: 0.248341
    thmpred time: 0.00003
    mc time: 0.287374
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "TAKE_cons", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "LENGTH_APPEND"], BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_def", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "LENGTH_APPEND"] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "APPEND", DB.fetch "list" "APPEND_11"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035447

TAKE_APPEND2
proof length: 4
proof time: 0.012426
Statistics
  infstep : 10
  nodes   : 6
  maxdepth: 3
Time: 0.571106
  inferstep time: 0.488776
  node_find time: 0.002968
  node_crea time: 0.049005
    pred time: 0.018132
    thmpred time: 0.000001
    mc time: 0.028762
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_nil", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "LENGTH_EQ_SUM"], BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_def", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", DB.fetch "list" "LENGTH_EQ_SUM"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.062318

DROP_0
proof length: 3
proof time: 0.14794
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.33127
  inferstep time: 0.285717
  node_find time: 0.001395
  node_crea time: 0.030923
    pred time: 0.009671
    thmpred time: 0.000002
    mc time: 0.016585
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 18878*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_cons", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_def", DB.fetch "list" "SUM", DB.fetch "list" "list_size_def", DB.fetch "list" "tactictoe_thm_6", DB.fetch "list" "tactictoe_thm_7", DB.fetch "list" "TAKE_nil"], metisTools.METIS_TAC [DB.fetch "list" "DROP_cons", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction", DB.fetch "list" "EL_restricted", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.027915

TAKE_DROP
proof length: 3
proof time: 0.102847
Statistics
  infstep : 12
  nodes   : 7
  maxdepth: 3
Time: 0.621436
  inferstep time: 0.526713
  node_find time: 0.003428
  node_crea time: 0.057381
    pred time: 0.021996
    thmpred time: 0.000001
    mc time: 0.026354
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "DROP_cons", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_cons", DB.fetch "list" "DROP_0", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND"], BasicProvers.SRW_TAC [] [DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_cons", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "DROP_nil", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "DROP_0", DB.fetch "list" "TAKE_nil", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038923

LENGTH_DROP
proof length: 6
proof time: 0.170337
Statistics
  infstep : 217
  nodes   : 66
  maxdepth: 5
Time: 6.271152
  inferstep time: 5.142879
  node_find time: 0.072009
  node_crea time: 0.715468
    pred time: 0.243462
    thmpred time: 0.000009
    mc time: 0.275429
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_cons", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_0", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "EL_MAP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_cons", DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_0", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MEM_EL"] THEN
  BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 13265*)n"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LENGTH_TL", DB.fetch "list" "LENGTH", numeralTheory.numeral_distrib, arithmeticTheory.SUB, arithmeticTheory.SUB_0, DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "NULL_LENGTH", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_EQ_SUM"],
  metisTools.METIS_TAC [arithmeticTheory.SUC_SUB1, DB.fetch "list" "LENGTH_TL", DB.fetch "list" "LENGTH", arithmeticTheory.SUC_SUB, arithmeticTheory.SUB_MONO_EQ, arithmeticTheory.SUB, arithmeticTheory.SUB_LEFT_SUC, numeralTheory.tactictoe_thm_14, numeralTheory.tactictoe_thm_17, numeralTheory.tactictoe_thm_20, numeralTheory.tactictoe_thm_23, numeralTheory.tactictoe_thm_26, DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS"]]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.064968

MEM_DROP
Statistics
  infstep : 692
  nodes   : 115
  maxdepth: 6
Time: 10.082936
  inferstep time: 7.799717
  node_find time: 0.243878
  node_crea time: 1.267011
    pred time: 0.357202
    thmpred time: 0.000024
    mc time: 0.501946
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.240799

DROP_NIL
proof length: 3
proof time: 0.007374
Statistics
  infstep : 118
  nodes   : 50
  maxdepth: 6
Time: 4.533285
  inferstep time: 3.88566
  node_find time: 0.039099
  node_crea time: 0.402307
    pred time: 0.132642
    thmpred time: 0.000015
    mc time: 0.159492
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_def", numeralTheory.numeral_distrib, arithmeticTheory.GREATER_EQ, arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.NOT_GREATER_EQ, arithmeticTheory.SUB_LEFT_GREATER_EQ, arithmeticTheory.SUB_RIGHT_GREATER_EQ, DB.fetch "list" "MEM_DROP", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_cons", DB.fetch "list" "DROP_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute"], BasicProvers.SRW_TAC [numSimps.ARITH_ss] [(DB.fetch "list" "DROP_def")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.067508

FOLDL2_cong
proof length: 6
proof time: 0.103831
Statistics
  infstep : 115
  nodes   : 24
  maxdepth: 4
Time: 2.706127
  inferstep time: 2.233651
  node_find time: 0.035475
  node_crea time: 0.277787
    pred time: 0.097237
    thmpred time: 0.000006
    mc time: 0.104985
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "FOLDL2_def", DB.fetch "list" "tactictoe_thm_11", DB.fetch "list" "tactictoe_thm_12", DB.fetch "list" "MAP2_CONG", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ", ind_typeTheory.ISO_FUN, numTheory.tactictoe_thm_9, sumTheory.tactictoe_thm_1, sumTheory.tactictoe_thm_3, sumTheory.tactictoe_thm_5, DB.fetch "list" "MAP_CONG", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "list_size_cong", DB.fetch "list" "EVERY_CONG"], BasicProvers.SRW_TAC [] [] THEN
  BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 39659*)l2"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "FOLDL2_def", DB.fetch "list" "tactictoe_thm_11", DB.fetch "list" "tactictoe_thm_12", relationTheory.tactictoe_thm_0, relationTheory.tactictoe_thm_1, relationTheory.tactictoe_thm_2, relationTheory.tactictoe_thm_3, relationTheory.tactictoe_thm_4, relationTheory.tactictoe_thm_6, relationTheory.tactictoe_thm_7, relationTheory.tactictoe_thm_9, relationTheory.tactictoe_thm_5, relationTheory.tactictoe_thm_8, DB.fetch "list" "list_case_cong", ind_typeTheory.ISO_FUN, DB.fetch "list" "MAP2_CONG"],
  BasicProvers.SRW_TAC [] [(DB.fetch "list" "tactictoe_thm_8"), (DB.fetch "list" "MEM")]]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.136315

FOLDL2_FOLDL
Statistics
  infstep : 542
  nodes   : 92
  maxdepth: 5
Time: 10.000829
  inferstep time: 7.889634
  node_find time: 0.184963
  node_crea time: 1.26536
    pred time: 0.354061
    thmpred time: 0.000031
    mc time: 0.6208
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.134416

EVERY2_cong
Statistics
  infstep : 269
  nodes   : 94
  maxdepth: 6
Time: 10.003713
  inferstep time: 8.227119
  node_find time: 0.101204
  node_crea time: 1.291873
    pred time: 0.387691
    thmpred time: 0.000027
    mc time: 0.417325
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.209401

MAP_EQ_EVERY2
Statistics
  infstep : 988
  nodes   : 116
  maxdepth: 5
Time: 10.001017
  inferstep time: 7.262784
  node_find time: 0.366871
  node_crea time: 1.267241
    pred time: 0.36189
    thmpred time: 0.000023
    mc time: 0.472333
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.186717

EVERY2_EVERY
proof length: 1
proof time: 0.014778
Statistics
  infstep : 28
  nodes   : 16
  maxdepth: 4
Time: 1.507718
  inferstep time: 1.236371
  node_find time: 0.008906
  node_crea time: 0.20318
    pred time: 0.068824
    thmpred time: 0.000003
    mc time: 0.078664
    inst time: 0.0
Proof found: (simpLib.FULL_SIMP_TAC ( BasicProvers.srw_ss ( ) ) [ DB.fetch "list" "LIST_REL_EVERY_ZIP" , DB.fetch "list" "MAP2_MAP" , DB.fetch "list" "MAP2_ZIP" , DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "LIST_REL_LENGTH" , DB.fetch "list" "EVERY2_cong" , DB.fetch "list" "LIST_REL_mono" , DB.fetch "list" "FOLDL2_FOLDL" , DB.fetch "list" "LIST_REL_cases" , DB.fetch "list" "tactictoe_thm_5" , DB.fetch "list" "LIST_REL_CONS1" , DB.fetch "list" "LIST_REL_CONS2" , DB.fetch "list" "LIST_REL_strongind" , DB.fetch "list" "LIST_REL_ind" , DB.fetch "list" "LIST_REL_rules" , DB.fetch "list" "tactictoe_thm_3" ])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.15337

EVERY2_LENGTH
proof length: 2
proof time: 0.060022
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.315776
  inferstep time: 0.26172
  node_find time: 0.002061
  node_crea time: 0.035353
    pred time: 0.009897
    thmpred time: 0.0
    mc time: 0.021469
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN metisTools.METIS_TAC [DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "LIST_REL_EVERY_ZIP", DB.fetch "list" "LIST_REL_LENGTH", DB.fetch "list" "EVERY2_cong", DB.fetch "list" "LIST_REL_mono", DB.fetch "list" "LIST_REL_strongind", DB.fetch "list" "LIST_REL_ind", DB.fetch "list" "LIST_REL_rules", DB.fetch "list" "tactictoe_thm_3", DB.fetch "list" "tactictoe_thm_4", DB.fetch "list" "LIST_REL_cases", DB.fetch "list" "tactictoe_thm_5", DB.fetch "list" "LIST_REL_CONS1", DB.fetch "list" "LIST_REL_CONS2", DB.fetch "list" "LIST_REL_MAP1"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009734
Replaying proof: 0.006045

ALL_DISTINCT_FILTER
Statistics
  infstep : 432
  nodes   : 89
  maxdepth: 5
Time: 10.069099
  inferstep time: 8.113222
  node_find time: 0.162074
  node_crea time: 1.276811
    pred time: 0.397555
    thmpred time: 0.00003
    mc time: 0.475954
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.094286

FILTER_ALL_DISTINCT
proof length: 4
proof time: 0.098303
Statistics
  infstep : 77
  nodes   : 19
  maxdepth: 3
Time: 2.35141
  inferstep time: 1.967597
  node_find time: 0.026586
  node_crea time: 0.218832
    pred time: 0.076208
    thmpred time: 0.000009
    mc time: 0.063245
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "FILTER_APPEND_DISTRIB"], simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.COND_elim_ss) [(DB.fetch "list" "ALL_DISTINCT"), (DB.fetch "list" "MEM"), (DB.fetch "list" "FILTER"), boolLib.DISJ_IMP_THM, boolLib.FORALL_AND_THM, (DB.fetch "list" "CONS_11"), boolLib.EQ_IMP_THM, (DB.fetch "list" "tactictoe_thm_13")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "MEM_FILTER", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_APPEND_DISTRIB"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.042911

ALL_DISTINCT_MAP
Statistics
  infstep : 609
  nodes   : 107
  maxdepth: 5
Time: 10.006085
  inferstep time: 7.90364
  node_find time: 0.218431
  node_crea time: 1.202731
    pred time: 0.351559
    thmpred time: 0.000018
    mc time: 0.396107
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.095523

EL_ALL_DISTINCT_EL_EQ
Statistics
  infstep : 685
  nodes   : 99
  maxdepth: 5
Time: 10.100535
  inferstep time: 7.680362
  node_find time: 0.248994
  node_crea time: 1.351532
    pred time: 0.327597
    thmpred time: 0.000018
    mc time: 0.44668
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.482652

ALL_DISTINCT_EL_IMP
proof length: 1
proof time: 0.003601
Statistics
  infstep : 7
  nodes   : 5
  maxdepth: 2
Time: 0.437135
  inferstep time: 0.367898
  node_find time: 0.002395
  node_crea time: 0.046072
    pred time: 0.014871
    thmpred time: 0.000001
    mc time: 0.021517
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "FILTER_ALL_DISTINCT" , DB.fetch "list" "ALL_DISTINCT" , DB.fetch "list" "ALL_DISTINCT_MAP" , DB.fetch "list" "LENGTH_EQ_NUM" , DB.fetch "list" "LENGTH_EQ_SUM" , DB.fetch "list" "LENGTH_EQ_NUM_compute" , DB.fetch "list" "MEM_EL" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EL_ZIP" , DB.fetch "list" "LIST_EQ" , DB.fetch "list" "LIST_EQ_REWRITE" , DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "MEM_ZIP" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.029312

ALL_DISTINCT_APPEND
proof length: 4
proof time: 0.020273
Statistics
  infstep : 66
  nodes   : 21
  maxdepth: 4
Time: 2.554015
  inferstep time: 2.08552
  node_find time: 0.022136
  node_crea time: 0.323874
    pred time: 0.116332
    thmpred time: 0.000008
    mc time: 0.1007
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "MEM", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "NOT_NULL_MEM", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "MAP_EQ_f"], simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.COND_elim_ss) [(DB.fetch "list" "ALL_DISTINCT"), (DB.fetch "list" "MEM"), (DB.fetch "list" "FILTER"), boolLib.DISJ_IMP_THM, boolLib.FORALL_AND_THM, (DB.fetch "list" "CONS_11"), boolLib.EQ_IMP_THM, (DB.fetch "list" "tactictoe_thm_13")] THEN
  BasicProvers.SRW_TAC [] []]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.082564

ALL_DISTINCT_SING
proof length: 1
proof time: 0.085071
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.128809
  inferstep time: 0.113689
  node_find time: 0.000322
  node_crea time: 0.009669
    pred time: 0.003009
    thmpred time: 0.0
    mc time: 0.004797
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "ALL_DISTINCT" , DB.fetch "list" "ALL_DISTINCT_APPEND" , DB.fetch "list" "ALL_DISTINCT_EL_IMP" , DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ" , DB.fetch "list" "ALL_DISTINCT_MAP" , DB.fetch "list" "FILTER_ALL_DISTINCT" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "REVERSE_EQ_SING" , DB.fetch "list" "MEM" , DB.fetch "list" "DROP_def"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.004206

ALL_DISTINCT_ZIP
proof length: 1
proof time: 0.082788
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.125747
  inferstep time: 0.098337
  node_find time: 0.000501
  node_crea time: 0.019723
    pred time: 0.003723
    thmpred time: 0.000001
    mc time: 0.015582
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT_EL_IMP" , DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ" , DB.fetch "list" "ALL_DISTINCT_APPEND" , DB.fetch "list" "ALL_DISTINCT" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "ALL_DISTINCT_MAP" , DB.fetch "list" "FILTER_ALL_DISTINCT" , DB.fetch "list" "EL_ZIP" , DB.fetch "list" "LENGTH_ZIP" , DB.fetch "list" "MEM_ZIP" , DB.fetch "list" "ZIP_MAP" , DB.fetch "list" "MAP_ZIP" , DB.fetch "list" "EVERY2_EVERY" , DB.fetch "list" "LIST_REL_EVERY_ZIP" , DB.fetch "list" "FOLDL2_FOLDL" , DB.fetch "list" "MAP2_MAP"])
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.31398

ALL_DISTINCT_ZIP_SWAP
Statistics
  infstep : 307
  nodes   : 101
  maxdepth: 6
Time: 10.004709
  inferstep time: 8.105984
  node_find time: 0.112982
  node_crea time: 1.314879
    pred time: 0.331905
    thmpred time: 0.000033
    mc time: 0.608096
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.137243

ALL_DISTINCT_REVERSE
proof length: 5
proof time: 0.046223
Statistics
  infstep : 71
  nodes   : 21
  maxdepth: 4
Time: 2.453177
  inferstep time: 2.044314
  node_find time: 0.028664
  node_crea time: 0.241229
    pred time: 0.074402
    thmpred time: 0.000007
    mc time: 0.079812
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_11", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "ALL_DISTINCT_ZIP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_11", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_APPEND"] THEN
  simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.COND_elim_ss) [(DB.fetch "list" "ALL_DISTINCT"), (DB.fetch "list" "MEM"), (DB.fetch "list" "FILTER"), boolLib.DISJ_IMP_THM, boolLib.FORALL_AND_THM, (DB.fetch "list" "CONS_11"), boolLib.EQ_IMP_THM, (DB.fetch "list" "tactictoe_thm_13")] THEN
  metisLib.METIS_TAC []]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.315576

ALL_DISTINCT_FLAT_REVERSE
Statistics
  infstep : 553
  nodes   : 87
  maxdepth: 5
Time: 10.001072
  inferstep time: 5.794211
  node_find time: 0.247986
  node_crea time: 1.290733
    pred time: 0.345094
    thmpred time: 0.000017
    mc time: 0.458131
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.128792

NRC_LRC
Statistics
  infstep : 732
  nodes   : 71
  maxdepth: 5
Time: 10.076738
  inferstep time: 8.087799
  node_find time: 0.27155
  node_crea time: 0.832681
    pred time: 0.255587
    thmpred time: 0.000021
    mc time: 0.288107
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.446922

LRC_MEM
Statistics
  infstep : 525
  nodes   : 92
  maxdepth: 5
Time: 10.018766
  inferstep time: 8.174528
  node_find time: 0.198501
  node_crea time: 0.930975
    pred time: 0.275484
    thmpred time: 0.000019
    mc time: 0.366085
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.198558

LRC_MEM_right
Statistics
  infstep : 628
  nodes   : 86
  maxdepth: 5
Time: 10.00768
  inferstep time: 7.720933
  node_find time: 0.255552
  node_crea time: 1.256585
    pred time: 0.348727
    thmpred time: 0.000028
    mc time: 0.397268
    inst time: 0.0
Proof status: Time Out
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.416505

LIST_TO_SET_APPEND
proof length: 9
proof time: 0.286989
Statistics
  infstep : 201
  nodes   : 51
  maxdepth: 5
Time: 4.258653
  inferstep time: 3.328369
  node_find time: 0.079413
  node_crea time: 0.497031
    pred time: 0.139658
    thmpred time: 0.000008
    mc time: 0.244875
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "EVERY2_cong", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "FOLDL2_cong", DB.fetch "list" "MAP2_CONG", DB.fetch "list" "MAP_CONG", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "tactictoe_thm_13"], BasicProvers.SRW_TAC [] [boolLib.DISJ_ASSOC] THEN
  BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "FOLDL2_cong", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "EVERY2_cong", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "MAP2_CONG", DB.fetch "list" "MAP_CONG", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "MEM", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "FILTER_NEQ_ID"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040933

LIST_TO_SET_EQ_EMPTY
proof length: 3
proof time: 0.00416
Statistics
  infstep : 12
  nodes   : 7
  maxdepth: 2
Time: 0.724921
  inferstep time: 0.617092
  node_find time: 0.004486
  node_crea time: 0.070547
    pred time: 0.02945
    thmpred time: 0.000003
    mc time: 0.026756
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "LRC_MEM_right", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "MEM_EL", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "MEM_MAP"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.028264

FINITE_LIST_TO_SET
proof length: 3
proof time: 0.003616
Statistics
  infstep : 13
  nodes   : 7
  maxdepth: 2
Time: 0.711381
  inferstep time: 0.604606
  node_find time: 0.004979
  node_crea time: 0.055956
    pred time: 0.022139
    thmpred time: 0.000001
    mc time: 0.037033
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "LIST_TO_SET_EQ_EMPTY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_EL", DB.fetch "list" "MEM_FLAT"], BasicProvers.SRW_TAC [] [DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LRC_MEM_right", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "MEM_EL"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031587

SUM_IMAGE_LIST_TO_SET_upper_bound
Statistics
  infstep : 677
  nodes   : 119
  maxdepth: 5
Time: 10.091972
  inferstep time: 7.528929
  node_find time: 0.279056
  node_crea time: 1.394954
    pred time: 0.339526
    thmpred time: 0.000029
    mc time: 0.645462
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.063554

SUM_MAP_MEM_bound
Statistics
  infstep : 697
  nodes   : 93
  maxdepth: 5
Time: 10.081073
  inferstep time: 7.554127
  node_find time: 0.285863
  node_crea time: 1.292982
    pred time: 0.42345
    thmpred time: 0.000021
    mc time: 0.498149
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.100553

INJ_MAP_EQ
Statistics
  infstep : 404
  nodes   : 77
  maxdepth: 5
Time: 10.028869
  inferstep time: 8.180375
  node_find time: 0.155941
  node_crea time: 1.112349
    pred time: 0.323873
    thmpred time: 0.000024
    mc time: 0.398715
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.462748

INJ_MAP_EQ_IFF
proof length: 3
proof time: 0.082625
Statistics
  infstep : 34
  nodes   : 16
  maxdepth: 4
Time: 1.598543
  inferstep time: 1.338452
  node_find time: 0.012861
  node_crea time: 0.146311
    pred time: 0.041669
    thmpred time: 0.000002
    mc time: 0.086234
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_33, DB.fetch "list" "INJ_MAP_EQ", DB.fetch "list" "LIST_TO_SET_APPEND", DB.fetch "list" "APPEND", DB.fetch "list" "UNION_APPEND", DB.fetch "list" "MAP_CONG", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "ZIP", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "LIST_REL_MAP1", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "LIST_REL_MAP2", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_EQ_EVERY2"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.116932

CARD_LIST_TO_SET
Statistics
  infstep : 210
  nodes   : 22
  maxdepth: 4
Time: 10.000938
  inferstep time: 2.325991
  node_find time: 0.082456
  node_crea time: 0.273435
    pred time: 0.105667
    thmpred time: 0.000006
    mc time: 0.088468
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064406

ALL_DISTINCT_CARD_LIST_TO_SET
proof length: 3
proof time: 0.00606
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.457122
  inferstep time: 0.396816
  node_find time: 0.002712
  node_crea time: 0.031756
    pred time: 0.01076
    thmpred time: 0.0
    mc time: 0.020126
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 63892*)ls"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LENGTH", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE"], BasicProvers.SRW_TAC [] [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LENGTH", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "CARD_LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "MEM_DROP", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "SUM_eq_0"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.028711

CARD_LIST_TO_SET_ALL_DISTINCT
proof length: 4
proof time: 0.069015
Statistics
  infstep : 11
  nodes   : 6
  maxdepth: 3
Time: 0.508864
  inferstep time: 0.419348
  node_find time: 0.004342
  node_crea time: 0.048019
    pred time: 0.015864
    thmpred time: 0.000004
    mc time: 0.029361
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 63892*)ls"] THENL [metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LENGTH", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_REVERSE"], BasicProvers.SRW_TAC [] [(DB.fetch "list" "ALL_DISTINCT"), (DB.fetch "list" "MAP"), (DB.fetch "list" "MEM_MAP")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "tactictoe_thm_14", DB.fetch "list" "LENGTH", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "CARD_LIST_TO_SET", DB.fetch "list" "MEM_DROP", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "LRC_MEM", DB.fetch "list" "LAST_EL", DB.fetch "list" "DROP_NIL", DB.fetch "list" "NRC_LRC", pred_setTheory.tactictoe_thm_33, DB.fetch "list" "EL_restricted", DB.fetch "list" "EL_simp_restricted"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032965

LIST_TO_SET_REVERSE
proof length: 5
proof time: 0.026928
Statistics
  infstep : 101
  nodes   : 16
  maxdepth: 4
Time: 1.647861
  inferstep time: 1.263666
  node_find time: 0.041486
  node_crea time: 0.156022
    pred time: 0.051728
    thmpred time: 0.000004
    mc time: 0.081553
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "REVERSE_11", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_FILTER"], BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN
  BasicProvers.PROVE_TAC []]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.029335

LIST_TO_SET_MAP
proof length: 3
proof time: 0.003591
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.442731
  inferstep time: 0.37239
  node_find time: 0.003092
  node_crea time: 0.039112
    pred time: 0.010603
    thmpred time: 0.000001
    mc time: 0.029947
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP", DB.fetch "list" "MEM", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "MEM_MAP", DB.fetch "list" "INJ_MAP_EQ", DB.fetch "list" "INJ_MAP_EQ_IFF", DB.fetch "list" "MAP_CONG", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "EL_MAP"], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037612

LIST_TO_SET_FILTER
proof length: 2
proof time: 0.003277
Statistics
  infstep : 58
  nodes   : 16
  maxdepth: 4
Time: 2.052631
  inferstep time: 1.752885
  node_find time: 0.024585
  node_crea time: 0.158091
    pred time: 0.059956
    thmpred time: 0.000006
    mc time: 0.057944
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "pred_set" "INTER_DEF", DB.fetch "pred_set" "IN_INTER", DB.fetch "pred_set" "INTER_applied", DB.fetch "pred_set" "UNION_DEF", DB.fetch "pred_set" "tactictoe_thm_0", DB.fetch "pred_set" "GSPECIFICATION", DB.fetch "pred_set" "EXTENSION", DB.fetch "pred_set" "IN_UNION", DB.fetch "pred_set" "SUBSET_DEF", DB.fetch "pred_set" "NOT_EQUAL_SETS", DB.fetch "pred_set" "UNION_applied", DB.fetch "pred_set" "SET_MINIMUM", relationTheory.RRESTRICT_DEF, relationTheory.IN_RDOM_RRESTRICT, DB.fetch "pred_set" "NUM_SET_WOP", DB.fetch "pred_set" "EQ_UNIV"] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "MEM_FILTER", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "FILTER", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "ALL_DISTINCT_FILTER"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00639

SET_TO_LIST_EMPTY
proof length: 1
proof time: 0.002981
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.149783
  inferstep time: 0.133032
  node_find time: 0.000781
  node_crea time: 0.009183
    pred time: 0.00329
    thmpred time: 0.000001
    mc time: 0.002457
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "SET_TO_LIST_THM" , DB.fetch "list" "SET_TO_LIST_primitive_def" , DB.fetch "list" "LIST_TO_SET" , DB.fetch "list" "LIST_TO_SET_EQ_EMPTY" , DB.fetch "list" "LIST_TO_SET_THM" , DB.fetch "list" "LIST_TO_SET_DEF" , DB.fetch "list" "ALL_DISTINCT" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "FILTER" , DB.fetch "list" "MEM" , DB.fetch "list" "tactictoe_thm_13" , DB.fetch "list" "APPEND" , DB.fetch "list" "APPEND_EQ_SELF" , DB.fetch "list" "APPEND_NIL" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "APPEND_eq_NIL" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005837

SET_TO_LIST_INV
Statistics
  infstep : 319
  nodes   : 83
  maxdepth: 5
Time: 10.014191
  inferstep time: 7.6972
  node_find time: 0.139449
  node_crea time: 1.610992
    pred time: 0.334244
    thmpred time: 0.00003
    mc time: 0.629788
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.121743

SET_TO_LIST_CARD
Statistics
  infstep : 395
  nodes   : 108
  maxdepth: 5
Time: 10.073008
  inferstep time: 7.184668
  node_find time: 0.174969
  node_crea time: 2.08026
    pred time: 0.449211
    thmpred time: 0.000029
    mc time: 0.875192
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.282136

SET_TO_LIST_IN_MEM
proof length: 2
proof time: 0.049007
Statistics
  infstep : 12
  nodes   : 7
  maxdepth: 2
Time: 0.511919
  inferstep time: 0.405274
  node_find time: 0.004909
  node_crea time: 0.06934
    pred time: 0.016708
    thmpred time: 0.0
    mc time: 0.039783
    inst time: 0.0
Proof found: Induction.recInduct (DB.fetch "list" "SET_TO_LIST_IND") THEN metisTools.METIS_TAC [DB.fetch "list" "SET_TO_LIST_THM", DB.fetch "list" "SET_TO_LIST_INV", DB.fetch "list" "SET_TO_LIST_CARD", pred_setTheory.infinite_rest, pred_setTheory.FINITE_REST, DB.fetch "list" "SET_TO_LIST_primitive_def", DB.fetch "list" "SET_TO_LIST_EMPTY", DB.fetch "list" "SET_TO_LIST_IND", pred_setTheory.CHOICE_INSERT_REST, pred_setTheory.REST_PSUBSET, pred_setTheory.chooser_def, pred_setTheory.REST_DEF, pred_setTheory.REST_SUBSET, DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_EQ_EMPTY"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.187447

MEM_SET_TO_LIST
proof length: 2
proof time: 0.069597
Statistics
  infstep : 15
  nodes   : 6
  maxdepth: 2
Time: 0.909102
  inferstep time: 0.778312
  node_find time: 0.009421
  node_crea time: 0.076921
    pred time: 0.019022
    thmpred time: 0.000001
    mc time: 0.05011
    inst time: 0.0
Proof found: Induction.recInduct (DB.fetch "list" "SET_TO_LIST_IND") THEN metisTools.METIS_TAC [DB.fetch "list" "SET_TO_LIST_IN_MEM", DB.fetch "list" "SET_TO_LIST_THM", DB.fetch "list" "SET_TO_LIST_INV", DB.fetch "list" "SET_TO_LIST_CARD", pred_setTheory.infinite_rest, pred_setTheory.FINITE_REST, DB.fetch "list" "SET_TO_LIST_primitive_def", DB.fetch "list" "SET_TO_LIST_EMPTY", DB.fetch "list" "SET_TO_LIST_IND", pred_setTheory.CHOICE_INSERT_REST, pred_setTheory.REST_PSUBSET, pred_setTheory.chooser_def, pred_setTheory.REST_DEF, pred_setTheory.REST_SUBSET, DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "LIST_TO_SET"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.020731

SET_TO_LIST_SING
proof length: 1
proof time: 0.003366
Statistics
  infstep : 4
  nodes   : 2
  maxdepth: 1
Time: 0.16665
  inferstep time: 0.139858
  node_find time: 0.001748
  node_crea time: 0.012842
    pred time: 0.003083
    thmpred time: 0.000001
    mc time: 0.008897
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "SET_TO_LIST_THM" , DB.fetch "list" "SET_TO_LIST_primitive_def" , DB.fetch "list" "SET_TO_LIST_EMPTY" , DB.fetch "list" "MEM_SET_TO_LIST" , DB.fetch "list" "SET_TO_LIST_IN_MEM" , DB.fetch "list" "SET_TO_LIST_CARD" , DB.fetch "list" "SET_TO_LIST_INV" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "ALL_DISTINCT_SING" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "REVERSE_EQ_SING" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008186

ALL_DISTINCT_SET_TO_LIST
proof length: 3
proof time: 0.048749
Statistics
  infstep : 64
  nodes   : 17
  maxdepth: 4
Time: 1.654359
  inferstep time: 1.221446
  node_find time: 0.029284
  node_crea time: 0.219243
    pred time: 0.051041
    thmpred time: 0.000003
    mc time: 0.131665
    inst time: 0.0
Proof found: Induction.recInduct (DB.fetch "list" "SET_TO_LIST_IND") THEN BasicProvers.SRW_TAC [] [boolLib.Once (boolLib.UNDISCH (DB.fetch "list" "SET_TO_LIST_THM"))] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_33, pred_setTheory.CHOICE_NOT_IN_REST, pred_setTheory.CHOICE_DEF, pred_setTheory.tactictoe_thm_22, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26, pred_setTheory.tactictoe_thm_27, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_49, pred_setTheory.CHOICE_INSERT_REST, DB.fetch "list" "SET_TO_LIST_primitive_def", pred_setTheory.ITSET_IND, pred_setTheory.ITSET_ind, pred_setTheory.tactictoe_thm_77]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.290964

ITSET_eq_FOLDL_SET_TO_LIST
Statistics
  infstep : 523
  nodes   : 125
  maxdepth: 6
Time: 10.006796
  inferstep time: 7.110876
  node_find time: 0.240716
  node_crea time: 1.769126
    pred time: 0.326315
    thmpred time: 0.000022
    mc time: 0.877965
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.064015

isPREFIX_THM
proof length: 1
proof time: 0.00066
Statistics
  infstep : 7
  nodes   : 3
  maxdepth: 1
Time: 0.229452
  inferstep time: 0.187759
  node_find time: 0.002776
  node_crea time: 0.022322
    pred time: 0.006743
    thmpred time: 0.000001
    mc time: 0.011007
    inst time: 0.0
Proof found: (simpLib.SIMP_TAC ( BasicProvers.srw_ss ( ) ) [ ( DB.fetch "pred_set" "partition_def" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.005045

LENGTH_SNOC
proof length: 4
proof time: 0.180587
Statistics
  infstep : 135
  nodes   : 17
  maxdepth: 3
Time: 1.674511
  inferstep time: 1.243207
  node_find time: 0.05723
  node_crea time: 0.156308
    pred time: 0.043925
    thmpred time: 0.000003
    mc time: 0.076198
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "tactictoe_thm_14", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "MEM_EL", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LRC_def"],
  metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_33]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.070921

LAST_SNOC
proof length: 6
proof time: 0.111659
Statistics
  infstep : 185
  nodes   : 33
  maxdepth: 4
Time: 2.936585
  inferstep time: 2.297901
  node_find time: 0.076292
  node_crea time: 0.249977
    pred time: 0.069776
    thmpred time: 0.000011
    mc time: 0.099367
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "CONS_ACYCLIC", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_NOT_EXISTS"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "LAST_CONS", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "MEM", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "FOLDL"],
  BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_EL", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SET_TO_LIST_SING", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "FILTER_EQ_CONS"],
  metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "FOLDL2_cong", DB.fetch "list" "LAST_EL", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction", DB.fetch "list" "list_nchotomy", DB.fetch "list" "tactictoe_thm_2", DB.fetch "list" "LENGTH_EQ_CONS"]]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.233862

FRONT_SNOC
Statistics
  infstep : 263
  nodes   : 39
  maxdepth: 4
Time: 10.001216
  inferstep time: 2.337903
  node_find time: 0.108659
  node_crea time: 0.321625
    pred time: 0.088202
    thmpred time: 0.000005
    mc time: 0.110415
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.176338

SNOC_APPEND
proof length: 3
proof time: 0.097529
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.275174
  inferstep time: 0.227988
  node_find time: 0.001582
  node_crea time: 0.026439
    pred time: 0.008738
    thmpred time: 0.0
    mc time: 0.015003
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "LAST_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SET_TO_LIST_SING", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "LENGTH_EQ_NUM"], metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "LAST_CONS", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "SET_TO_LIST_SING", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "LENGTH_EQ_NUM"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077144

LIST_TO_SET_SNOC
proof length: 3
proof time: 0.004451
Statistics
  infstep : 50
  nodes   : 12
  maxdepth: 3
Time: 1.588697
  inferstep time: 1.327405
  node_find time: 0.022107
  node_crea time: 0.144002
    pred time: 0.058331
    thmpred time: 0.000005
    mc time: 0.044335
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "LRC_MEM", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "CARD_LIST_TO_SET_ALL_DISTINCT", DB.fetch "list" "tactictoe_thm_14", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "CARD_LIST_TO_SET"] THEN BasicProvers.SRW_TAC [] [boolLib.FUN_EQ_THM, boolLib.IN_DEF] THEN
  BasicProvers.PROVE_TAC []
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.025505

MAP_SNOC
proof length: 4
proof time: 0.092618
Statistics
  infstep : 7
  nodes   : 6
  maxdepth: 3
Time: 0.596958
  inferstep time: 0.500946
  node_find time: 0.003426
  node_crea time: 0.057232
    pred time: 0.01991
    thmpred time: 0.000001
    mc time: 0.027569
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "MAP", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MEM_MAP", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "MAP_CONG", DB.fetch "list" "SUM_MAP_PLUS_ZIP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "SNOC", DB.fetch "list" "MAP", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "MEM_MAP", DB.fetch "list" "EL_MAP", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LENGTH_MAP"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "MAP", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "SNOC", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "SET_TO_LIST_SING", DB.fetch "list" "ALL_DISTINCT_SING"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008118

EL_SNOC
proof length: 2
proof time: 0.070202
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.267069
  inferstep time: 0.212752
  node_find time: 0.001504
  node_crea time: 0.025267
    pred time: 0.00754
    thmpred time: 0.000001
    mc time: 0.014306
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "MEM_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "MEM_DROP", DB.fetch "list" "EL_ZIP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "MEM_ZIP"] THEN metisTools.METIS_TAC [DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FILTER_EQ_CONS", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL_restricted", DB.fetch "list" "MEM_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_compute", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "MEM_DROP", DB.fetch "list" "EL_ZIP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "LIST_EQ"]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.143045

EL_LENGTH_SNOC
proof length: 3
proof time: 0.019017
Statistics
  infstep : 13
  nodes   : 7
  maxdepth: 3
Time: 0.751083
  inferstep time: 0.643571
  node_find time: 0.005703
  node_crea time: 0.058647
    pred time: 0.021172
    thmpred time: 0.000002
    mc time: 0.029682
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "EL_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "LAST_EL", DB.fetch "list" "MEM_EL", DB.fetch "list" "LIST_EQ", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "MEM_DROP", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ"], metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "EL_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "EL_restricted", DB.fetch "list" "EL_simp_restricted", DB.fetch "list" "MEM_EL", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033605

APPEND_SNOC
proof length: 3
proof time: 0.089339
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.395541
  inferstep time: 0.318651
  node_find time: 0.003109
  node_crea time: 0.047422
    pred time: 0.017145
    thmpred time: 0.000001
    mc time: 0.022585
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "APPEND_EQ_SING"], metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "APPEND_EQ_SING"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030955

EVERY_SNOC
proof length: 3
proof time: 0.092362
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.438627
  inferstep time: 0.377803
  node_find time: 0.002265
  node_crea time: 0.036487
    pred time: 0.013604
    thmpred time: 0.000001
    mc time: 0.017079
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "SNOC", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "APPEND_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP"], metisTools.METIS_TAC [DB.fetch "list" "SNOC", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "APPEND_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MONOTONIC"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.088087

EXISTS_SNOC
proof length: 4
proof time: 0.12109
Statistics
  infstep : 20
  nodes   : 9
  maxdepth: 3
Time: 1.025047
  inferstep time: 0.844739
  node_find time: 0.011328
  node_crea time: 0.094052
    pred time: 0.036653
    thmpred time: 0.000001
    mc time: 0.031846
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "MONO_EXISTS", DB.fetch "list" "EXISTS_MEM", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MONOTONIC", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "EVERY_EL"],
  metisTools.METIS_TAC [DB.fetch "list" "EXISTS_NOT_EVERY", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MONOTONIC", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "FILTER_EQ_ID", DB.fetch "list" "EVERY_EL"]]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.216814

MEM_SNOC
proof length: 1
proof time: 0.001532
Statistics
  infstep : 3
  nodes   : 2
  maxdepth: 1
Time: 0.173413
  inferstep time: 0.141136
  node_find time: 0.001757
  node_crea time: 0.015047
    pred time: 0.004227
    thmpred time: 0.0
    mc time: 0.010033
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_TO_SET_SNOC" , DB.fetch "list" "EXISTS_SNOC" , DB.fetch "list" "SNOC" , DB.fetch "list" "EL_LENGTH_SNOC" , DB.fetch "list" "EL_SNOC" , DB.fetch "list" "EVERY_SNOC" , DB.fetch "list" "FRONT_SNOC" , DB.fetch "list" "LAST_SNOC" , DB.fetch "list" "LENGTH_SNOC" , DB.fetch "list" "MAP_SNOC" , DB.fetch "list" "SNOC_APPEND" , DB.fetch "list" "APPEND_SNOC" , DB.fetch "list" "MEM_MAP" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "tactictoe_thm_13" , DB.fetch "list" "FILTER_NEQ_ID" ])
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.201222

SNOC_11
proof length: 2
proof time: 0.156569
Statistics
  infstep : 16
  nodes   : 5
  maxdepth: 2
Time: 0.627971
  inferstep time: 0.546286
  node_find time: 0.00681
  node_crea time: 0.039471
    pred time: 0.013048
    thmpred time: 0.000001
    mc time: 0.014871
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN metisTools.METIS_TAC [DB.fetch "list" "MEM_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "APPEND_SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EXISTS_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "FOLDL2_cong"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.126711

REVERSE_SNOC_DEF
proof length: 1
proof time: 0.045248
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.087456
  inferstep time: 0.068268
  node_find time: 0.000424
  node_crea time: 0.012567
    pred time: 0.003898
    thmpred time: 0.0
    mc time: 0.00526
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "REVERSE_EQ_SING" , DB.fetch "list" "REVERSE_EQ_NIL" , DB.fetch "list" "MEM_REVERSE" , DB.fetch "list" "ALL_DISTINCT_REVERSE" , DB.fetch "list" "REVERSE_REVERSE" , DB.fetch "list" "FILTER_REVERSE" , DB.fetch "list" "LENGTH_REVERSE" , DB.fetch "list" "REVERSE_APPEND" , DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE" , DB.fetch "list" "LIST_TO_SET_REVERSE" , DB.fetch "list" "REVERSE_11" , DB.fetch "list" "SNOC" , DB.fetch "list" "SNOC_APPEND" , DB.fetch "list" "EVERY_SNOC" , DB.fetch "list" "EL_LENGTH_SNOC"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007696

REVERSE_SNOC
proof length: 2
proof time: 0.052518
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.263354
  inferstep time: 0.212151
  node_find time: 0.0013
  node_crea time: 0.030627
    pred time: 0.006334
    thmpred time: 0.000001
    mc time: 0.012509
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "EXISTS_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "MEM_SNOC", DB.fetch "list" "APPEND_SNOC", DB.fetch "list" "SNOC_11", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "REVERSE_EQ_SING"] THEN metisTools.METIS_TAC [DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "REVERSE_11", DB.fetch "list" "APPEND_EQ_SING"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.081115
Replaying proof: 0.000055
Replaying proof: 0.000422
Replaying proof: 0.00102

SNOC_Axiom
Statistics
  infstep : 246
  nodes   : 25
  maxdepth: 3
Time: 10.000997
  inferstep time: 2.031728
  node_find time: 0.112644
  node_crea time: 0.221276
    pred time: 0.062768
    thmpred time: 0.000003
    mc time: 0.054704
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.127782

LENGTH_GENLIST
proof length: 3
proof time: 0.081818
Statistics
  infstep : 97
  nodes   : 18
  maxdepth: 3
Time: 1.997326
  inferstep time: 1.639539
  node_find time: 0.043766
  node_crea time: 0.141732
    pred time: 0.047646
    thmpred time: 0.000001
    mc time: 0.054508
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL [metisTools.METIS_TAC [DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "NULL_LENGTH", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "SUM_MAP_PLUS_ZIP"], metisTools.METIS_TAC [DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "MEM_DROP", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "tactictoe_thm_14", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "MAP_ZIP"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.072692

MAP_GENLIST
proof length: 4
proof time: 0.038595
Statistics
  infstep : 13
  nodes   : 9
  maxdepth: 3
Time: 0.811148
  inferstep time: 0.567078
  node_find time: 0.009051
  node_crea time: 0.155046
    pred time: 0.048591
    thmpred time: 0.000004
    mc time: 0.085157
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "PAD_LEFT", DB.fetch "list" "PAD_RIGHT", DB.fetch "list" "MAP_MAP_o", DB.fetch "list" "MAP_o", DB.fetch "list" "LIST_REL_MAP1", DB.fetch "list" "MAP_ZIP", pred_setTheory.SUM_IMAGE_INJ_o, pred_setTheory.SUM_IMAGE_PERMUTES, combinTheory.o_DEF, combinTheory.o_THM, combinTheory.o_ASSOC, pred_setTheory.BIJ_INV, pred_setTheory.IMAGE_COMPOSE, pred_setTheory.IMAGE_IMAGE], BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_GENLIST", pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_35, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_39, pred_setTheory.tactictoe_thm_41] THEN
  metisTools.METIS_TAC [DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "MAP_SNOC", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_35, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_39, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.047406
Replaying proof: 0.004919

HD_GENLIST_COR
proof length: 1
proof time: 0.054668
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.119067
  inferstep time: 0.069215
  node_find time: 0.000842
  node_crea time: 0.029092
    pred time: 0.002819
    thmpred time: 0.0
    mc time: 0.029082
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "EL_GENLIST" , DB.fetch "list" "GENLIST" , DB.fetch "list" "LENGTH_GENLIST" , DB.fetch "list" "MAP_GENLIST" , DB.fetch "list" "HD_GENLIST" , DB.fetch "list" "EL" , DB.fetch "list" "EL_compute" , DB.fetch "list" "EL_restricted" , DB.fetch "list" "list_case_compute" , DB.fetch "list" "PAD_LEFT" , DB.fetch "list" "PAD_RIGHT" , DB.fetch "list" "CONS" , DB.fetch "list" "HD" , prim_recTheory.SIMP_REC_REL , pred_setTheory.KoenigsLemma , prim_recTheory.DC])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039936

GENLIST_FUN_EQ
Statistics
  infstep : 428
  nodes   : 83
  maxdepth: 5
Time: 10.020302
  inferstep time: 7.19699
  node_find time: 0.282882
  node_crea time: 1.535018
    pred time: 0.425524
    thmpred time: 0.000024
    mc time: 0.648189
    inst time: 0.0
Proof status: Time Out
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013933

GENLIST_APPEND
Statistics
  infstep : 361
  nodes   : 97
  maxdepth: 6
Time: 10.039986
  inferstep time: 8.030419
  node_find time: 0.190682
  node_crea time: 1.061357
    pred time: 0.284652
    thmpred time: 0.000019
    mc time: 0.468492
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.039754

EVERY_GENLIST
proof length: 1
proof time: 0.002184
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.337505
  inferstep time: 0.31173
  node_find time: 0.000969
  node_crea time: 0.01305
    pred time: 0.003667
    thmpred time: 0.0
    mc time: 0.007797
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "EL_GENLIST" , DB.fetch "list" "GENLIST_FUN_EQ" , DB.fetch "list" "HD_GENLIST_COR" , DB.fetch "list" "GENLIST" , DB.fetch "list" "LENGTH_GENLIST" , DB.fetch "list" "MAP_GENLIST" , DB.fetch "list" "GENLIST_APPEND" , DB.fetch "list" "HD_GENLIST" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EVERY_CONG" , DB.fetch "list" "EVERY_FILTER" , DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "EVERY_MONOTONIC" , DB.fetch "list" "MONO_EVERY" , DB.fetch "list" "EVERY_DEF" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.098755

EXISTS_GENLIST
Statistics
  infstep : 769
  nodes   : 88
  maxdepth: 5
Time: 10.004838
  inferstep time: 7.416061
  node_find time: 0.392461
  node_crea time: 0.927123
    pred time: 0.260258
    thmpred time: 0.000014
    mc time: 0.3247
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.093344

TL_GENLIST
Statistics
  infstep : 392
  nodes   : 94
  maxdepth: 5
Time: 10.061063
  inferstep time: 8.120573
  node_find time: 0.195794
  node_crea time: 0.996709
    pred time: 0.238847
    thmpred time: 0.000031
    mc time: 0.429037
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.225755

ZIP_GENLIST
Statistics
  infstep : 388
  nodes   : 92
  maxdepth: 5
Time: 10.011073
  inferstep time: 7.813464
  node_find time: 0.213818
  node_crea time: 1.282899
    pred time: 0.364496
    thmpred time: 0.000028
    mc time: 0.493817
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.152228

GENLIST_CONS
proof length: 3
proof time: 0.004209
Statistics
  infstep : 133
  nodes   : 31
  maxdepth: 4
Time: 2.910006
  inferstep time: 2.249968
  node_find time: 0.064547
  node_crea time: 0.320897
    pred time: 0.089261
    thmpred time: 0.000008
    mc time: 0.136774
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "TL_GENLIST", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "MAP_GENLIST", DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "GENLIST_APPEND", DB.fetch "list" "PAD_LEFT", DB.fetch "list" "PAD_RIGHT", numeralTheory.numeral_distrib, arithmeticTheory.SUB_LEFT_SUC], BasicProvers.SRW_TAC [] [DB.fetch "list" "TL_GENLIST", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "MAP_GENLIST", DB.fetch "list" "GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "GENLIST_APPEND", prim_recTheory.LESS_SUC_SUC, DB.fetch "list" "PAD_LEFT", DB.fetch "list" "PAD_RIGHT", prim_recTheory.num_Axiom]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.033516

NULL_GENLIST
proof length: 1
proof time: 0.069875
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.103499
  inferstep time: 0.084738
  node_find time: 0.000592
  node_crea time: 0.011356
    pred time: 0.00289
    thmpred time: 0.000001
    mc time: 0.004947
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "GENLIST" , DB.fetch "list" "HD_GENLIST_COR" , DB.fetch "list" "EL_GENLIST" , DB.fetch "list" "LENGTH_GENLIST" , DB.fetch "list" "EVERY_GENLIST" , DB.fetch "list" "EXISTS_GENLIST" , DB.fetch "list" "GENLIST_FUN_EQ" , DB.fetch "list" "MAP_GENLIST" , DB.fetch "list" "ZIP_GENLIST" , DB.fetch "list" "GENLIST_APPEND" , DB.fetch "list" "HD_GENLIST" , DB.fetch "list" "GENLIST_CONS" , DB.fetch "list" "TL_GENLIST" , DB.fetch "list" "NULL_LENGTH" , DB.fetch "list" "MAP_TL" , DB.fetch "list" "list_case_compute"])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.131114
Replaying proof: 0.000872

GENLIST_GENLIST_AUX
proof length: 4
proof time: 0.048555
Statistics
  infstep : 17
  nodes   : 10
  maxdepth: 3
Time: 1.07619
  inferstep time: 0.860211
  node_find time: 0.011919
  node_crea time: 0.10664
    pred time: 0.040933
    thmpred time: 0.000002
    mc time: 0.030251
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL [metisTools.METIS_TAC [DB.fetch "list" "GENLIST_AUX", DB.fetch "list" "GENLIST_AUX_compute", DB.fetch "list" "GENLIST", DB.fetch "list" "tactictoe_thm_18", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "NULL_GENLIST", DB.fetch "list" "GENLIST_CONS", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "MAP_GENLIST", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "GENLIST_APPEND"], BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST_AUX", DB.fetch "list" "tactictoe_thm_18", DB.fetch "list" "GENLIST_AUX_compute", DB.fetch "list" "GENLIST", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "GENLIST_CONS", DB.fetch "list" "TL_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "MAP_GENLIST", DB.fetch "list" "NULL_GENLIST", DB.fetch "list" "ZIP_GENLIST"] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST_AUX", DB.fetch "list" "tactictoe_thm_18", DB.fetch "list" "GENLIST_AUX_compute", DB.fetch "list" "GENLIST", DB.fetch "list" "MAP_SNOC", DB.fetch "list" "MAP", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "SNOC", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "SNOC_Axiom", DB.fetch "list" "tactictoe_thm_17", DB.fetch "list" "SNOC_INDUCT", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "SNOC_CASES", DB.fetch "list" "EVERY_SNOC"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.037421

GENLIST_NUMERALS
proof length: 1
proof time: 0.001911
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.153999
  inferstep time: 0.133486
  node_find time: 0.001035
  node_crea time: 0.011065
    pred time: 0.003304
    thmpred time: 0.000001
    mc time: 0.004061
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "GENLIST" , DB.fetch "list" "GENLIST_GENLIST_AUX" , DB.fetch "list" "GENLIST_AUX_compute" , DB.fetch "list" "GENLIST_AUX" , DB.fetch "list" "tactictoe_thm_18" , numeralTheory.numeral_distrib , numeralTheory.numeral_div2 , arithmeticTheory.NUMERAL_MULT_EQ_DIV , numeralTheory.numeral_MAX , numeralTheory.numeral_MIN , arithmeticTheory.MODEQ_NUMERAL , arithmeticTheory.NUMERAL_DEF , DB.fetch "list" "GENLIST_CONS" , DB.fetch "list" "HD_GENLIST" , DB.fetch "list" "HD_GENLIST_COR" , DB.fetch "list" "NULL_GENLIST" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009405

MEM_GENLIST
proof length: 5
proof time: 0.03781
Statistics
  infstep : 89
  nodes   : 19
  maxdepth: 4
Time: 2.387156
  inferstep time: 1.872723
  node_find time: 0.046753
  node_crea time: 0.252822
    pred time: 0.087547
    thmpred time: 0.000003
    mc time: 0.102421
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST", DB.fetch "list" "GENLIST_NUMERALS", numeralTheory.numeral_distrib, prim_recTheory.NOT_LESS_0, DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "NULL_GENLIST", DB.fetch "list" "GENLIST_CONS", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "GENLIST_GENLIST_AUX", DB.fetch "list" "MAP_GENLIST"], BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [(DB.fetch "list" "GENLIST"), (DB.fetch "list" "EXISTS_SNOC"), (DB.fetch "list" "EXISTS_DEF")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST", DB.fetch "list" "MAP_SNOC", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "LENGTH_GENLIST", DB.fetch "list" "GENLIST_GENLIST_AUX", DB.fetch "list" "MAP_GENLIST", DB.fetch "list" "NULL_GENLIST", DB.fetch "list" "GENLIST_APPEND", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "GENLIST_CONS"] THEN
  metisLib.METIS_TAC [prim_recTheory.LESS_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034507

ALL_DISTINCT_SNOC
proof length: 4
proof time: 0.097801
Statistics
  infstep : 63
  nodes   : 24
  maxdepth: 4
Time: 2.516727
  inferstep time: 1.994138
  node_find time: 0.031995
  node_crea time: 0.331608
    pred time: 0.104259
    thmpred time: 0.000008
    mc time: 0.10099
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "MEM", DB.fetch "list" "SNOC", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "MEM_SNOC", DB.fetch "list" "LIST_TO_SET_SNOC", DB.fetch "list" "SNOC_Axiom", DB.fetch "list" "tactictoe_thm_17", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "SNOC_INDUCT", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "SNOC_CASES", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "SNOC_11"], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM] THEN
  metisTools.METIS_TAC [pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "CARD_LIST_TO_SET_ALL_DISTINCT"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035707

ALL_DISTINCT_GENLIST
proof length: 2
proof time: 0.029175
Statistics
  infstep : 161
  nodes   : 20
  maxdepth: 4
Time: 2.54919
  inferstep time: 1.889556
  node_find time: 0.082817
  node_crea time: 0.265656
    pred time: 0.071405
    thmpred time: 0.000005
    mc time: 0.107842
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ")] THEN metisLib.METIS_TAC [(DB.fetch "option" "option_nchotomy")]
Org tac number: 19
Original proof time: 0.0
Replaying proof: 0.611104
Replaying proof: 0.000029

SUM_SNOC
proof length: 5
proof time: 0.006268
Statistics
  infstep : 188
  nodes   : 50
  maxdepth: 4
Time: 5.953022
  inferstep time: 4.944535
  node_find time: 0.096391
  node_crea time: 0.48026
    pred time: 0.152839
    thmpred time: 0.000014
    mc time: 0.163706
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "SUM", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "ALL_DISTINCT_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "EXISTS_SNOC", DB.fetch "list" "FOLDL_SNOC", DB.fetch "list" "FRONT_SNOC", DB.fetch "list" "LAST_SNOC"] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "SUM", DB.fetch "list" "APPEND", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "SNOC", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "REVERSE_EQ_SING"],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "SUM", DB.fetch "list" "APPEND", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "APPEND_EQ_SING", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "SNOC", DB.fetch "list" "LAST_CONS", DB.fetch "list" "FRONT_CONS"] THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [(DB.fetch "list" "MAP"), (DB.fetch "list" "ZIP"), (DB.fetch "list" "MAP_ZIP"), (DB.fetch "list" "SUM")]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.112111

SUM_APPEND
proof length: 4
proof time: 0.008393
Statistics
  infstep : 42
  nodes   : 12
  maxdepth: 3
Time: 1.430185
  inferstep time: 1.183673
  node_find time: 0.021835
  node_crea time: 0.115983
    pred time: 0.034812
    thmpred time: 0.000004
    mc time: 0.055034
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "SUM", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "APPEND_11_LENGTH"], BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "SUM", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "FLAT", DB.fetch "list" "REVERSE_DEF"] THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "SUM", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.030319

SUM_MAP_FOLDL
Statistics
  infstep : 880
  nodes   : 100
  maxdepth: 5
Time: 10.006469
  inferstep time: 7.094508
  node_find time: 0.455966
  node_crea time: 1.052189
    pred time: 0.231676
    thmpred time: 0.000015
    mc time: 0.450704
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035281

SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST
Statistics
  infstep : 410
  nodes   : 105
  maxdepth: 5
Time: 10.045054
  inferstep time: 7.201939
  node_find time: 0.225198
  node_crea time: 1.732776
    pred time: 0.421621
    thmpred time: 0.000029
    mc time: 0.615253
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.146774

EL_REVERSE
Statistics
  infstep : 313
  nodes   : 74
  maxdepth: 5
Time: 10.017911
  inferstep time: 8.142595
  node_find time: 0.170259
  node_crea time: 1.055857
    pred time: 0.31434
    thmpred time: 0.000024
    mc time: 0.335113
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.255478

REVERSE_GENLIST
Statistics
  infstep : 546
  nodes   : 76
  maxdepth: 5
Time: 10.001352
  inferstep time: 7.716111
  node_find time: 0.310568
  node_crea time: 0.951787
    pred time: 0.254004
    thmpred time: 0.000014
    mc time: 0.369622
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.204417

FOLDL_UNION_BIGUNION
Statistics
  infstep : 568
  nodes   : 108
  maxdepth: 6
Time: 10.006127
  inferstep time: 7.302579
  node_find time: 0.321351
  node_crea time: 1.39766
    pred time: 0.309239
    thmpred time: 0.000029
    mc time: 0.458767
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.057838

FOLDL_UNION_BIGUNION_paired
proof length: 2
proof time: 0.003288
Statistics
  infstep : 12
  nodes   : 6
  maxdepth: 3
Time: 0.563018
  inferstep time: 0.460909
  node_find time: 0.006572
  node_crea time: 0.053479
    pred time: 0.015554
    thmpred time: 0.000002
    mc time: 0.025818
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "list" "FOLDL"), pred_setTheory.UNION_ASSOC] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "FOLDL_UNION_BIGUNION", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDL", DB.fetch "list" "ITSET_eq_FOLDL_SET_TO_LIST", DB.fetch "list" "FOLDL_SNOC", DB.fetch "list" "FOLDL_EQ_FOLDR", pairTheory.UNCURRY_DEF, pairTheory.UNCURRY_CONG, pred_setTheory.GSPEC_PAIR_ETA, DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "LIST_REL_EVERY_ZIP", pairTheory.ELIM_UNCURRY]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.144

FOLDL_ZIP_SAME
proof length: 4
proof time: 0.098543
Statistics
  infstep : 47
  nodes   : 13
  maxdepth: 3
Time: 1.118886
  inferstep time: 0.845412
  node_find time: 0.023061
  node_crea time: 0.134114
    pred time: 0.032972
    thmpred time: 0.000002
    mc time: 0.078882
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "ZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "UNZIP", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDL_SNOC", DB.fetch "list" "FOLDL_EQ_FOLDR", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "FOLDL_UNION_BIGUNION_paired", DB.fetch "list" "FOLDL_UNION_BIGUNION", DB.fetch "list" "ITSET_eq_FOLDL_SET_TO_LIST", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP"], simpLib.ASM_SIMP_TAC boolSimps.bool_ss [(DB.fetch "list" "FOLDR"), (DB.fetch "list" "FOLDL")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "ZIP", DB.fetch "list" "FOLDL", DB.fetch "list" "FOLDL_SNOC", DB.fetch "list" "FOLDL_EQ_FOLDR", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "FOLDL_UNION_BIGUNION_paired", DB.fetch "list" "FOLDL_UNION_BIGUNION", DB.fetch "list" "ITSET_eq_FOLDL_SET_TO_LIST", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "MAP_ZIP"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032124

MAP_ZIP_SAME
proof length: 3
proof time: 0.005836
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.484296
  inferstep time: 0.402124
  node_find time: 0.003394
  node_crea time: 0.046277
    pred time: 0.016029
    thmpred time: 0.000002
    mc time: 0.028269
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "ZIP", pairTheory.LAMBDA_PROD, DB.fetch "list" "UNZIP_THM", DB.fetch "list" "UNZIP", DB.fetch "list" "SUM_MAP_PLUS_ZIP", pairTheory.CURRY_DEF, pairTheory.pair_Axiom, pairTheory.FORALL_PROD, pairTheory.EXISTS_PROD, pairTheory.pair_induction, DB.fetch "list" "MAP_ZIP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "FOLDL_ZIP_SAME", DB.fetch "list" "EVERY2_EVERY"], BasicProvers.SRW_TAC [numSimps.ARITH_ss] [(DB.fetch "list" "MAP"), (DB.fetch "list" "ZIP"), (DB.fetch "list" "MAP_ZIP"), (DB.fetch "list" "SUM")]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.041315

INFINITE_LIST_UNIV
Statistics
  infstep : 519
  nodes   : 95
  maxdepth: 5
Time: 10.013132
  inferstep time: 7.638791
  node_find time: 0.29286
  node_crea time: 1.149216
    pred time: 0.292459
    thmpred time: 0.000029
    mc time: 0.401877
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.140884

LEN_LENGTH_LEM
proof length: 4
proof time: 0.004391
Statistics
  infstep : 16
  nodes   : 7
  maxdepth: 3
Time: 1.101182
  inferstep time: 0.955664
  node_find time: 0.009509
  node_crea time: 0.076285
    pred time: 0.028206
    thmpred time: 0.0
    mc time: 0.035265
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "LEN_DEF", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "LENGTH_APPEND", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "EL_MAP", DB.fetch "list" "EL_REVERSE"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LEN_DEF", DB.fetch "list" "LENGTH", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "UNZIP_MAP", arithmeticTheory.tactictoe_thm_52, arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "SUM", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER", DB.fetch "list" "FLAT", DB.fetch "list" "MAP"] THEN
  simpLib.SIMP_TAC boolSimps.bool_ss [arithmeticTheory.NUMERAL_DEF, arithmeticTheory.GREATER_DEF, (DB.fetch "numeral" "iZ"), arithmeticTheory.GREATER_OR_EQ, arithmeticTheory.LESS_OR_EQ, boolLib.EQ_IMP_THM, boolLib.DISJ_IMP_THM, arithmeticTheory.ADD_CLAUSES, arithmeticTheory.ALT_ZERO, arithmeticTheory.MULT_CLAUSES, arithmeticTheory.EXP, prim_recTheory.PRE, prim_recTheory.NOT_LESS_0, arithmeticTheory.SUB_0, arithmeticTheory.BIT1, arithmeticTheory.BIT2, arithmeticTheory.ODD, arithmeticTheory.EVEN]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.043472

REV_REVERSE_LEM
Statistics
  infstep : 468
  nodes   : 37
  maxdepth: 4
Time: 10.001577
  inferstep time: 4.323536
  node_find time: 0.260602
  node_crea time: 0.424377
    pred time: 0.129432
    thmpred time: 0.000013
    mc time: 0.151603
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.116212

LENGTH_LEN
proof length: 3
proof time: 0.144862
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.368319
  inferstep time: 0.304018
  node_find time: 0.00207
  node_crea time: 0.038251
    pred time: 0.009383
    thmpred time: 0.0
    mc time: 0.023422
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "LEN_DEF", DB.fetch "list" "LENGTH", DB.fetch "list" "LEN_LENGTH_LEM", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "NULL_LENGTH", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_EL_IMP"], metisTools.METIS_TAC [DB.fetch "list" "LEN_DEF", DB.fetch "list" "LENGTH", DB.fetch "list" "LEN_LENGTH_LEM", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "UNZIP_MAP", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "SUM", DB.fetch "list" "APPEND", DB.fetch "list" "FILTER", DB.fetch "list" "FLAT", DB.fetch "list" "MAP"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009682

REVERSE_REV
proof length: 3
proof time: 0.054502
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.26884
  inferstep time: 0.212588
  node_find time: 0.002171
  node_crea time: 0.033908
    pred time: 0.015509
    thmpred time: 0.000001
    mc time: 0.009098
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REV_DEF", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "REV_REVERSE_LEM", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "EL_REVERSE", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "REVERSE_11"], metisTools.METIS_TAC [DB.fetch "list" "REV_DEF", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "REV_REVERSE_LEM", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "LENGTH_LEN", DB.fetch "list" "LEN_LENGTH_LEM", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "REVERSE_EQ_SING", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008696

SUM_ACC_SUM_LEM
proof length: 3
proof time: 0.004706
Statistics
  infstep : 10
  nodes   : 6
  maxdepth: 2
Time: 0.823868
  inferstep time: 0.720681
  node_find time: 0.005679
  node_crea time: 0.05178
    pred time: 0.013545
    thmpred time: 0.0
    mc time: 0.031384
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "SUM_ACC_DEF", DB.fetch "list" "SUM", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_APPEND", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "LEN_DEF", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "list_size_def", DB.fetch "list" "tactictoe_thm_6", DB.fetch "list" "tactictoe_thm_7"], BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "SUM_ACC_DEF", DB.fetch "list" "SUM", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "LEN_LENGTH_LEM", DB.fetch "list" "LENGTH_LEN", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "REVERSE_REV", DB.fetch "list" "UNZIP_MAP", arithmeticTheory.tactictoe_thm_52, arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_APPEND"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.04562

SUM_SUM_ACC
proof length: 1
proof time: 0.00336
Statistics
  infstep : 9
  nodes   : 5
  maxdepth: 2
Time: 0.584566
  inferstep time: 0.482386
  node_find time: 0.006237
  node_crea time: 0.057432
    pred time: 0.015982
    thmpred time: 0.0
    mc time: 0.026449
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ numSimps.ARITH_ss ] [ DB.fetch "list" "SUM_ACC_SUM_LEM" , DB.fetch "list" "SUM_ACC_DEF" , DB.fetch "list" "SUM" , DB.fetch "list" "SUM_eq_0" , DB.fetch "list" "SUM_APPEND" , DB.fetch "list" "SUM_SNOC" , DB.fetch "list" "LENGTH_LEN" , DB.fetch "list" "LEN_LENGTH_LEM" , DB.fetch "list" "FILTER_APPEND_DISTRIB" , DB.fetch "list" "MEM_FILTER" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "REVERSE_REV" , DB.fetch "list" "UNZIP_MAP" , DB.fetch "list" "SUM_MAP_FOLDL" , DB.fetch "list" "SUM_MAP_PLUS_ZIP" , DB.fetch "list" "SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009352

EXISTS_LIST
proof length: 1
proof time: 0.01702
Statistics
  infstep : 85
  nodes   : 13
  maxdepth: 3
Time: 1.67262
  inferstep time: 1.244103
  node_find time: 0.051094
  node_crea time: 0.188453
    pred time: 0.04976
    thmpred time: 0.000002
    mc time: 0.055414
    inst time: 0.0
Proof found: (metisLib.METIS_TAC [ ( DB.fetch "list" "list_nchotomy" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.023376

FORALL_LIST
proof length: 1
proof time: 0.014119
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.178344
  inferstep time: 0.144553
  node_find time: 0.001588
  node_crea time: 0.017082
    pred time: 0.004635
    thmpred time: 0.0
    mc time: 0.008846
    inst time: 0.0
Proof found: (metisLib.METIS_TAC [ ( DB.fetch "list" "list_induction" ) ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.029779

MEM_SPLIT_APPEND_first
Statistics
  infstep : 417
  nodes   : 89
  maxdepth: 5
Time: 10.01586
  inferstep time: 7.969491
  node_find time: 0.233121
  node_crea time: 1.027613
    pred time: 0.314022
    thmpred time: 0.000021
    mc time: 0.343047
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.177118

MEM_SPLIT_APPEND_last
Statistics
  infstep : 237
  nodes   : 83
  maxdepth: 6
Time: 10.014825
  inferstep time: 8.084871
  node_find time: 0.1384
  node_crea time: 1.246544
    pred time: 0.415923
    thmpred time: 0.000026
    mc time: 0.355403
    inst time: 0.0
Proof status: Time Out
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.499535

APPEND_EQ_APPEND
Statistics
  infstep : 585
  nodes   : 132
  maxdepth: 5
Time: 10.001971
  inferstep time: 6.631191
  node_find time: 0.340737
  node_crea time: 1.957308
    pred time: 0.511847
    thmpred time: 0.00002
    mc time: 0.490482
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.359207

APPEND_EQ_CONS
proof length: 4
proof time: 0.006729
Statistics
  infstep : 20
  nodes   : 6
  maxdepth: 3
Time: 0.715593
  inferstep time: 0.574893
  node_find time: 0.011547
  node_crea time: 0.069338
    pred time: 0.025369
    thmpred time: 0.000002
    mc time: 0.028731
    inst time: 0.0
Proof found: BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 22259*)l1"] THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "APPEND_EQ_SING", DB.fetch "list" "APPEND_eq_NIL", DB.fetch "list" "APPEND_EQ_SELF", DB.fetch "list" "APPEND_EQ_APPEND", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "LENGTH_EQ_SUM", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "APPEND_11", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "APPEND_11_LENGTH", DB.fetch "list" "APPEND_LENGTH_EQ"], simpLib.SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "list" "MAP_EQ_CONS")] THEN
  BasicProvers.PROVE_TAC []]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.143098

APPEND_EQ_APPEND_MID
Statistics
  infstep : 417
  nodes   : 116
  maxdepth: 6
Time: 10.000378
  inferstep time: 7.250982
  node_find time: 0.238524
  node_crea time: 1.719882
    pred time: 0.483818
    thmpred time: 0.000031
    mc time: 0.449198
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.391203
Replaying proof: 0.004974

LUPDATE_NIL
Statistics
  infstep : 581
  nodes   : 112
  maxdepth: 6
Time: 10.002187
  inferstep time: 7.521815
  node_find time: 0.33501
  node_crea time: 1.063907
    pred time: 0.304122
    thmpred time: 0.000015
    mc time: 0.230144
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.089048

LUPDATE_SEM
Statistics
  infstep : 672
  nodes   : 87
  maxdepth: 5
Time: 10.119511
  inferstep time: 7.427359
  node_find time: 0.374478
  node_crea time: 1.004912
    pred time: 0.25472
    thmpred time: 0.000019
    mc time: 0.455022
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.172436

EL_LUPDATE
Statistics
  infstep : 824
  nodes   : 89
  maxdepth: 6
Time: 10.015844
  inferstep time: 6.796371
  node_find time: 0.498351
  node_crea time: 1.207162
    pred time: 0.310323
    thmpred time: 0.000015
    mc time: 0.505885
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.196269

LENGTH_LUPDATE
proof length: 1
proof time: 0.0499
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.129841
  inferstep time: 0.09993
  node_find time: 0.000821
  node_crea time: 0.018571
    pred time: 0.00552
    thmpred time: 0.0
    mc time: 0.010218
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_SEM" , DB.fetch "list" "EL_LUPDATE" , DB.fetch "list" "LUPDATE_def" , DB.fetch "list" "LUPDATE_NIL" , DB.fetch "list" "EL_SNOC" , DB.fetch "list" "LENGTH_EQ_CONS" , DB.fetch "list" "MEM_DROP" , DB.fetch "list" "MEM_EL" , DB.fetch "list" "ZIP_GENLIST" , DB.fetch "list" "NRC_LRC" , DB.fetch "list" "EL_ZIP" , DB.fetch "list" "DROP_NIL" , DB.fetch "list" "EL_APPEND_EQN" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EL_REVERSE" , DB.fetch "list" "LENGTH_CONS"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008203

LUPDATE_LENGTH
proof length: 3
proof time: 0.147923
Statistics
  infstep : 62
  nodes   : 21
  maxdepth: 4
Time: 2.126011
  inferstep time: 1.667329
  node_find time: 0.035769
  node_crea time: 0.222455
    pred time: 0.073847
    thmpred time: 0.000006
    mc time: 0.113509
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 51042*)xs"] THENL [metisTools.METIS_TAC [DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "FLAT", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "APPEND_EQ_CONS", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "SNOC_APPEND"], metisTools.METIS_TAC [DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "DROP_def", DB.fetch "list" "TAKE_def", DB.fetch "list" "DROP_cons", DB.fetch "list" "TAKE_cons", DB.fetch "list" "FRONT_CONS_EQ_NIL", DB.fetch "list" "LIST_REL_CONS1", DB.fetch "list" "LIST_REL_CONS2", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044281

LUPDATE_SNOC
proof length: 9
proof time: 0.253544
Statistics
  infstep : 73
  nodes   : 30
  maxdepth: 5
Time: 2.871954
  inferstep time: 2.103899
  node_find time: 0.042175
  node_crea time: 0.415651
    pred time: 0.112654
    thmpred time: 0.000005
    mc time: 0.248846
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 89309*)ys"] THENL [BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89328*)k"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "SNOC_Axiom", DB.fetch "list" "tactictoe_thm_17", DB.fetch "list" "SNOC_CASES"],
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "SNOC_Axiom", DB.fetch "list" "tactictoe_thm_17", DB.fetch "list" "SNOC_CASES"]], BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89328*)k"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "SNOC", DB.fetch "list" "LENGTH", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_NIL", arithmeticTheory.tactictoe_thm_52, arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "EL_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "REVERSE_SNOC"],
  boolLib.REPEAT boolLib.STRIP_TAC THEN
  simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "list" "LUPDATE_def")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "SNOC", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EL_LENGTH_SNOC", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "SNOC_11", DB.fetch "list" "MEM_SNOC", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "LAST_SNOC"]]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.130523

MEM_LUPDATE_E
proof length: 5
proof time: 0.168904
Statistics
  infstep : 21
  nodes   : 12
  maxdepth: 3
Time: 1.209258
  inferstep time: 0.959648
  node_find time: 0.011492
  node_crea time: 0.120155
    pred time: 0.039113
    thmpred time: 0.000006
    mc time: 0.066336
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "MEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "INDEX_FIND_def", ind_typeTheory.ZRECSPACE_def, ind_typeTheory.ZRECSPACE_cases, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41], BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89421*)i"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "MEM", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "LRC_MEM_right", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "MEM_SPLIT"],
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "MEM", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "LRC_MEM_right", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "LENGTH_CONS"]]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.129666

MEM_LUPDATE
proof length: 2
proof time: 0.144351
Statistics
  infstep : 45
  nodes   : 17
  maxdepth: 4
Time: 2.338432
  inferstep time: 1.870254
  node_find time: 0.026062
  node_crea time: 0.302891
    pred time: 0.112101
    thmpred time: 0.000004
    mc time: 0.092217
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_NIL", arithmeticTheory.LESS_MONO_MULT2, DB.fetch "list" "LUPDATE_LENGTH", arithmeticTheory.MOD_PLUS, arithmeticTheory.MOD_TIMES2, arithmeticTheory.tactictoe_thm_52, DB.fetch "list" "MEM_EL", DB.fetch "list" "MEM_DROP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "EL_SNOC"] THEN metisTools.METIS_TAC [DB.fetch "list" "EL_LUPDATE", arithmeticTheory.LESS_MONO_MULT2, arithmeticTheory.MOD_PLUS, arithmeticTheory.MOD_TIMES2, arithmeticTheory.tactictoe_thm_52, DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "MEM_EL", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "MEM_DROP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "EL_ZIP"]
Org tac number: 17
Original proof time: 0.0
Replaying proof: 0.656445

LUPDATE_MAP
proof length: 7
proof time: 0.252017
Statistics
  infstep : 12
  nodes   : 9
  maxdepth: 3
Time: 0.952046
  inferstep time: 0.770152
  node_find time: 0.007581
  node_crea time: 0.099225
    pred time: 0.036523
    thmpred time: 0.000003
    mc time: 0.041724
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 89010*)n"] THENL [BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89030*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "MAP", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "SUM_MAP_PLUS_ZIP"],
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "MAP", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_SEM"]], BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89030*)l"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "MAP", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "SUM_MAP_MEM_bound"],
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "MAP", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "FOLDL_CONG", DB.fetch "list" "FOLDR_CONG", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SNOC"]]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.119862

splitAtPki_APPEND
Statistics
  infstep : 386
  nodes   : 92
  maxdepth: 5
Time: 10.107283
  inferstep time: 7.04306
  node_find time: 0.265561
  node_crea time: 1.78404
    pred time: 0.382293
    thmpred time: 0.000031
    mc time: 0.795736
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.158798
Replaying proof: 0.06776

TAKE_LENGTH_TOO_LONG
proof length: 4
proof time: 0.075033
Statistics
  infstep : 10
  nodes   : 6
  maxdepth: 3
Time: 0.751406
  inferstep time: 0.581998
  node_find time: 0.006855
  node_crea time: 0.078922
    pred time: 0.021133
    thmpred time: 0.000003
    mc time: 0.068685
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 53169*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_nil", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "TAKE_cons", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LENGTH_EQ_NIL"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_def", DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "TAKE_nil", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "TAKE_0", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute"] THEN
  simpLib.FULL_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_APPEND2", numpairTheory.tactictoe_thm_4, numpairTheory.tactictoe_thm_2, numpairTheory.tactictoe_thm_3, DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "TAKE_0", DB.fetch "list" "TAKE_LENGTH_ID", DB.fetch "list" "DROP_cons", DB.fetch "list" "DROP_def", arithmeticTheory.PRE_SUB1, DB.fetch "list" "TAKE_nil"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.055402

DROP_LENGTH_TOO_LONG
proof length: 3
proof time: 0.076356
Statistics
  infstep : 5
  nodes   : 4
  maxdepth: 2
Time: 0.423932
  inferstep time: 0.347403
  node_find time: 0.002939
  node_crea time: 0.042679
    pred time: 0.019652
    thmpred time: 0.0
    mc time: 0.019714
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_NIL", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "MEM_DROP", DB.fetch "list" "DROP_cons", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LAST_EL", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_NIL_SYM"], BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_cons", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "MEM_DROP", DB.fetch "list" "DROP_nil", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_0", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_EQ_CONS", DB.fetch "list" "LENGTH_CONS", DB.fetch "list" "list_INDUCT0", DB.fetch "list" "list_induction"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034623

TAKE_splitAtPki
Statistics
  infstep : 259
  nodes   : 82
  maxdepth: 6
Time: 10.008016
  inferstep time: 7.390201
  node_find time: 0.200177
  node_crea time: 1.638781
    pred time: 0.322459
    thmpred time: 0.000023
    mc time: 0.784352
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.101007

DROP_splitAtPki
proof length: 3
proof time: 0.012906
Statistics
  infstep : 11
  nodes   : 7
  maxdepth: 3
Time: 0.966235
  inferstep time: 0.747317
  node_find time: 0.009211
  node_crea time: 0.117339
    pred time: 0.032782
    thmpred time: 0.000002
    mc time: 0.075514
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "list" "TAKE_splitAtPki", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_NIL", DB.fetch "list" "MEM_DROP", DB.fetch "list" "splitAtPki_def", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_cons", combinTheory.I_DEF, DB.fetch "list" "DROP_0", combinTheory.K_o_THM, DB.fetch "list" "PAD_LEFT"] THEN boolLib.DEEP_INTRO_TAC whileTheory.OLEAST_INTRO THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [optionTheory.option_CLAUSES, optionTheory.option_case_def, DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "MEM_DROP", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "DROP_NIL", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_cons", optionTheory.OPTION_MAP_CASE, DB.fetch "list" "DROP_0", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LUPDATE_SEM"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.076894

LIST_BIND_THM
proof length: 1
proof time: 0.002863
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.255459
  inferstep time: 0.223747
  node_find time: 0.001562
  node_crea time: 0.014251
    pred time: 0.003606
    thmpred time: 0.0
    mc time: 0.007797
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_BIND_def" , DB.fetch "list" "APPEND_EQ_CONS" , DB.fetch "list" "FLAT" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "APPEND" , DB.fetch "list" "LENGTH_EQ_NUM" , DB.fetch "list" "LENGTH_EQ_NUM_compute" , DB.fetch "list" "LAST_APPEND_CONS" , DB.fetch "list" "LUPDATE_LENGTH" , DB.fetch "list" "MEM_SPLIT" , DB.fetch "list" "APPEND_EQ_APPEND_MID" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "MEM_SPLIT_APPEND_first" , DB.fetch "list" "MEM_SPLIT_APPEND_last" , DB.fetch "list" "SNOC_APPEND" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.00941

LIST_BIND_ID
proof length: 1
proof time: 0.082898
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.120179
  inferstep time: 0.099116
  node_find time: 0.00058
  node_crea time: 0.012956
    pred time: 0.003263
    thmpred time: 0.0
    mc time: 0.005126
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LIST_BIND_def" , DB.fetch "list" "LIST_BIND_THM" , DB.fetch "list" "LIST_IGNORE_BIND_def" , DB.fetch "list" "MEM_FLAT" , DB.fetch "list" "FLAT" , DB.fetch "list" "FLAT_compute" , DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE" , DB.fetch "list" "FLAT_APPEND" , DB.fetch "list" "MAP_ID" , DB.fetch "list" "EXISTS_SIMP" , DB.fetch "list" "EVERY_SIMP" , numpairTheory.nfoldl_def , oneTheory.tactictoe_thm_0 , combinTheory.FAIL_DEF , combinTheory.K_DEF , pred_setTheory.IMAGE_ID])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014334

LIST_BIND_APPEND
proof length: 1
proof time: 0.002186
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.344074
  inferstep time: 0.317911
  node_find time: 0.00122
  node_crea time: 0.013819
    pred time: 0.003792
    thmpred time: 0.0
    mc time: 0.008174
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_BIND_THM" , DB.fetch "list" "LIST_BIND_def" , DB.fetch "list" "LIST_BIND_ID" , DB.fetch "list" "LIST_IGNORE_BIND_def" , DB.fetch "list" "MAP_APPEND" , DB.fetch "list" "MAP_EQ_APPEND" , DB.fetch "list" "tactictoe_thm_18" , DB.fetch "list" "APPEND" , DB.fetch "list" "APPEND_eq_NIL" , DB.fetch "list" "ALL_DISTINCT_APPEND" , DB.fetch "list" "MEM_APPEND" , DB.fetch "list" "APPEND_11" , DB.fetch "list" "APPEND_11_LENGTH" , DB.fetch "list" "LENGTH_APPEND" , DB.fetch "list" "APPEND_LENGTH_EQ" , DB.fetch "list" "APPEND_ASSOC" ])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.07643

LIST_BIND_MAP
proof length: 1
proof time: 0.0189
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.072355
  inferstep time: 0.049855
  node_find time: 0.000713
  node_crea time: 0.013771
    pred time: 0.003411
    thmpred time: 0.000001
    mc time: 0.006495
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LIST_BIND_def" , DB.fetch "list" "LIST_BIND_ID" , DB.fetch "list" "LIST_BIND_APPEND" , DB.fetch "list" "LIST_BIND_THM" , DB.fetch "list" "LIST_IGNORE_BIND_def" , DB.fetch "list" "MAP_MAP_o" , DB.fetch "list" "LIST_REL_MAP1" , DB.fetch "list" "MAP_o" , DB.fetch "list" "MAP_GENLIST" , DB.fetch "list" "MAP_ZIP" , combinTheory.o_DEF , combinTheory.o_THM , combinTheory.o_ASSOC , optionTheory.OPTION_MAP_COMPOSE , pred_setTheory.BIJ_INV , pred_setTheory.IMAGE_COMPOSE])
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.038218

MAP_LIST_BIND
Statistics
  infstep : 457
  nodes   : 89
  maxdepth: 5
Time: 10.058303
  inferstep time: 7.165568
  node_find time: 0.35119
  node_crea time: 1.341936
    pred time: 0.328595
    thmpred time: 0.000025
    mc time: 0.506382
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.044646

LIST_BIND_LIST_BIND
proof length: 4
proof time: 0.030599
Statistics
  infstep : 13
  nodes   : 8
  maxdepth: 3
Time: 0.807912
  inferstep time: 0.617956
  node_find time: 0.009524
  node_crea time: 0.106638
    pred time: 0.030759
    thmpred time: 0.0
    mc time: 0.054592
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "LIST_BIND_THM", DB.fetch "list" "MAP_LIST_BIND", DB.fetch "list" "LIST_BIND_MAP", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_APPEND", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "LIST_IGNORE_BIND_def", combinTheory.LET_FORALL_ELIM, combinTheory.literal_case_FORALL_ELIM, pairTheory.C_UNCURRY_L, DB.fetch "list" "ITSET_eq_FOLDL_SET_TO_LIST", combinTheory.C_DEF, combinTheory.C_THM, combinTheory.C_ABS_L, combinTheory.GEN_LET_RATOR, combinTheory.GEN_literal_case_RATOR], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "list" "MAP_APPEND")] THEN
  metisTools.METIS_TAC [DB.fetch "list" "LIST_BIND_THM", DB.fetch "list" "MAP_LIST_BIND", DB.fetch "list" "LIST_BIND_APPEND", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_MAP", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "LIST_IGNORE_BIND_def", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_35, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_39, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.072445

SINGL_LIST_APPLY_L
proof length: 1
proof time: 0.001134
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.206741
  inferstep time: 0.170508
  node_find time: 0.001193
  node_crea time: 0.015986
    pred time: 0.00378
    thmpred time: 0.0
    mc time: 0.009888
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_BIND_THM" , DB.fetch "list" "LIST_BIND_def" , DB.fetch "list" "LIST_BIND_APPEND" , DB.fetch "list" "LIST_BIND_LIST_BIND" , DB.fetch "list" "LIST_BIND_MAP" , DB.fetch "list" "MAP_LIST_BIND" , DB.fetch "list" "LIST_BIND_ID" , DB.fetch "list" "LIST_IGNORE_BIND_def" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "SET_TO_LIST_SING" , DB.fetch "list" "SNOC" , DB.fetch "list" "SNOC_APPEND" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008342

SINGL_LIST_APPLY_R
proof length: 3
proof time: 0.034496
Statistics
  infstep : 14
  nodes   : 6
  maxdepth: 2
Time: 0.814895
  inferstep time: 0.651399
  node_find time: 0.009972
  node_crea time: 0.096514
    pred time: 0.042789
    thmpred time: 0.000001
    mc time: 0.029099
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "LIST_BIND_THM", DB.fetch "list" "SINGL_LIST_APPLY_L", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_LIST_BIND", DB.fetch "list" "LIST_BIND_APPEND", DB.fetch "list" "LIST_BIND_MAP", DB.fetch "list" "MAP_LIST_BIND", DB.fetch "list" "LIST_IGNORE_BIND_def", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SNOC", DB.fetch "list" "SNOC_APPEND", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "LAST_CONS", DB.fetch "list" "SET_TO_LIST_SING"], simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "list" "LIST_BIND_THM", DB.fetch "list" "SINGL_LIST_APPLY_L", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_LIST_BIND", DB.fetch "list" "LIST_BIND_MAP", DB.fetch "list" "MAP_LIST_BIND", DB.fetch "list" "LIST_IGNORE_BIND_def", DB.fetch "list" "LIST_BIND_APPEND", DB.fetch "list" "SNOC", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FRONT_CONS", DB.fetch "list" "LAST_CONS", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "SNOC_APPEND"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.035905

SINGL_APPLY_MAP
proof length: 1
proof time: 0.002292
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.265883
  inferstep time: 0.241725
  node_find time: 0.001227
  node_crea time: 0.012421
    pred time: 0.003523
    thmpred time: 0.0
    mc time: 0.005122
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_LIFT2_def" , DB.fetch "list" "LIST_APPLY_def" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "APPEND_EQ_APPEND_MID" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "MEM_SPLIT_APPEND_first" , DB.fetch "list" "MEM_SPLIT_APPEND_last" , DB.fetch "list" "SNOC_APPEND" , DB.fetch "list" "REVERSE_EQ_SING" , DB.fetch "list" "SINGL_LIST_APPLY_R" , DB.fetch "list" "SNOC" , DB.fetch "list" "SINGL_LIST_APPLY_L" , DB.fetch "list" "APPEND_EQ_SING" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "FRONT_CONS" ])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011521

SINGL_SINGL_APPLY
proof length: 1
proof time: 0.05907
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.106667
  inferstep time: 0.086178
  node_find time: 0.000539
  node_crea time: 0.012644
    pred time: 0.003332
    thmpred time: 0.0
    mc time: 0.005465
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "SINGL_APPLY_MAP" , DB.fetch "list" "MAP" , DB.fetch "list" "FOLDR_CONS" , DB.fetch "list" "GENLIST_AUX" , DB.fetch "list" "LIST_LIFT2_def" , DB.fetch "list" "LIST_APPLY_def" , DB.fetch "list" "SINGL_LIST_APPLY_L" , DB.fetch "list" "MAP_EQ_SING" , DB.fetch "list" "FILTER_EQ_CONS" , DB.fetch "list" "ALL_DISTINCT_FILTER" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "LAST_CONS" , DB.fetch "list" "SET_TO_LIST_SING" , DB.fetch "list" "SINGL_LIST_APPLY_R" , DB.fetch "list" "SNOC" , DB.fetch "list" "SNOC_APPEND"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009968

SINGL_APPLY_PERMUTE
Statistics
  infstep : 838
  nodes   : 77
  maxdepth: 4
Time: 10.002053
  inferstep time: 6.005429
  node_find time: 0.668829
  node_crea time: 1.280712
    pred time: 0.342188
    thmpred time: 0.000013
    mc time: 0.418464
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068967

MAP_FLAT
proof length: 4
proof time: 0.078867
Statistics
  infstep : 68
  nodes   : 14
  maxdepth: 3
Time: 1.696914
  inferstep time: 1.22967
  node_find time: 0.051995
  node_crea time: 0.189288
    pred time: 0.062515
    thmpred time: 0.000002
    mc time: 0.086829
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 11380*)l"] THENL [metisTools.METIS_TAC [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "MAP", DB.fetch "list" "LAST_MAP", DB.fetch "list" "MAP_EQ_NIL", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SINGL_APPLY_MAP", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "LENGTH_MAP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "MAP_EQ_CONS", DB.fetch "list" "MAP", DB.fetch "list" "MAP_EQ_SING", DB.fetch "list" "SINGL_APPLY_MAP", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "LIST_REL_MAP2", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_MAP"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "FLAT", DB.fetch "list" "MAP_APPEND", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "MAP_EQ_APPEND", DB.fetch "list" "LIST_REL_MAP2", DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "EL_MAP", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EXISTS_MAP", DB.fetch "list" "LAST_MAP"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046475

LIST_APPLY_o
Statistics
  infstep : 292
  nodes   : 94
  maxdepth: 5
Time: 10.004595
  inferstep time: 7.51061
  node_find time: 0.227018
  node_crea time: 1.522611
    pred time: 0.455647
    thmpred time: 0.000023
    mc time: 0.451649
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.085981

LLEX_MONO
Statistics
  infstep : 693
  nodes   : 62
  maxdepth: 5
Time: 10.001612
  inferstep time: 6.141905
  node_find time: 0.604619
  node_crea time: 1.403706
    pred time: 0.42126
    thmpred time: 0.000025
    mc time: 0.356526
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.147379

LLEX_CONG
Statistics
  infstep : 418
  nodes   : 110
  maxdepth: 6
Time: 10.033608
  inferstep time: 7.088519
  node_find time: 0.310765
  node_crea time: 1.656297
    pred time: 0.306656
    thmpred time: 0.000025
    mc time: 0.700397
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.53742

LLEX_NIL2
proof length: 4
proof time: 0.061578
Statistics
  infstep : 128
  nodes   : 22
  maxdepth: 3
Time: 3.3976
  inferstep time: 2.638997
  node_find time: 0.10643
  node_crea time: 0.309869
    pred time: 0.125647
    thmpred time: 0.000005
    mc time: 0.045626
    inst time: 0.0
Proof found: Q.ID_SPEC_TAC [HolKernel.QUOTE " (*#loc 1 98255*)y"] THEN Q.SPEC_THEN [HolKernel.QUOTE " (*#loc 1 51724*)l"] boolLib.STRUCT_CASES_TAC (DB.fetch "list" "list_nchotomy") THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "LLEX_THM", DB.fetch "list" "LLEX_def", DB.fetch "list" "LLEX_CONG", DB.fetch "list" "LLEX_MONO", DB.fetch "list" "SET_TO_LIST_primitive_def", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "NOT_CONS_NIL", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "FILTER_COND_REWRITE", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "LAST_MAP", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "tactictoe_thm_15", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "NOT_NIL_CONS"],
  metisTools.METIS_TAC [DB.fetch "list" "LLEX_THM", DB.fetch "list" "LLEX_def", DB.fetch "list" "LLEX_CONG", DB.fetch "list" "LLEX_MONO", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "NULL", DB.fetch "list" "LRC_def", DB.fetch "list" "list_INDUCT", DB.fetch "list" "MEM", DB.fetch "list" "EXISTS_DEF", DB.fetch "list" "FILTER", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "MAP", DB.fetch "list" "LENGTH", DB.fetch "list" "FORALL_LIST", DB.fetch "list" "REVERSE_DEF"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.034186

LLEX_transitive
Statistics
  infstep : 441
  nodes   : 97
  maxdepth: 6
Time: 10.080564
  inferstep time: 6.88967
  node_find time: 0.370868
  node_crea time: 1.549219
    pred time: 0.335276
    thmpred time: 0.000025
    mc time: 0.537665
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.300138

LLEX_total
Statistics
  infstep : 544
  nodes   : 99
  maxdepth: 5
Time: 10.001501
  inferstep time: 6.925981
  node_find time: 0.403037
  node_crea time: 1.305921
    pred time: 0.271338
    thmpred time: 0.000017
    mc time: 0.482049
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.237512

LLEX_not_WF
Statistics
  infstep : 681
  nodes   : 89
  maxdepth: 5
Time: 10.045663
  inferstep time: 6.285629
  node_find time: 0.58313
  node_crea time: 1.407504
    pred time: 0.271315
    thmpred time: 0.000022
    mc time: 0.478463
    inst time: 0.0
Proof status: Time Out
Org tac number: 14
Original proof time: 0.0
Replaying proof: 0.421871

LLEX_EL_THM
Statistics
  infstep : 268
  nodes   : 55
  maxdepth: 5
Time: 10.114566
  inferstep time: 7.656933
  node_find time: 0.222216
  node_crea time: 1.356984
    pred time: 0.406929
    thmpred time: 0.000027
    mc time: 0.555239
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.411899

nub_set
Statistics
  infstep : 315
  nodes   : 84
  maxdepth: 5
Time: 10.130658
  inferstep time: 7.183664
  node_find time: 0.262535
  node_crea time: 1.785602
    pred time: 0.563475
    thmpred time: 0.000022
    mc time: 0.65143
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.097427

all_distinct_nub
proof length: 3
proof time: 0.038794
Statistics
  infstep : 6
  nodes   : 5
  maxdepth: 2
Time: 0.39869
  inferstep time: 0.318798
  node_find time: 0.003935
  node_crea time: 0.042041
    pred time: 0.014231
    thmpred time: 0.000001
    mc time: 0.019772
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "nub_def", DB.fetch "list" "nub_set", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_EL_IMP", DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "ALL_DISTINCT_SNOC", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "FILTER_ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "ALL_DISTINCT_GENLIST", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "ALL_DISTINCT_SET_TO_LIST"], (BasicProvers.SRW_TAC []) [(DB.fetch "list" "nub_def"), pred_setTheory.EXTENSION]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.064869
Replaying proof: 0.007756

nub_append
proof length: 9
proof time: 0.191146
Statistics
  infstep : 35
  nodes   : 15
  maxdepth: 4
Time: 2.034029
  inferstep time: 1.562867
  node_find time: 0.023873
  node_crea time: 0.260106
    pred time: 0.092656
    thmpred time: 0.000005
    mc time: 0.137394
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL [Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "nub_def", DB.fetch "list" "MEM", DB.fetch "list" "APPEND", DB.fetch "list" "nub_set", DB.fetch "list" "all_distinct_nub", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_APPEND_DISTRIB", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "tactictoe_thm_15", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "tactictoe_thm_20"],
  (BasicProvers.SRW_TAC []) [(DB.fetch "list" "nub_def"), pred_setTheory.EXTENSION]], (BasicProvers.SRW_TAC []) [(DB.fetch "list" "nub_def"), pred_setTheory.EXTENSION] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "tactictoe_thm_20", DB.fetch "list" "nub_def", DB.fetch "list" "nub_set", DB.fetch "list" "all_distinct_nub", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, DB.fetch "list" "ALL_DISTINCT_FILTER"],
  (BasicProvers.SRW_TAC []) [(DB.fetch "list" "nub_def"), pred_setTheory.EXTENSION] THEN
  metisTools.METIS_TAC [DB.fetch "list" "tactictoe_thm_20", DB.fetch "list" "nub_def", DB.fetch "list" "nub_set", DB.fetch "list" "all_distinct_nub", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, DB.fetch "list" "ALL_DISTINCT_FILTER"],
  metisTools.METIS_TAC [DB.fetch "list" "tactictoe_thm_20", DB.fetch "list" "nub_def", DB.fetch "list" "nub_set", DB.fetch "list" "all_distinct_nub", pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_42, pred_setTheory.tactictoe_thm_43, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_47, pred_setTheory.tactictoe_thm_48, pred_setTheory.tactictoe_thm_50, pred_setTheory.tactictoe_thm_38, DB.fetch "list" "ALL_DISTINCT_FILTER"]]]
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.230071

list_to_set_diff
proof length: 3
proof time: 0.004223
Statistics
  infstep : 63
  nodes   : 19
  maxdepth: 3
Time: 2.352899
  inferstep time: 1.843394
  node_find time: 0.042244
  node_crea time: 0.275112
    pred time: 0.074798
    thmpred time: 0.000009
    mc time: 0.124687
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC []) [(DB.fetch "list" "nub_def"), pred_setTheory.EXTENSION] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "tactictoe_thm_20", DB.fetch "list" "nub_append", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "NULL_FILTER", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "tactictoe_thm_15", DB.fetch "list" "MEM_FILTER", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "LIST_TO_SET_FILTER", DB.fetch "list" "FILTER_EQ_APPEND", DB.fetch "list" "FILTER_EQ_CONS", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "EVERY2_cong", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EXISTS_CONG"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "tactictoe_thm_20", DB.fetch "list" "nub_append", DB.fetch "list" "ALL_DISTINCT_APPEND", DB.fetch "list" "EVERY2_cong", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "MAP2_CONG", DB.fetch "list" "MAP_CONG", DB.fetch "list" "MEM_SPLIT", DB.fetch "list" "FOLDL2_cong", DB.fetch "list" "LLEX_CONG", DB.fetch "list" "MEM_APPEND", DB.fetch "list" "FILTER_NEQ_ID", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "ALL_DISTINCT_SNOC", DB.fetch "list" "NULL_FILTER"]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.03266
Replaying proof: 0.004219

length_nub_append
Statistics
  infstep : 442
  nodes   : 81
  maxdepth: 5
Time: 10.120396
  inferstep time: 7.501143
  node_find time: 0.299954
  node_crea time: 1.305273
    pred time: 0.388442
    thmpred time: 0.00002
    mc time: 0.447475
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.203471

ALL_DISTINCT_DROP
proof length: 3
proof time: 0.069015
Statistics
  infstep : 4
  nodes   : 4
  maxdepth: 2
Time: 0.298407
  inferstep time: 0.242561
  node_find time: 0.002117
  node_crea time: 0.029157
    pred time: 0.008452
    thmpred time: 0.000001
    mc time: 0.016058
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "DROP_NIL", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "DROP_cons", DB.fetch "list" "MEM_DROP", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_splitAtPki", DB.fetch "list" "DROP_0", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "ALL_DISTINCT_SING", DB.fetch "list" "ALL_DISTINCT_GENLIST", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET"], metisTools.METIS_TAC [DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "DROP_cons", DB.fetch "list" "DROP_def", DB.fetch "list" "DROP_NIL", DB.fetch "list" "MEM_DROP", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "DROP_nil", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "DROP_splitAtPki", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "DROP_0", DB.fetch "list" "ALL_DISTINCT_CARD_LIST_TO_SET", DB.fetch "list" "CARD_LIST_TO_SET_ALL_DISTINCT", DB.fetch "list" "ALL_DISTINCT_MAP", DB.fetch "list" "ALL_DISTINCT_FILTER"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.062139

EXISTS_LIST_EQ_MAP
Statistics
  infstep : 547
  nodes   : 88
  maxdepth: 5
Time: 10.012778
  inferstep time: 6.829643
  node_find time: 0.405052
  node_crea time: 1.532962
    pred time: 0.520741
    thmpred time: 0.000017
    mc time: 0.429329
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.159625

LIST_TO_SET_FLAT
proof length: 3
proof time: 0.003827
Statistics
  infstep : 32
  nodes   : 7
  maxdepth: 2
Time: 0.867081
  inferstep time: 0.681914
  node_find time: 0.041
  node_crea time: 0.058463
    pred time: 0.018288
    thmpred time: 0.000001
    mc time: 0.028642
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "MAP_FLAT", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "FOLDL_UNION_BIGUNION", DB.fetch "list" "FOLDL_UNION_BIGUNION_paired", pred_setTheory.BIGUNION_EMPTY, pred_setTheory.BIGUNION_INSERT, pred_setTheory.BIGUNION, pred_setTheory.BIGUNION_EQ_EMPTY, pred_setTheory.IN_BIGUNION, pred_setTheory.BIGUNION_IMAGE_UNIV], BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "MAP_FLAT", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "FOLDL_UNION_BIGUNION", DB.fetch "list" "FOLDL_UNION_BIGUNION_paired", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "FOLDR_CONS", DB.fetch "list" "EXISTS_LIST_EQ_MAP", DB.fetch "list" "MAP_ZIP_SAME", DB.fetch "list" "SUM_MAP_FOLDL"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.036575

MEM_APPEND_lemma
Statistics
  infstep : 444
  nodes   : 62
  maxdepth: 4
Time: 10.016518
  inferstep time: 7.304866
  node_find time: 0.321268
  node_crea time: 1.346103
    pred time: 0.379785
    thmpred time: 0.000021
    mc time: 0.314816
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.122218

EVERY2_REVERSE
proof length: 3
proof time: 0.011392
Statistics
  infstep : 405
  nodes   : 65
  maxdepth: 5
Time: 9.616365
  inferstep time: 6.77661
  node_find time: 0.335283
  node_crea time: 1.262216
    pred time: 0.377173
    thmpred time: 0.000021
    mc time: 0.488215
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [boolSimps.CONJ_ss] [(DB.fetch "list" "LIST_REL_EL_EQN"), (DB.fetch "list" "EL_MAP"), (DB.fetch "list" "LENGTH_MAP")] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "EL_REVERSE", pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_22, pred_setTheory.tactictoe_thm_23, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26, pred_setTheory.tactictoe_thm_27, DB.fetch "list" "REVERSE_11", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE"] THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [(DB.fetch "list" "DROP_def")]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.114621

SUM_MAP_PLUS
proof length: 4
proof time: 0.047602
Statistics
  infstep : 127
  nodes   : 14
  maxdepth: 3
Time: 2.119675
  inferstep time: 1.418915
  node_find time: 0.102454
  node_crea time: 0.223871
    pred time: 0.067869
    thmpred time: 0.000005
    mc time: 0.083742
    inst time: 0.0
Proof found: boolLib.NTAC 2 boolLib.GEN_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "SUM_MAP_PLUS_ZIP", DB.fetch "list" "MAP", DB.fetch "list" "list_size_def", pred_setTheory.SUM_IMAGE_THM, pred_setTheory.SUM_IMAGE_DEF, DB.fetch "list" "SUM_MAP_FOLDL", DB.fetch "list" "SUM_MAP_MEM_bound", DB.fetch "list" "SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", DB.fetch "list" "SUM_IMAGE_LIST_TO_SET_upper_bound", DB.fetch "list" "SUM", DB.fetch "list" "SUM_SNOC", DB.fetch "list" "SUM_ACC_SUM_LEM", DB.fetch "list" "SUM_APPEND", DB.fetch "list" "SUM_eq_0", DB.fetch "list" "SUM_SUM_ACC", DB.fetch "list" "MAP_ZIP"],
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [(DB.fetch "list" "MAP"), (DB.fetch "list" "ZIP"), (DB.fetch "list" "MAP_ZIP"), (DB.fetch "list" "SUM")]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090824

TAKE_LENGTH_ID_rwt
proof length: 1
proof time: 0.043811
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.127454
  inferstep time: 0.087239
  node_find time: 0.000646
  node_crea time: 0.020045
    pred time: 0.004432
    thmpred time: 0.0
    mc time: 0.014101
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LENGTH_TAKE" , DB.fetch "list" "TAKE_LENGTH_TOO_LONG" , DB.fetch "list" "splitAtPki_EQN" , DB.fetch "list" "LLEX_EL_THM" , DB.fetch "list" "TAKE_APPEND1" , DB.fetch "list" "MAP_TAKE" , DB.fetch "list" "TAKE_DROP" , DB.fetch "list" "TAKE_splitAtPki" , DB.fetch "list" "TAKE_APPEND2" , DB.fetch "list" "TAKE_cons" , DB.fetch "list" "TAKE_def" , DB.fetch "list" "TAKE_nil" , DB.fetch "list" "TAKE_LENGTH_ID" , DB.fetch "list" "TAKE_0" , DB.fetch "list" "ALL_DISTINCT_EL_IMP" , DB.fetch "list" "EL_ALL_DISTINCT_EL_EQ"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.014322

TAKE_LENGTH_ID_rwt
proof length: 1
proof time: 0.037541
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.06619
  inferstep time: 0.040275
  node_find time: 0.000609
  node_crea time: 0.016445
    pred time: 0.004483
    thmpred time: 0.0
    mc time: 0.007911
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "TAKE_LENGTH_ID_rwt" , DB.fetch "list" "LENGTH_TAKE" , DB.fetch "list" "TAKE_LENGTH_TOO_LONG" , DB.fetch "list" "splitAtPki_EQN" , DB.fetch "list" "LLEX_EL_THM" , DB.fetch "list" "TAKE_APPEND1" , DB.fetch "list" "MAP_TAKE" , DB.fetch "list" "TAKE_DROP" , DB.fetch "list" "TAKE_splitAtPki" , DB.fetch "list" "TAKE_APPEND2" , DB.fetch "list" "TAKE_cons" , DB.fetch "list" "TAKE_def" , DB.fetch "list" "TAKE_nil" , DB.fetch "list" "TAKE_LENGTH_ID" , DB.fetch "list" "TAKE_0" , DB.fetch "list" "ALL_DISTINCT_EL_IMP"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.007308

ZIP_DROP
Statistics
  infstep : 223
  nodes   : 67
  maxdepth: 5
Time: 10.027487
  inferstep time: 7.366574
  node_find time: 0.18505
  node_crea time: 1.735392
    pred time: 0.479694
    thmpred time: 0.000022
    mc time: 0.820001
    inst time: 0.0
Proof status: Time Out
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.25002

GENLIST_EL
proof length: 2
proof time: 0.002328
Statistics
  infstep : 81
  nodes   : 8
  maxdepth: 3
Time: 1.215774
  inferstep time: 0.750593
  node_find time: 0.068633
  node_crea time: 0.143196
    pred time: 0.052997
    thmpred time: 0.0
    mc time: 0.063528
    inst time: 0.0
Proof found: boolLib.REPEAT boolLib.STRIP_TAC THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [(DB.fetch "list" "LIST_EQ_REWRITE"), (DB.fetch "list" "LENGTH_GENLIST"), (DB.fetch "list" "LENGTH_ZIP"), (DB.fetch "list" "EL_ZIP"), (DB.fetch "list" "EL_GENLIST")]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.011286

EVERY2_trans
Statistics
  infstep : 448
  nodes   : 62
  maxdepth: 4
Time: 10.110999
  inferstep time: 7.261492
  node_find time: 0.34552
  node_crea time: 1.332731
    pred time: 0.351951
    thmpred time: 0.000016
    mc time: 0.421903
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.239548

EVERY2_sym
proof length: 2
proof time: 0.016153
Statistics
  infstep : 8
  nodes   : 5
  maxdepth: 2
Time: 0.390772
  inferstep time: 0.308985
  node_find time: 0.004906
  node_crea time: 0.046378
    pred time: 0.011887
    thmpred time: 0.000001
    mc time: 0.017435
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "list" "EVERY2_EVERY"), (DB.fetch "list" "EVERY_MEM"), pairTheory.FORALL_PROD] THEN simpLib.REV_FULL_SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "list" "MEM_ZIP"), boolLib.GSYM boolLib.LEFT_FORALL_IMP_THM, (DB.fetch "list" "EL_REVERSE")]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.111085

EVERY2_LUPDATE_same
proof length: 2
proof time: 0.016555
Statistics
  infstep : 522
  nodes   : 78
  maxdepth: 5
Time: 8.968175
  inferstep time: 5.533202
  node_find time: 0.411028
  node_crea time: 1.596903
    pred time: 0.305056
    thmpred time: 0.000011
    mc time: 0.595483
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [boolSimps.CONJ_ss] [(DB.fetch "list" "LIST_REL_EL_EQN"), (DB.fetch "list" "EL_MAP"), (DB.fetch "list" "LENGTH_MAP")] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_compute", pred_setTheory.tactictoe_thm_22, pred_setTheory.tactictoe_thm_23, pred_setTheory.tactictoe_thm_25, pred_setTheory.tactictoe_thm_26, pred_setTheory.tactictoe_thm_27, DB.fetch "list" "FOLDL2_ind"]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.186544

EVERY2_refl
proof length: 3
proof time: 0.00584
Statistics
  infstep : 373
  nodes   : 47
  maxdepth: 4
Time: 6.250556
  inferstep time: 3.922311
  node_find time: 0.332459
  node_crea time: 0.928808
    pred time: 0.27366
    thmpred time: 0.00001
    mc time: 0.289126
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [(DB.fetch "list" "EVERY2_EVERY"), (DB.fetch "list" "EVERY_MEM"), pairTheory.FORALL_PROD] THEN simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss () hhs_infixl0_open simpLib.++ hhs_infixl0_close boolSimps.DNF_ss) [(DB.fetch "list" "MEM_ZIP")] THEN
  BasicProvers.PROVE_TAC [(DB.fetch "list" "MEM_EL"), arithmeticTheory.LESS_MONO_EQ]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.031478

EVERY2_THM
proof length: 3
proof time: 0.011053
Statistics
  infstep : 6
  nodes   : 4
  maxdepth: 2
Time: 0.456
  inferstep time: 0.393668
  node_find time: 0.0036
  node_crea time: 0.029871
    pred time: 0.009238
    thmpred time: 0.000001
    mc time: 0.014676
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.Once (DB.fetch "list" "tactictoe_thm_5"), boolSimps.SimpLHS] THEN (BasicProvers.SRW_TAC [] [boolLib.Once (DB.fetch "list" "tactictoe_thm_5"), boolSimps.SimpLHS])
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.16246

LIST_REL_trans
proof length: 1
proof time: 0.006462
Statistics
  infstep : 29
  nodes   : 10
  maxdepth: 3
Time: 1.498475
  inferstep time: 1.114079
  node_find time: 0.030425
  node_crea time: 0.228708
    pred time: 0.078573
    thmpred time: 0.000001
    mc time: 0.088772
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "LIST_REL_EL_EQN" , DB.fetch "list" "LLEX_EL_THM" , DB.fetch "list" "EL_MAP" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "APPEND_11" , DB.fetch "list" "FILTER_EQ_APPEND" , DB.fetch "list" "APPEND_ASSOC" , DB.fetch "list" "EL_ZIP" , DB.fetch "list" "MEM_ZIP" , DB.fetch "list" "EL_APPEND_EQN" , DB.fetch "list" "LIST_EQ" , DB.fetch "list" "LIST_EQ_REWRITE" , DB.fetch "list" "LUPDATE_SEM" , DB.fetch "list" "EL_SNOC" , DB.fetch "list" "MEM_DROP" , DB.fetch "list" "MEM_EL" ])
Org tac number: 13
Original proof time: 0.0
Replaying proof: 0.435652

SWAP_REVERSE
proof length: 1
proof time: 0.042258
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.093124
  inferstep time: 0.067742
  node_find time: 0.000657
  node_crea time: 0.015961
    pred time: 0.004513
    thmpred time: 0.0
    mc time: 0.006995
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "REVERSE_11" , DB.fetch "list" "REVERSE_APPEND" , DB.fetch "list" "EVERY2_REVERSE" , DB.fetch "list" "REVERSE_REVERSE" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "LENGTH_REVERSE" , DB.fetch "list" "EL_REVERSE" , DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE" , DB.fetch "list" "MEM_REVERSE" , DB.fetch "list" "ALL_DISTINCT_REVERSE" , DB.fetch "list" "FILTER_REVERSE" , DB.fetch "list" "REVERSE_SNOC" , DB.fetch "list" "LIST_TO_SET_REVERSE" , DB.fetch "list" "REVERSE_REV" , DB.fetch "list" "REV_REVERSE_LEM" , DB.fetch "list" "REVERSE_SNOC_DEF"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.008094

SWAP_REVERSE_SYM
proof length: 1
proof time: 0.040568
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.071395
  inferstep time: 0.047009
  node_find time: 0.000694
  node_crea time: 0.014394
    pred time: 0.003423
    thmpred time: 0.000001
    mc time: 0.006709
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "REVERSE_11" , DB.fetch "list" "REVERSE_APPEND" , DB.fetch "list" "SWAP_REVERSE" , DB.fetch "list" "EVERY2_REVERSE" , DB.fetch "list" "REVERSE_REVERSE" , DB.fetch "list" "REVERSE_DEF" , DB.fetch "list" "LENGTH_REVERSE" , DB.fetch "list" "EL_REVERSE" , DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE" , DB.fetch "list" "MEM_REVERSE" , DB.fetch "list" "ALL_DISTINCT_REVERSE" , DB.fetch "list" "FILTER_REVERSE" , DB.fetch "list" "REVERSE_SNOC" , DB.fetch "list" "LIST_TO_SET_REVERSE" , DB.fetch "list" "REVERSE_REV" , DB.fetch "list" "REV_REVERSE_LEM"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.023339

BIGUNION_IMAGE_set_SUBSET
proof length: 2
proof time: 0.021086
Statistics
  infstep : 25
  nodes   : 5
  maxdepth: 2
Time: 0.7063
  inferstep time: 0.490013
  node_find time: 0.026357
  node_crea time: 0.071129
    pred time: 0.017854
    thmpred time: 0.000001
    mc time: 0.041672
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "pred_set" "INTER_DEF", DB.fetch "pred_set" "IN_INTER", DB.fetch "pred_set" "INTER_applied", DB.fetch "pred_set" "UNION_DEF", DB.fetch "pred_set" "tactictoe_thm_0", DB.fetch "pred_set" "GSPECIFICATION", DB.fetch "pred_set" "EXTENSION", DB.fetch "pred_set" "IN_UNION", DB.fetch "pred_set" "SUBSET_DEF", DB.fetch "pred_set" "NOT_EQUAL_SETS", DB.fetch "pred_set" "UNION_applied", DB.fetch "pred_set" "SET_MINIMUM", relationTheory.RRESTRICT_DEF, relationTheory.IN_RDOM_RRESTRICT, DB.fetch "pred_set" "NUM_SET_WOP", DB.fetch "pred_set" "EQ_UNIV"] THEN BasicProvers.PROVE_TAC [(DB.fetch "relation" "RTC_RULES")]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046383

IMAGE_EL_count_LENGTH
proof length: 4
proof time: 0.134444
Statistics
  infstep : 15
  nodes   : 8
  maxdepth: 3
Time: 0.955665
  inferstep time: 0.722187
  node_find time: 0.013908
  node_crea time: 0.121006
    pred time: 0.025544
    thmpred time: 0.000002
    mc time: 0.077122
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [DB.fetch "pred_set" "INTER_DEF", DB.fetch "pred_set" "IN_INTER", DB.fetch "pred_set" "INTER_applied", DB.fetch "pred_set" "UNION_DEF", DB.fetch "pred_set" "tactictoe_thm_0", DB.fetch "pred_set" "GSPECIFICATION", DB.fetch "pred_set" "EXTENSION", DB.fetch "pred_set" "IN_UNION", DB.fetch "pred_set" "SUBSET_DEF", DB.fetch "pred_set" "NOT_EQUAL_SETS", DB.fetch "pred_set" "UNION_applied", DB.fetch "pred_set" "SET_MINIMUM", relationTheory.RRESTRICT_DEF, relationTheory.IN_RDOM_RRESTRICT, DB.fetch "pred_set" "NUM_SET_WOP", DB.fetch "pred_set" "EQ_UNIV"] THEN BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LLEX_EL_THM", DB.fetch "list" "EL_MAP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "LIST_REL_trans", DB.fetch "list" "EVERY_EL", DB.fetch "list" "MEM_DROP", DB.fetch "list" "MEM_EL", DB.fetch "list" "GENLIST_EL", DB.fetch "list" "EL_restricted", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "EL_SNOC", DB.fetch "list" "EL_ZIP", DB.fetch "list" "LUPDATE_SEM"],
  BasicProvers.PROVE_TAC [(DB.fetch "list" "MEM_EL"), arithmeticTheory.LESS_MONO_EQ]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.040192

GENLIST_EL_MAP
proof length: 3
proof time: 0.003761
Statistics
  infstep : 89
  nodes   : 12
  maxdepth: 3
Time: 1.9619
  inferstep time: 1.181906
  node_find time: 0.086549
  node_crea time: 0.386011
    pred time: 0.160568
    thmpred time: 0.000003
    mc time: 0.153556
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC []) [pred_setTheory.EXTENSION, (DB.fetch "list" "MEM_EL")] THEN simpLib.ASM_SIMP_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [(DB.fetch "list" "LIST_EQ_REWRITE"), (DB.fetch "list" "LENGTH_GENLIST"), (DB.fetch "list" "LENGTH_ZIP"), (DB.fetch "list" "EL_ZIP"), (DB.fetch "list" "EL_GENLIST")] THEN
  BasicProvers.SRW_TAC [] [DB.fetch "list" "EL_MAP", DB.fetch "list" "LENGTH_MAP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "LLEX_EL_THM", DB.fetch "list" "LIST_REL_trans", DB.fetch "list" "EVERY_EL", DB.fetch "list" "IMAGE_EL_count_LENGTH", DB.fetch "list" "MEM_DROP", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "LIST_EQ", DB.fetch "list" "EL_SNOC", DB.fetch "list" "MEM_EL", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "EL_ZIP", DB.fetch "list" "LUPDATE_SEM"]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.056647

LENGTH_FILTER_LEQ_MONO
Statistics
  infstep : 687
  nodes   : 70
  maxdepth: 6
Time: 10.008849
  inferstep time: 6.928632
  node_find time: 0.526143
  node_crea time: 0.930317
    pred time: 0.215796
    thmpred time: 0.000019
    mc time: 0.296952
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.18075

LIST_EQ_MAP_PAIR
proof length: 5
proof time: 0.014005
Statistics
  infstep : 54
  nodes   : 19
  maxdepth: 3
Time: 2.344905
  inferstep time: 1.836174
  node_find time: 0.036716
  node_crea time: 0.276741
    pred time: 0.083881
    thmpred time: 0.000007
    mc time: 0.104076
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "UNZIP", DB.fetch "list" "LENGTH_UNZIP", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pred_setTheory.CROSS_applied, pred_setTheory.IN_CROSS, numpairTheory.invtri0_thm, pairTheory.ELIM_PFORALL, pairTheory.ELIM_UNCURRY, pairTheory.UNCURRY_VAR], boolLib.TRY (BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 46705*)l2"]) THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP_ZIP", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "UNZIP", DB.fetch "list" "LENGTH_UNZIP", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF, pred_setTheory.CROSS_applied, pred_setTheory.IN_CROSS, numpairTheory.invtri0_thm, pairTheory.ELIM_PFORALL, pairTheory.ELIM_UNCURRY, pairTheory.UNCURRY_VAR],
  BasicProvers.SRW_TAC [] [DB.fetch "list" "MAP_ZIP", DB.fetch "list" "UNZIP_MAP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "UNZIP", numpairTheory.invtri0_thm, pairTheory.PAIR_FUN_THM, pairTheory.SWAP_def, pred_setTheory.PREIMAGE_CROSS, arithmeticTheory.DIVMOD_DEF, numpairTheory.SND_invtri0, DB.fetch "list" "LENGTH_UNZIP", arithmeticTheory.DIVMOD_CALC, numeralTheory.DIVMOD_NUMERAL_CALC, pairTheory.PAIR_FST_SND_EQ, pairTheory.PROD_ALL_def, pred_setTheory.CROSS_DEF]]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.164882

TAKE_SUM
Statistics
  infstep : 272
  nodes   : 67
  maxdepth: 6
Time: 10.00286
  inferstep time: 7.598478
  node_find time: 0.25705
  node_crea time: 1.213175
    pred time: 0.375849
    thmpred time: 0.000024
    mc time: 0.411387
    inst time: 0.0
Proof status: Time Out
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.282235

ALL_DISTINCT_FILTER_EL_IMP
Statistics
  infstep : 269
  nodes   : 66
  maxdepth: 6
Time: 10.008573
  inferstep time: 7.275786
  node_find time: 0.219601
  node_crea time: 1.686501
    pred time: 0.455274
    thmpred time: 0.000018
    mc time: 0.524097
    inst time: 0.0
Proof status: Time Out
Org tac number: 10
Original proof time: 0.0
Replaying proof: 0.393952

FLAT_EQ_NIL
proof length: 4
proof time: 0.155906
Statistics
  infstep : 48
  nodes   : 10
  maxdepth: 3
Time: 1.326945
  inferstep time: 0.915514
  node_find time: 0.046774
  node_crea time: 0.147956
    pred time: 0.044525
    thmpred time: 0.000004
    mc time: 0.057229
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_TO_SET_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "MAP_FLAT", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EXISTS_LIST_EQ_MAP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_CONG"], BasicProvers.SRW_TAC [] [DB.fetch "list" "FLAT", DB.fetch "list" "FLAT_compute", DB.fetch "list" "LIST_TO_SET_FLAT", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "MEM_FLAT", DB.fetch "list" "FLAT_APPEND", DB.fetch "list" "LIST_BIND_def", DB.fetch "list" "LIST_BIND_ID", DB.fetch "list" "MAP_FLAT", DB.fetch "list" "EXISTS_LIST_EQ_MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_CONG"] THEN
  metisTools.METIS_TAC [DB.fetch "list" "EXISTS_LIST_EQ_MAP", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "EVERY_SIMP", DB.fetch "list" "FILTER_EQ_NIL", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "LIST_REL_EVERY_ZIP", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "EVERY_MAP", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_NOT_EXISTS"]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.090442

ALL_DISTINCT_MAP_INJ
Statistics
  infstep : 483
  nodes   : 53
  maxdepth: 4
Time: 10.061726
  inferstep time: 7.500814
  node_find time: 0.404084
  node_crea time: 0.860354
    pred time: 0.21985
    thmpred time: 0.000018
    mc time: 0.303477
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.504452

LENGTH_o_REVERSE
proof length: 3
proof time: 0.031041
Statistics
  infstep : 121
  nodes   : 10
  maxdepth: 2
Time: 1.79872
  inferstep time: 1.349505
  node_find time: 0.075823
  node_crea time: 0.109177
    pred time: 0.0291
    thmpred time: 0.000003
    mc time: 0.046428
    inst time: 0.0
Proof found: BasicProvers.RW_TAC BasicProvers.bool_ss [(DB.fetch "pair" "FST"), (DB.fetch "pair" "SND"), combinTheory.o_THM, (DB.fetch "pair" "PAIR"), (DB.fetch "pair" "PAIR_EQ"), boolLib.FUN_EQ_THM, boolLib.ETA_THM] THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "EL_REVERSE", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "tactictoe_thm_16", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "REVERSE_11", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_EQ_NIL", DB.fetch "list" "REVERSE_EQ_SING"], metisTools.METIS_TAC [DB.fetch "list" "EL_REVERSE", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "REVERSE_GENLIST", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "tactictoe_thm_16", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "REVERSE_11", DB.fetch "list" "REVERSE_APPEND", DB.fetch "list" "REVERSE_EQ_NIL"]]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009724

REVERSE_o_REVERSE
proof length: 2
proof time: 0.031965
Statistics
  infstep : 3
  nodes   : 3
  maxdepth: 2
Time: 0.275494
  inferstep time: 0.196093
  node_find time: 0.002932
  node_crea time: 0.045402
    pred time: 0.009739
    thmpred time: 0.000001
    mc time: 0.017782
    inst time: 0.0
Proof found: BasicProvers.RW_TAC BasicProvers.bool_ss [(DB.fetch "pair" "FST"), (DB.fetch "pair" "SND"), combinTheory.o_THM, (DB.fetch "pair" "PAIR"), (DB.fetch "pair" "PAIR_EQ"), boolLib.FUN_EQ_THM, boolLib.ETA_THM] THEN metisTools.METIS_TAC [DB.fetch "list" "LENGTH_o_REVERSE", DB.fetch "list" "REVERSE_GENLIST", DB.fetch "list" "MEM_REVERSE", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "tactictoe_thm_16", DB.fetch "list" "LENGTH_REVERSE", DB.fetch "list" "EL_REVERSE", DB.fetch "list" "ALL_DISTINCT_FLAT_REVERSE", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "ALL_DISTINCT_REVERSE", DB.fetch "list" "REVERSE_REVERSE", DB.fetch "list" "FILTER_REVERSE", DB.fetch "list" "LIST_TO_SET_REVERSE", DB.fetch "list" "REVERSE_11", DB.fetch "list" "REVERSE_APPEND"]
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.013038

GENLIST_PLUS_APPEND
Statistics
  infstep : 966
  nodes   : 153
  maxdepth: 6
Time: 10.056729
  inferstep time: 4.983794
  node_find time: 0.754322
  node_crea time: 1.91433
    pred time: 0.388531
    thmpred time: 0.000021
    mc time: 0.728456
    inst time: 0.0
Proof status: Time Out
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.075181

LIST_TO_SET_GENLIST
proof length: 5
proof time: 0.029554
Statistics
  infstep : 89
  nodes   : 35
  maxdepth: 4
Time: 4.31297
  inferstep time: 3.46758
  node_find time: 0.063772
  node_crea time: 0.472253
    pred time: 0.127202
    thmpred time: 0.000009
    mc time: 0.199651
    inst time: 0.0
Proof found: BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss) [(DB.fetch "pred_set" "DISJOINT_DEF"), (DB.fetch "pred_set" "EXTENSION"), (DB.fetch "pred_set" "IN_INTER"), (DB.fetch "pred_set" "NOT_IN_EMPTY"), (DB.fetch "pred_set" "IN_BIGUNION"), (DB.fetch "pred_set" "IN_IMAGE"), (DB.fetch "pred_set" "IN_COUNT")] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 60923*)n"] THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "GENLIST", DB.fetch "list" "GENLIST_NUMERALS", numeralTheory.numeral_distrib, prim_recTheory.NOT_LESS_0, DB.fetch "list" "SNOC", DB.fetch "list" "MEM_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "ALL_DISTINCT_GENLIST", DB.fetch "list" "GENLIST_EL", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "NULL_GENLIST", DB.fetch "list" "GENLIST_CONS"],
  BasicProvers.RW_TAC (boolSimps.bool_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.ARITH_ss hhs_infixl0_open simpLib.++ hhs_infixl0_close numSimps.REDUCE_ss) [DB.fetch "list" "GENLIST", DB.fetch "list" "HD_GENLIST", DB.fetch "list" "GENLIST_CONS", DB.fetch "list" "TL_GENLIST", DB.fetch "list" "SNOC", DB.fetch "list" "MEM_GENLIST", DB.fetch "list" "EXISTS_GENLIST", DB.fetch "list" "EL_GENLIST", DB.fetch "list" "GENLIST_FUN_EQ", DB.fetch "list" "ALL_DISTINCT_GENLIST", DB.fetch "list" "GENLIST_EL", DB.fetch "list" "EVERY_GENLIST", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "ZIP_GENLIST", DB.fetch "list" "GENLIST_NUMERALS", DB.fetch "list" "LENGTH_GENLIST"] THEN
  metisLib.METIS_TAC [prim_recTheory.LESS_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.046392

MEM_ZIP_MEM_MAP
Statistics
  infstep : 596
  nodes   : 71
  maxdepth: 4
Time: 10.080748
  inferstep time: 6.103478
  node_find time: 0.542823
  node_crea time: 1.74875
    pred time: 0.465621
    thmpred time: 0.000016
    mc time: 0.543879
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.12633

DISJOINT_GENLIST_PLUS
Statistics
  infstep : 435
  nodes   : 90
  maxdepth: 4
Time: 10.101043
  inferstep time: 6.561017
  node_find time: 0.376614
  node_crea time: 1.944168
    pred time: 0.490077
    thmpred time: 0.000022
    mc time: 0.685156
    inst time: 0.0
Proof status: Time Out
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.058271

EVERY2_MAP
proof length: 1
proof time: 0.005398
Statistics
  infstep : 2
  nodes   : 2
  maxdepth: 1
Time: 0.16101
  inferstep time: 0.133766
  node_find time: 0.001369
  node_crea time: 0.013883
    pred time: 0.003852
    thmpred time: 0.000001
    mc time: 0.006018
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ boolSimps.CONJ_ss ] [ ( DB.fetch "list" "LIST_REL_EL_EQN" ) , ( DB.fetch "list" "EL_MAP" ) , ( DB.fetch "list" "LENGTH_MAP" ) ])
Org tac number: 6
Original proof time: 0.0
Replaying proof: 0.178606

exists_list_GENLIST
Statistics
  infstep : 594
  nodes   : 57
  maxdepth: 4
Time: 10.119335
  inferstep time: 6.983217
  node_find time: 0.513917
  node_crea time: 1.021335
    pred time: 0.282011
    thmpred time: 0.000021
    mc time: 0.321093
    inst time: 0.0
Proof status: Time Out
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.224878

EVERY_MEM_MONO
proof length: 1
proof time: 0.002537
Statistics
  infstep : 10
  nodes   : 7
  maxdepth: 3
Time: 0.614496
  inferstep time: 0.491228
  node_find time: 0.006424
  node_crea time: 0.076889
    pred time: 0.028893
    thmpred time: 0.000001
    mc time: 0.025281
    inst time: 0.0
Proof found: (BasicProvers.SRW_TAC [ ] [ DB.fetch "list" "EVERY_MEM" , DB.fetch "list" "EVERY_CONG" , DB.fetch "list" "EVERY_MONOTONIC" , DB.fetch "list" "MONO_EVERY" , DB.fetch "list" "EVERY_CONJ" , DB.fetch "list" "EVERY_SNOC" , DB.fetch "list" "EVERY_NOT_EXISTS" , DB.fetch "list" "EVERY_EL" , DB.fetch "list" "EVERY_FILTER_IMP" , DB.fetch "list" "FILTER_EQ_ID" , DB.fetch "list" "NOT_EVERY" , DB.fetch "list" "EVERY_DEF" , DB.fetch "list" "EVERY_APPEND" , DB.fetch "list" "EVERY_FILTER" , DB.fetch "list" "EVERY_MAP" , DB.fetch "list" "EVERY_GENLIST" ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.05797

EVERY2_MEM_MONO
proof length: 1
proof time: 0.004915
Statistics
  infstep : 227
  nodes   : 47
  maxdepth: 5
Time: 6.0771
  inferstep time: 4.314195
  node_find time: 0.179514
  node_crea time: 0.924747
    pred time: 0.24563
    thmpred time: 0.000016
    mc time: 0.32126
    inst time: 0.0
Proof found: (( BasicProvers.SRW_TAC [ ] ) [ ( DB.fetch "list" "EVERY2_EVERY" ) , ( DB.fetch "list" "EVERY_MEM" ) , pairTheory.FORALL_PROD ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.068085

mem_exists_set
proof length: 1
proof time: 0.004685
Statistics
  infstep : 68
  nodes   : 14
  maxdepth: 3
Time: 1.993672
  inferstep time: 1.563136
  node_find time: 0.045502
  node_crea time: 0.211609
    pred time: 0.067272
    thmpred time: 0.000002
    mc time: 0.073802
    inst time: 0.0
Proof found: (BasicProvers.PROVE_TAC [ ( DB.fetch "pair" "PAIR_EQ" ) , ( DB.fetch "pair" "PAIR" ) ])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.109984

every_zip_snd
proof length: 2
proof time: 0.016623
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.444622
  inferstep time: 0.341684
  node_find time: 0.005011
  node_crea time: 0.054477
    pred time: 0.022812
    thmpred time: 0.000003
    mc time: 0.029841
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [boolSimps.DNF_ss] [DB.fetch "list" "ZIP_MAP", pairTheory.PAIR_MAP, pairTheory.PROD_ALL_def, pairTheory.SND_PAIR_MAP, DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_MEM_MONO", DB.fetch "list" "EVERY_MONOTONIC", DB.fetch "list" "MONO_EVERY", DB.fetch "list" "EVERY_CONJ", DB.fetch "list" "EVERY_NOT_EXISTS", DB.fetch "list" "EVERY_SNOC", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_FILTER_IMP", DB.fetch "list" "EVERY_DEF"] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "EL_ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "LLEX_EL_THM", DB.fetch "list" "LIST_REL_trans", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "ALL_DISTINCT_FILTER_EL_IMP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "GENLIST_EL_MAP", DB.fetch "list" "IMAGE_EL_count_LENGTH", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "LIST_EQ", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_ZIP"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.098869

every_zip_fst
proof length: 2
proof time: 0.019458
Statistics
  infstep : 4
  nodes   : 3
  maxdepth: 2
Time: 0.385479
  inferstep time: 0.323463
  node_find time: 0.002782
  node_crea time: 0.033966
    pred time: 0.009188
    thmpred time: 0.000001
    mc time: 0.019292
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [boolSimps.DNF_ss] [DB.fetch "list" "ZIP_MAP", DB.fetch "list" "every_zip_snd", pairTheory.PAIR_MAP, DB.fetch "list" "EVERY_EL", pairTheory.ELIM_UNCURRY, pairTheory.UNCURRY_VAR, pairTheory.ELIM_PFORALL, pairTheory.FST_PAIR_MAP, pairTheory.PROD_ALL_def, pairTheory.UNCURRY, pairTheory.pair_CASE_def, pairTheory.ELIM_PEXISTS, pairTheory.tactictoe_thm_1, DB.fetch "list" "EVERY_CONG", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY2_EVERY"] THEN BasicProvers.SRW_TAC [] [DB.fetch "list" "EL_ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "LIST_REL_EL_EQN", DB.fetch "list" "LLEX_EL_THM", DB.fetch "list" "LIST_REL_trans", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EL_MAP", DB.fetch "list" "ALL_DISTINCT_FILTER_EL_IMP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "GENLIST_EL_MAP", DB.fetch "list" "IMAGE_EL_count_LENGTH", DB.fetch "list" "EL_APPEND_EQN", DB.fetch "list" "LIST_EQ_REWRITE", DB.fetch "list" "LIST_EQ", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_ZIP"]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.109612

el_append3
proof length: 3
proof time: 0.001903
Statistics
  infstep : 7
  nodes   : 4
  maxdepth: 2
Time: 0.510326
  inferstep time: 0.4021
  node_find time: 0.006253
  node_crea time: 0.049447
    pred time: 0.016945
    thmpred time: 0.000002
    mc time: 0.029855
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [BasicProvers.SRW_TAC [] [], BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.087189

lupdate_append
Statistics
  infstep : 506
  nodes   : 108
  maxdepth: 5
Time: 10.018956
  inferstep time: 6.787903
  node_find time: 0.396129
  node_crea time: 1.513425
    pred time: 0.390922
    thmpred time: 0.000019
    mc time: 0.548849
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.123908

lupdate_append2
proof length: 4
proof time: 0.135847
Statistics
  infstep : 33
  nodes   : 11
  maxdepth: 4
Time: 1.255398
  inferstep time: 0.925837
  node_find time: 0.026767
  node_crea time: 0.1777
    pred time: 0.069695
    thmpred time: 0.000003
    mc time: 0.063579
    inst time: 0.0
Proof found: boolLib.GEN_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "lupdate_append", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EVERY2_LUPDATE_same", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "el_append3"],
  metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "LENGTH", DB.fetch "list" "lupdate_append", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "EVERY2_LUPDATE_same", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "MEM_LUPDATE_E", relationTheory.tactictoe_thm_24]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.03819

HD_REVERSE
proof length: 3
proof time: 0.067339
Statistics
  infstep : 272
  nodes   : 36
  maxdepth: 4
Time: 5.295692
  inferstep time: 3.786844
  node_find time: 0.236018
  node_crea time: 0.439917
    pred time: 0.120915
    thmpred time: 0.000007
    mc time: 0.127602
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "SNOC_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "CONS", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD", DB.fetch "list" "EL_restricted", DB.fetch "list" "HD_GENLIST"], metisTools.METIS_TAC [DB.fetch "list" "LAST_SNOC", DB.fetch "list" "REVERSE_SNOC", DB.fetch "list" "SNOC", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "CONS", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD", DB.fetch "list" "EL", DB.fetch "list" "EL_compute"]]
Org tac number: 7
Original proof time: 0.0
Replaying proof: 0.236331

LAST_REVERSE
proof length: 3
proof time: 0.052022
Statistics
  infstep : 17
  nodes   : 7
  maxdepth: 2
Time: 0.678819
  inferstep time: 0.508657
  node_find time: 0.011769
  node_crea time: 0.084784
    pred time: 0.029332
    thmpred time: 0.000001
    mc time: 0.029233
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "HD_REVERSE", DB.fetch "list" "LAST_EL", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "CONS", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD", DB.fetch "list" "EL"], metisTools.METIS_TAC [DB.fetch "list" "HD", DB.fetch "list" "REVERSE_DEF", DB.fetch "list" "REVERSE_SNOC_DEF", DB.fetch "list" "HD_REVERSE", DB.fetch "list" "LAST_EL", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "EL_restricted", DB.fetch "list" "LAST_CONS", DB.fetch "list" "APPEND_FRONT_LAST", DB.fetch "list" "LAST_MAP", DB.fetch "list" "LAST_SNOC", DB.fetch "list" "CONS", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "HD_GENLIST_COR"]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.049454

NOT_NIL_EQ_LENGTH_NOT_0
proof length: 4
proof time: 0.002279
Statistics
  infstep : 479
  nodes   : 29
  maxdepth: 4
Time: 6.699616
  inferstep time: 4.231921
  node_find time: 0.437475
  node_crea time: 0.567714
    pred time: 0.212454
    thmpred time: 0.000011
    mc time: 0.172712
    inst time: 0.0
Proof found: boolLib.MAP_EVERY Q.ID_SPEC_TAC [[HolKernel.QUOTE " (*#loc 1 60899*)y"], [HolKernel.QUOTE " (*#loc 1 60903*)x"]] THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "LENGTH_TL", DB.fetch "list" "LAST_EL", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "LENGTH_EQ_NIL", DB.fetch "list" "LENGTH_EQ_NUM", DB.fetch "list" "LENGTH_NIL", DB.fetch "list" "LENGTH_EQ_NUM_compute", DB.fetch "list" "LENGTH_NIL_SYM", DB.fetch "list" "el_append3", DB.fetch "list" "lupdate_append2", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "DROP_NIL", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "length_nub_append"],
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.032414

last_drop
proof length: 5
proof time: 0.049073
Statistics
  infstep : 195
  nodes   : 70
  maxdepth: 5
Time: 7.168423
  inferstep time: 4.934557
  node_find time: 0.173391
  node_crea time: 1.231264
    pred time: 0.300428
    thmpred time: 0.000019
    mc time: 0.513708
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "DROP_nil", DB.fetch "list" "DROP_def", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "DROP_NIL", DB.fetch "list" "MEM_DROP", DB.fetch "list" "ZIP_DROP", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "DROP_cons", DB.fetch "list" "ALL_DISTINCT_DROP", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "TAKE_SUM", DB.fetch "list" "DROP_splitAtPki", DB.fetch "list" "LAST_EL", DB.fetch "list" "APPEND_FRONT_LAST"], boolLib.NTAC 2 boolLib.GEN_TAC THEN
  simpLib.SIMP_TAC (BasicProvers.srw_ss ()) [] THEN
  BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "DROP_cons", DB.fetch "list" "DROP_def", DB.fetch "list" "LAST_DEF", DB.fetch "list" "LAST_CONS_cond", DB.fetch "list" "LAST_APPEND_CONS", DB.fetch "list" "LAST_CONS", DB.fetch "list" "LENGTH", DB.fetch "list" "LENGTH_SNOC", DB.fetch "list" "tactictoe_thm_14", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "MEM_DROP", DB.fetch "list" "DROP_LENGTH_TOO_LONG", DB.fetch "list" "LENGTH_DROP", DB.fetch "list" "ZIP_DROP", DB.fetch "list" "DROP_NIL", DB.fetch "list" "TAKE_DROP"]]
Org tac number: 8
Original proof time: 0.0
Replaying proof: 0.290939

dropWhile_splitAtPki
Statistics
  infstep : 449
  nodes   : 103
  maxdepth: 5
Time: 10.001979
  inferstep time: 7.098973
  node_find time: 0.380471
  node_crea time: 1.338077
    pred time: 0.287819
    thmpred time: 0.00002
    mc time: 0.4931
    inst time: 0.0
Proof status: Time Out
Org tac number: 12
Original proof time: 0.0
Replaying proof: 0.463872

dropWhile_eq_nil
Statistics
  infstep : 480
  nodes   : 72
  maxdepth: 5
Time: 10.04197
  inferstep time: 7.537027
  node_find time: 0.386794
  node_crea time: 0.938543
    pred time: 0.236972
    thmpred time: 0.00002
    mc time: 0.259241
    inst time: 0.0
Proof status: Time Out
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.31563

MEM_dropWhile_IMP
proof length: 3
proof time: 0.12985
Statistics
  infstep : 76
  nodes   : 12
  maxdepth: 2
Time: 1.697945
  inferstep time: 1.336765
  node_find time: 0.051671
  node_crea time: 0.112163
    pred time: 0.02858
    thmpred time: 0.000003
    mc time: 0.045813
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 105529*)ls"] THENL [metisTools.METIS_TAC [DB.fetch "list" "dropWhile_def", DB.fetch "list" "MEM", DB.fetch "list" "dropWhile_eq_nil", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", DB.fetch "list" "ALL_DISTINCT_FILTER", DB.fetch "list" "MEM_APPEND_lemma", DB.fetch "list" "tactictoe_thm_13", DB.fetch "list" "FILTER_NEQ_NIL", DB.fetch "list" "nub_def", DB.fetch "list" "tactictoe_thm_15", DB.fetch "list" "ALL_DISTINCT", DB.fetch "list" "MEM_SPLIT_APPEND_first", DB.fetch "list" "MEM_SPLIT_APPEND_last"], metisTools.METIS_TAC [DB.fetch "list" "dropWhile_def", DB.fetch "list" "MEM", DB.fetch "list" "dropWhile_eq_nil", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "LIST_TO_SET_DEF", DB.fetch "list" "LIST_TO_SET", DB.fetch "list" "LIST_TO_SET_THM", pred_setTheory.tactictoe_thm_21, pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, pred_setTheory.tactictoe_thm_44, pred_setTheory.tactictoe_thm_45, pred_setTheory.tactictoe_thm_46, pred_setTheory.tactictoe_thm_49, DB.fetch "list" "EL_restricted", DB.fetch "list" "EL_simp_restricted"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.123586

HD_dropWhile
proof length: 4
proof time: 0.112067
Statistics
  infstep : 12
  nodes   : 8
  maxdepth: 3
Time: 0.88468
  inferstep time: 0.702787
  node_find time: 0.009197
  node_crea time: 0.104247
    pred time: 0.023688
    thmpred time: 0.000003
    mc time: 0.055558
    inst time: 0.0
Proof found: boolLib.STRIP_TAC THEN Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "NOT_EVERY", DB.fetch "list" "dropWhile_def", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "dropWhile_eq_nil", DB.fetch "list" "MEM_dropWhile_IMP", whileTheory.LEAST_DEF, DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "LAST_REVERSE", DB.fetch "list" "HD_REVERSE", DB.fetch "list" "CONS", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "HD", DB.fetch "list" "EL_restricted", DB.fetch "list" "EL", DB.fetch "list" "HD_GENLIST"],
  metisTools.METIS_TAC [DB.fetch "list" "NOT_EVERY", DB.fetch "list" "dropWhile_def", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "NOT_EXISTS", DB.fetch "list" "MEM_dropWhile_IMP", DB.fetch "list" "dropWhile_eq_nil", whileTheory.LEAST_DEF, DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "EL_restricted", DB.fetch "list" "LAST_REVERSE", DB.fetch "list" "HD", DB.fetch "list" "CONS", DB.fetch "list" "HD_REVERSE", DB.fetch "list" "HD_GENLIST_COR", DB.fetch "list" "EL", DB.fetch "list" "EL_compute"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.097113

LENGTH_dropWhile_LESS_EQ
Statistics
  infstep : 371
  nodes   : 88
  maxdepth: 5
Time: 10.090294
  inferstep time: 7.361202
  node_find time: 0.320476
  node_crea time: 1.320223
    pred time: 0.296756
    thmpred time: 0.00002
    mc time: 0.517944
    inst time: 0.0
Proof status: Time Out
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.140471

dropWhile_APPEND_EVERY
proof length: 3
proof time: 0.085603
Statistics
  infstep : 80
  nodes   : 22
  maxdepth: 3
Time: 2.604329
  inferstep time: 2.026111
  node_find time: 0.060375
  node_crea time: 0.262133
    pred time: 0.073677
    thmpred time: 0.000004
    mc time: 0.087449
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THEN (metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "dropWhile_eq_nil", DB.fetch "list" "dropWhile_def", DB.fetch "list" "HD_dropWhile", DB.fetch "list" "MEM_dropWhile_IMP", DB.fetch "list" "LENGTH_dropWhile_LESS_EQ", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "EVERY_APPEND", DB.fetch "list" "EVERY_CONG", DB.fetch "list" "every_zip_fst", DB.fetch "list" "every_zip_snd", DB.fetch "list" "EVERY_EL", DB.fetch "list" "EVERY_MEM", DB.fetch "list" "EVERY_FILTER", DB.fetch "list" "EVERY_GENLIST"])
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.071281

dropWhile_APPEND_EXISTS
proof length: 4
proof time: 0.034143
Statistics
  infstep : 14
  nodes   : 8
  maxdepth: 3
Time: 0.774819
  inferstep time: 0.607453
  node_find time: 0.009073
  node_crea time: 0.092642
    pred time: 0.027306
    thmpred time: 0.000001
    mc time: 0.040132
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 16676*)l1"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "APPEND", DB.fetch "list" "HD_dropWhile", DB.fetch "list" "dropWhile_def", DB.fetch "list" "NOT_EVERY", DB.fetch "list" "dropWhile_splitAtPki", DB.fetch "list" "NOT_EXISTS", whileTheory.LEAST_DEF, DB.fetch "list" "dropWhile_APPEND_EVERY", DB.fetch "list" "dropWhile_eq_nil", DB.fetch "list" "MEM_dropWhile_IMP", DB.fetch "list" "LENGTH_dropWhile_LESS_EQ", DB.fetch "list" "splitAtPki_APPEND", DB.fetch "list" "EXISTS_APPEND", DB.fetch "list" "EXISTS_CONG", DB.fetch "list" "EXISTS_SIMP", DB.fetch "list" "EXISTS_DEF"],
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.09203

EL_LENGTH_dropWhile_REVERSE
Statistics
  infstep : 564
  nodes   : 54
  maxdepth: 4
Time: 10.089214
  inferstep time: 6.966219
  node_find time: 0.50364
  node_crea time: 1.035289
    pred time: 0.319996
    thmpred time: 0.000084
    mc time: 0.310184
    inst time: 0.0
Proof status: Time Out
Org tac number: 11
Original proof time: 0.0
Replaying proof: 0.38303

LENGTH_TAKE_EQ
proof length: 2
proof time: 0.004836
Statistics
  infstep : 80
  nodes   : 14
  maxdepth: 3
Time: 2.31062
  inferstep time: 1.76973
  node_find time: 0.066871
  node_crea time: 0.182147
    pred time: 0.054857
    thmpred time: 0.000003
    mc time: 0.073603
    inst time: 0.0
Proof found: BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN BasicProvers.SRW_TAC [numSimps.ARITH_ss] [DB.fetch "list" "LENGTH_TAKE", DB.fetch "list" "LLEX_EL_THM", DB.fetch "list" "TAKE_APPEND1", DB.fetch "list" "TAKE_LENGTH_TOO_LONG", DB.fetch "list" "TAKE_LENGTH_ID_rwt", DB.fetch "list" "splitAtPki_EQN", DB.fetch "list" "MAP_TAKE", DB.fetch "list" "TAKE_DROP", DB.fetch "list" "TAKE_SUM", DB.fetch "list" "TAKE_splitAtPki", DB.fetch "list" "TAKE_def", DB.fetch "list" "TAKE_cons", DB.fetch "list" "TAKE_APPEND2", DB.fetch "list" "TAKE_nil", DB.fetch "list" "LENGTH_FRONT_CONS", DB.fetch "list" "LUPDATE_LENGTH"]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.117726

IMP_EVERY_LUPDATE
proof length: 5
proof time: 0.186958
Statistics
  infstep : 51
  nodes   : 20
  maxdepth: 3
Time: 2.610549
  inferstep time: 2.120241
  node_find time: 0.038724
  node_crea time: 0.274838
    pred time: 0.100629
    thmpred time: 0.000007
    mc time: 0.089634
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.STRIP_ASSUME_TAC THENL [metisTools.METIS_TAC [DB.fetch "list" "EVERY_DEF", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "EVERY2_LUPDATE_same", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "lupdate_append", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "lupdate_append2", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "EVERY_GENLIST"], BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 89421*)i"] THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "LIST_REL_CONS1", DB.fetch "list" "LIST_REL_CONS2", DB.fetch "list" "isPREFIX", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_NIL", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "lupdate_append2", DB.fetch "list" "EVERY2_LUPDATE_same", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE"],
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "EVERY_DEF", DB.fetch "list" "LIST_REL_CONS1", DB.fetch "list" "LIST_REL_CONS2", DB.fetch "list" "isPREFIX", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_NIL", pred_setTheory.tactictoe_thm_37, pred_setTheory.tactictoe_thm_41, DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "lupdate_append2", DB.fetch "list" "EVERY2_LUPDATE_same", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "lupdate_append", DB.fetch "list" "LENGTH_LUPDATE"]]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.146086

MAP_APPEND_MAP_EQ
proof length: 5
proof time: 0.008617
Statistics
  infstep : 170
  nodes   : 34
  maxdepth: 4
Time: 4.037908
  inferstep time: 2.734651
  node_find time: 0.141294
  node_crea time: 0.606663
    pred time: 0.158403
    thmpred time: 0.000006
    mc time: 0.202488
    inst time: 0.0
Proof found: Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL [boolLib.STRIP_TAC THEN
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM], simpLib.ASM_SIMP_TAC (BasicProvers.srw_ss ()) [boolLib.DISJ_IMP_THM, (DB.fetch "list" "MAP"), (DB.fetch "list" "CONS_11"), boolLib.FORALL_AND_THM] THEN
  metisTools.METIS_TAC [prim_recTheory.SIMP_REC_REL_UNIQUE, DB.fetch "list" "LIST_LIFT2_def", DB.fetch "list" "EVERY2_THM", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "MAP_EQ_EVERY2", DB.fetch "list" "MAP_EQ_f", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "tactictoe_thm_16", optionTheory.OPTION_BIND_cong, optionTheory.OPTION_MAP2_cong, optionTheory.OPTION_MAP_CONG, pred_setTheory.SUM_IMAGE_CONG, combinTheory.UPD_SAME_KEY_UNWIND]]
Org tac number: 3
Original proof time: 0.0
Replaying proof: 0.077342

LUPDATE_SOME_MAP
proof length: 3
proof time: 0.102536
Statistics
  infstep : 71
  nodes   : 15
  maxdepth: 3
Time: 2.118839
  inferstep time: 1.646968
  node_find time: 0.055306
  node_crea time: 0.177811
    pred time: 0.05289
    thmpred time: 0.000006
    mc time: 0.067343
    inst time: 0.0
Proof found: BasicProvers.Cases THENL [metisTools.METIS_TAC [optionTheory.OPTION_MAP_DEF, optionTheory.option_CLAUSES, optionTheory.SOME_SOME_APPLY, optionTheory.OPTION_MAP_EQ_SOME, optionTheory.OPTION_APPLY_def, optionTheory.OPTION_MAP_CONG, optionTheory.OPTION_MAP_CASE, optionTheory.OPTION_MAP_EQ_NONE, optionTheory.IS_SOME_MAP, optionTheory.OPTION_APPLY_MAP2, optionTheory.OPTION_MAP_COMPOSE, optionTheory.OPTION_MAP_EQ_NONE_both_ways, DB.fetch "list" "FIND_def", DB.fetch "list" "INDEX_OF_def", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "IMP_EVERY_LUPDATE"], boolLib.REWRITE_TAC [optionTheory.OPTION_MAP_DEF, optionTheory.option_CLAUSES, optionTheory.SOME_SOME_APPLY, optionTheory.OPTION_MAP_EQ_SOME, optionTheory.OPTION_APPLY_def, optionTheory.OPTION_MAP_CONG, optionTheory.OPTION_MAP_CASE, optionTheory.OPTION_MAP_EQ_NONE, optionTheory.IS_SOME_MAP, optionTheory.OPTION_APPLY_MAP2, optionTheory.OPTION_MAP_COMPOSE, optionTheory.OPTION_MAP_EQ_NONE_both_ways, DB.fetch "list" "FIND_def", DB.fetch "list" "INDEX_OF_def", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_def"]]
Org tac number: 4
Original proof time: 0.0
Replaying proof: 0.119961

ZIP_EQ_NIL
proof length: 6
proof time: 0.147633
Statistics
  infstep : 39
  nodes   : 17
  maxdepth: 4
Time: 2.398435
  inferstep time: 1.873316
  node_find time: 0.031782
  node_crea time: 0.3045
    pred time: 0.088607
    thmpred time: 0.000005
    mc time: 0.161728
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 46661*)l1"] THENL [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "ZIP", DB.fetch "list" "UNZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "EL_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "LIST_REL_EVERY_ZIP", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP"], BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "ZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "EL_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "LIST_REL_EVERY_ZIP", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "UNZIP_ZIP"] THEN
  boolLib.TRY (BasicProvers.Cases_on [HolKernel.QUOTE " (*#loc 1 46705*)l2"]) THENL
  [simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [DB.fetch "list" "ZIP", DB.fetch "list" "UNZIP_THM", DB.fetch "list" "FOLDL2_FOLDL", DB.fetch "list" "ALL_DISTINCT_ZIP", DB.fetch "list" "LENGTH_ZIP", DB.fetch "list" "EL_ZIP", DB.fetch "list" "ALL_DISTINCT_ZIP_SWAP", DB.fetch "list" "MEM_ZIP", DB.fetch "list" "ZIP_MAP", DB.fetch "list" "MAP_ZIP", DB.fetch "list" "EVERY2_EVERY", DB.fetch "list" "LIST_REL_EVERY_ZIP", DB.fetch "list" "MAP2_MAP", DB.fetch "list" "MAP2_ZIP", DB.fetch "list" "UNZIP_ZIP", DB.fetch "list" "every_zip_fst"],
  simpLib.FULL_SIMP_TAC (BasicProvers.srw_ss ()) [(DB.fetch "list" "ZIP"), (DB.fetch "list" "MAP")]]]
Org tac number: 5
Original proof time: 0.0
Replaying proof: 0.233761

LUPDATE_SAME
proof length: 8
proof time: 0.158805
Statistics
  infstep : 28
  nodes   : 14
  maxdepth: 4
Time: 1.65369
  inferstep time: 1.301065
  node_find time: 0.020828
  node_crea time: 0.196635
    pred time: 0.0628
    thmpred time: 0.000001
    mc time: 0.097582
    inst time: 0.0
Proof found: BasicProvers.Induct_on [HolKernel.QUOTE " (*#loc 1 89010*)n"] THENL [Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [metisTools.METIS_TAC [DB.fetch "list" "LENGTH", DB.fetch "list" "EL", DB.fetch "list" "EL_restricted", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "lupdate_append2", DB.fetch "list" "lupdate_append", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "EVERY2_LUPDATE_same"],
  BasicProvers.SRW_TAC [] [boolLib.EQ_IMP_THM] THEN
  metisTools.METIS_TAC [DB.fetch "list" "LUPDATE_def", DB.fetch "list" "LUPDATE_compute", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "IMP_EVERY_LUPDATE", DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "lupdate_append2", DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", DB.fetch "list" "lupdate_append", DB.fetch "list" "LENGTH_LUPDATE", DB.fetch "list" "LUPDATE_SNOC", DB.fetch "list" "LUPDATE_MAP", DB.fetch "list" "LUPDATE_NIL", DB.fetch "list" "MEM_LUPDATE_E", DB.fetch "list" "EVERY2_LUPDATE_same"]], Prim_rec.INDUCT_THEN ((DB.fetch "list" "list_INDUCT")) boolLib.ASSUME_TAC THENL
  [BasicProvers.SRW_TAC [] [DB.fetch "list" "LENGTH", DB.fetch "list" "EL", DB.fetch "list" "EL_restricted", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", arithmeticTheory.LESS_NOT_SUC, arithmeticTheory.LESS_SUC_EQ_COR, prim_recTheory.LESS_MONO, prim_recTheory.SUC_LESS, arithmeticTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO_EQ, DB.fetch "list" "lupdate_append2", DB.fetch "list" "lupdate_append", DB.fetch "list" "LENGTH_LUPDATE"],
  metisTools.METIS_TAC [DB.fetch "list" "EL_restricted", DB.fetch "list" "LENGTH", DB.fetch "list" "EL", arithmeticTheory.tactictoe_thm_11, DB.fetch "list" "LUPDATE_SEM", DB.fetch "list" "EL_LUPDATE", DB.fetch "list" "MEM_LUPDATE", arithmeticTheory.LESS_NOT_SUC, arithmeticTheory.LESS_SUC_EQ_COR, prim_recTheory.LESS_MONO, prim_recTheory.SUC_LESS, arithmeticTheory.LESS_MONO_EQ, prim_recTheory.LESS_MONO_EQ, DB.fetch "list" "LUPDATE_LENGTH", DB.fetch "list" "LUPDATE_def", DB.fetch "list" "lupdate_append2"]]]
Org tac number: 2
Original proof time: 0.0
Replaying proof: 0.061776

LAST_compute
proof length: 1
proof time: 0.110992
Statistics
  infstep : 1
  nodes   : 2
  maxdepth: 1
Time: 0.161429
  inferstep time: 0.127508
  node_find time: 0.00071
  node_crea time: 0.016274
    pred time: 0.003338
    thmpred time: 0.000001
    mc time: 0.008265
    inst time: 0.0
Proof found: (metisTools.METIS_TAC [DB.fetch "list" "LAST_CONS" , DB.fetch "list" "FRONT_CONS" , DB.fetch "list" "LAST_DEF" , DB.fetch "list" "LAST_CONS_cond" , DB.fetch "list" "LAST_APPEND_CONS" , DB.fetch "list" "APPEND_FRONT_LAST" , DB.fetch "list" "HD_REVERSE" , DB.fetch "list" "LAST_EL" , DB.fetch "list" "LAST_MAP" , DB.fetch "list" "LAST_REVERSE" , DB.fetch "list" "LAST_SNOC" , DB.fetch "list" "last_drop" , DB.fetch "list" "isPREFIX_THM" , DB.fetch "list" "LIST_REL_cases" , DB.fetch "list" "LIST_REL_def" , DB.fetch "list" "tactictoe_thm_5"])
Org tac number: 1
Original proof time: 0.0
Replaying proof: 0.009213
Replaying proof: 0.000528
Replaying proof: 0.000322
Bad stac: 4
